definitions:
  account.PaymentMethod:
    enum:
    - ""
    - credit card
    type: string
    x-enum-varnames:
    - PaymentMethodNone
    - PaymentMethodCreditCard
  account.PaymentType:
    enum:
    - ""
    - prepaid
    type: string
    x-enum-varnames:
    - PaymentTypeNone
    - PaymentTypePrepaid
  action.Action:
    properties:
      id:
        type: string
      next_id:
        description: represent next target action id. if it not set, just go to next
          action in the action array.
        type: string
      option:
        items:
          type: integer
        type: array
      tm_execute:
        description: represent when this action has executed. This is used in call-manager.
        type: string
      type:
        $ref: '#/definitions/action.Type'
    type: object
  action.Type:
    enum:
    - amd
    - answer
    - beep
    - branch
    - call
    - chatbot_talk
    - condition_call_digits
    - condition_call_status
    - condition_datetime
    - condition_variable
    - confbridge_join
    - conference_join
    - connect
    - conversation_send
    - digits_receive
    - digits_send
    - echo
    - external_media_start
    - external_media_stop
    - fetch
    - fetch_flow
    - goto
    - hangup
    - message_send
    - mute
    - play
    - queue_join
    - recording_start
    - recording_stop
    - sleep
    - stop
    - stream_echo
    - talk
    - transcribe_start
    - transcribe_stop
    - transcribe_recording
    - variable_set
    - webhook_send
    type: string
    x-enum-comments:
      TypeConditionCallDigits: flow-manager. condition check(call's digits)
      TypeConditionCallStatus: flow-manager. condition check(call's status)
      TypeDigitsReceive: call-manager. receive the digits(dtmfs).
      TypeFetchFlow: flow-manager.
    x-enum-varnames:
    - TypeAMD
    - TypeAnswer
    - TypeBeep
    - TypeBranch
    - TypeCall
    - TypeChatbotTalk
    - TypeConditionCallDigits
    - TypeConditionCallStatus
    - TypeConditionDatetime
    - TypeConditionVariable
    - TypeConfbridgeJoin
    - TypeConferenceJoin
    - TypeConnect
    - TypeConversationSend
    - TypeDigitsReceive
    - TypeDigitsSend
    - TypeEcho
    - TypeExternalMediaStart
    - TypeExternalMediaStop
    - TypeFetch
    - TypeFetchFlow
    - TypeGoto
    - TypeHangup
    - TypeMessageSend
    - TypeMute
    - TypePlay
    - TypeQueueJoin
    - TypeRecordingStart
    - TypeRecordingStop
    - TypeSleep
    - TypeStop
    - TypeStreamEcho
    - TypeTalk
    - TypeTranscribeStart
    - TypeTranscribeStop
    - TypeTranscribeRecording
    - TypeVariableSet
    - TypeWebhookSend
  activeflow.Activeflow:
    properties:
      current_action:
        $ref: '#/definitions/action.Action'
      current_stack_id:
        description: current info
        type: string
      customer_id:
        type: string
      execute_count:
        description: execute
        type: integer
      executed_actions:
        description: list of executed actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      flow_id:
        type: string
      forward_action_id:
        type: string
      forward_stack_id:
        description: forward info
        type: string
      id:
        type: string
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/activeflow.ReferenceType'
      stack_map:
        additionalProperties:
          $ref: '#/definitions/stack.Stack'
        description: stack
        type: object
      status:
        $ref: '#/definitions/activeflow.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  activeflow.ReferenceType:
    enum:
    - ""
    - call
    - message
    type: string
    x-enum-comments:
      ReferenceTypeCall: call
      ReferenceTypeMessage: message
      ReferenceTypeNone: none
    x-enum-varnames:
    - ReferenceTypeNone
    - ReferenceTypeCall
    - ReferenceTypeMessage
  activeflow.Status:
    enum:
    - ""
    - running
    - ended
    type: string
    x-enum-varnames:
    - StatusNone
    - StatusRunning
    - StatusEnded
  activeflow.WebhookMessage:
    properties:
      current_action:
        $ref: '#/definitions/action.Action'
      customer_id:
        type: string
      executed_actions:
        description: list of executed actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      flow_id:
        type: string
      forward_action_id:
        type: string
      id:
        type: string
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/activeflow.ReferenceType'
      status:
        $ref: '#/definitions/activeflow.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  address.Address:
    properties:
      detail:
        description: detail description.
        type: string
      name:
        description: name
        type: string
      target:
        description: address endpoint
        type: string
      target_name:
        description: address's name.
        type: string
      type:
        allOf:
        - $ref: '#/definitions/address.Type'
        description: type of address
    type: object
  address.Type:
    enum:
    - ""
    - agent
    - conference
    - extension
    - line
    - sip
    - tel
    type: string
    x-enum-comments:
      TypeAgent: target is agent's id.
      TypeConference: target is conference's id
      TypeExtension: target is extension
      TypeLine: target is naver line's id
      TypeNone: no type specified
      TypeSIP: target is sip destination
      TypeTel: target tel number
    x-enum-varnames:
    - TypeNone
    - TypeAgent
    - TypeConference
    - TypeExtension
    - TypeLine
    - TypeSIP
    - TypeTel
  agent.Agent:
    properties:
      addresses:
        description: agent's endpoint addresses
        items:
          $ref: '#/definitions/address.Address'
        type: array
      customer_id:
        description: customer's id
        type: string
      detail:
        description: agent's detail
        type: string
      id:
        description: agent id
        type: string
      name:
        description: agent's name
        type: string
      password_hash:
        description: hashed Password
        type: string
      permission:
        allOf:
        - $ref: '#/definitions/agent.Permission'
        description: agent's permission.
      ring_method:
        description: agent's ring method
        type: string
      status:
        allOf:
        - $ref: '#/definitions/agent.Status'
        description: agent's status
      tag_ids:
        description: agent's tag ids
        items:
          type: string
        type: array
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      username:
        description: agent's username
        type: string
    type: object
  agent.Permission:
    enum:
    - 0
    - 65535
    - 1
    - 15
    - 16
    - 32
    - 64
    - 240
    type: integer
    x-enum-comments:
      PermissionAll: "65535"
      PermissionCustomerAdmin: 32. Permission for customer level admin
      PermissionCustomerAgent: 16. Permission for customer level agent
      PermissionCustomerAll: 240. Permission for customer level
      PermissionCustomerManager: 64. Permission for customer level manager
      PermissionProjectAll: 15. permission for project level
      PermissionProjectSuperAdmin: 1. permission for voipbin project super admin.
    x-enum-varnames:
    - PermissionNone
    - PermissionAll
    - PermissionProjectSuperAdmin
    - PermissionProjectAll
    - PermissionCustomerAgent
    - PermissionCustomerAdmin
    - PermissionCustomerManager
    - PermissionCustomerAll
  agent.Status:
    enum:
    - ""
    - available
    - away
    - busy
    - offline
    - ringing
    type: string
    x-enum-comments:
      StatusAvailable: available
      StatusAway: away
      StatusBusy: busy
      StatusNone: none
      StatusOffline: offline
      StatusRinging: voipbin is making a call to the agent
    x-enum-varnames:
    - StatusNone
    - StatusAvailable
    - StatusAway
    - StatusBusy
    - StatusOffline
    - StatusRinging
  agent.WebhookMessage:
    properties:
      addresses:
        description: agent's endpoint addresses
        items:
          $ref: '#/definitions/address.Address'
        type: array
      customer_id:
        description: customer's id
        type: string
      detail:
        description: agent's detail
        type: string
      id:
        description: agent id
        type: string
      name:
        description: agent's name
        type: string
      permission:
        allOf:
        - $ref: '#/definitions/agent.Permission'
        description: agent's permission.
      ring_method:
        description: agent's ring method
        type: string
      status:
        allOf:
        - $ref: '#/definitions/agent.Status'
        description: agent's status
      tag_ids:
        description: agent's tag ids
        items:
          type: string
        type: array
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      username:
        description: agent's username
        type: string
    type: object
  availablenumber.Feature:
    enum:
    - emergency
    - fax
    - mms
    - sms
    - voice
    type: string
    x-enum-varnames:
    - FeatureEmergency
    - FeatureFax
    - FeatureMMS
    - FeatureSMS
    - FeatureVoice
  availablenumber.WebhookMessage:
    properties:
      country:
        type: string
      features:
        items:
          $ref: '#/definitions/availablenumber.Feature'
        type: array
      number:
        type: string
      postal_code:
        type: string
      region:
        type: string
    type: object
  call.Call:
    properties:
      action:
        allOf:
        - $ref: '#/definitions/action.Action'
        description: call's current action.
      action_next_hold:
        description: call's next action hold. if true, don't allow to go next action
        type: boolean
      active_flow_id:
        description: active flow id
        type: string
      bridge_id:
        description: call bridge id
        type: string
      chained_call_ids:
        description: chained call ids
        items:
          type: string
        type: array
      channel_id:
        type: string
      confbridge_id:
        description: currently joined confbridge id.
        type: string
      customer_id:
        type: string
      data:
        additionalProperties:
          type: string
        type: object
      destination:
        $ref: '#/definitions/address.Address'
      dialroute_id:
        description: dialroute(valid only tel type outgoing call)
        type: string
      dialroutes:
        description: list of dialroutes for dialing.
        items:
          $ref: '#/definitions/route.Route'
        type: array
      direction:
        allOf:
        - $ref: '#/definitions/call.Direction'
        description: direction of call. incoming/outgoing
      external_media_id:
        description: external media id(current)
        type: string
      flow_id:
        description: flow id
        type: string
      groupcall_id:
        description: groupcall id
        type: string
      hangup_by:
        $ref: '#/definitions/call.HangupBy'
      hangup_reason:
        $ref: '#/definitions/call.HangupReason'
      id:
        description: identity
        type: string
      master_call_id:
        description: etc info
        type: string
      mute_direction:
        allOf:
        - $ref: '#/definitions/call.MuteDirection'
        description: mute direction
      recording_id:
        description: recording id(current)
        type: string
      recording_ids:
        description: recording ids
        items:
          type: string
        type: array
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: source/destination
      status:
        allOf:
        - $ref: '#/definitions/call.Status'
        description: info
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_hangup:
        type: string
      tm_progressing:
        type: string
      tm_ringing:
        type: string
      tm_update:
        type: string
      type:
        allOf:
        - $ref: '#/definitions/call.Type'
        description: call type
    type: object
  call.Direction:
    enum:
    - incoming
    - outgoing
    type: string
    x-enum-varnames:
    - DirectionIncoming
    - DirectionOutgoing
  call.HangupBy:
    enum:
    - ""
    - remote
    - local
    type: string
    x-enum-comments:
      HangupByLocal: local end hangup the call first.
      HangupByNone: no one hangup yet.
      HangupByRemote: remote end hangup the call first.
    x-enum-varnames:
    - HangupByNone
    - HangupByRemote
    - HangupByLocal
  call.HangupReason:
    enum:
    - ""
    - normal
    - failed
    - busy
    - cancel
    - timeout
    - noanswer
    - dialout
    - amd
    type: string
    x-enum-comments:
      HangupReasonAMD: the call's amd action result hung up the call.
      HangupReasonBusy: the destination is on the line with another caller.
      HangupReasonCanceled: call was cancelled by the originator before it was answered.
      HangupReasonDialout: The call reached dialing timeout before it was answered.
        This timeout is fired by our time out(outgoing call).
      HangupReasonFailed: the call attempt(signal) was not reached to the phone network.
      HangupReasonNoanswer: The call rejected with noanswer status.
      HangupReasonNormal: the call has ended after answer.
      HangupReasonTimeout: call reached max call duration after it was answered.
    x-enum-varnames:
    - HangupReasonNone
    - HangupReasonNormal
    - HangupReasonFailed
    - HangupReasonBusy
    - HangupReasonCanceled
    - HangupReasonTimeout
    - HangupReasonNoanswer
    - HangupReasonDialout
    - HangupReasonAMD
  call.MuteDirection:
    enum:
    - ""
    - both
    - out
    - in
    type: string
    x-enum-comments:
      MuteDirectionBoth: mute the channel in/out both.
      MuteDirectionIn: mute the channel incoming
      MuteDirectionNone: none
    x-enum-varnames:
    - MuteDirectionNone
    - MuteDirectionBoth
    - MuteDirectionOut
    - MuteDirectionIn
  call.Status:
    enum:
    - dialing
    - ringing
    - progressing
    - terminating
    - canceling
    - hangup
    type: string
    x-enum-comments:
      StatusCanceling: The call originator is canceling the call.
      StatusDialing: The call is created. We are dialing to the destination.
      StatusHangup: The call has been completed.
      StatusProgressing: The call has answered. The both endpoints are talking to
        each other.
      StatusRinging: The destination has confirmed that the call is ringng.
      StatusTerminating: The call is terminating.
    x-enum-varnames:
    - StatusDialing
    - StatusRinging
    - StatusProgressing
    - StatusTerminating
    - StatusCanceling
    - StatusHangup
  call.Type:
    enum:
    - ""
    - flow
    - conference
    - sip-service
    type: string
    x-enum-comments:
      TypeConference: conference call.
      TypeFlow: executing the call-flow
      TypeSipService: sip-service call. Will execute the corresponding the pre-defined
        sip-service by the destination.
    x-enum-varnames:
    - TypeNone
    - TypeFlow
    - TypeConference
    - TypeSipService
  call.WebhookMessage:
    properties:
      action:
        $ref: '#/definitions/action.Action'
      activeflow_id:
        type: string
      chained_call_ids:
        description: chained call ids
        items:
          type: string
        type: array
      customer_id:
        type: string
      destination:
        $ref: '#/definitions/address.Address'
      direction:
        $ref: '#/definitions/call.Direction'
      flow_id:
        description: flow id
        type: string
      groupcall_id:
        description: groupcall id, if this set, that means this call is part of given
          groupcall.
        type: string
      hangup_by:
        $ref: '#/definitions/call.HangupBy'
      hangup_reason:
        $ref: '#/definitions/call.HangupReason'
      id:
        description: identity
        type: string
      master_call_id:
        description: etc info
        type: string
      mute_direction:
        $ref: '#/definitions/call.MuteDirection'
      recording_id:
        description: recording id(current)
        type: string
      recording_ids:
        description: recording ids
        items:
          type: string
        type: array
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: source/destination
      status:
        allOf:
        - $ref: '#/definitions/call.Status'
        description: info
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_hangup:
        type: string
      tm_progressing:
        description: timestamp
        type: string
      tm_ringing:
        type: string
      tm_update:
        type: string
      type:
        allOf:
        - $ref: '#/definitions/call.Type'
        description: call type
    type: object
  campaign.Campaign:
    properties:
      actions:
        description: this actions will be stored to the flow
        items:
          $ref: '#/definitions/action.Action'
        type: array
      customer_id:
        type: string
      detail:
        type: string
      end_handle:
        $ref: '#/definitions/campaign.EndHandle'
      execute:
        allOf:
        - $ref: '#/definitions/campaign.Execute'
        description: if the execute is running, this sets to true
      flow_id:
        description: action settings
        type: string
      id:
        type: string
      name:
        type: string
      next_campaign_id:
        type: string
      outdial_id:
        type: string
      outplan_id:
        description: resource info
        type: string
      queue_id:
        type: string
      service_level:
        type: integer
      status:
        $ref: '#/definitions/campaign.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/campaign.Type'
    type: object
  campaign.EndHandle:
    enum:
    - stop
    - continue
    type: string
    x-enum-comments:
      EndHandleContinue: the campaign will continue to run after outdial has no more
        outdial target.
      EndHandleStop: the campaign will stop if the outdial has no more outdial target
    x-enum-varnames:
    - EndHandleStop
    - EndHandleContinue
  campaign.Execute:
    enum:
    - run
    - stop
    type: string
    x-enum-varnames:
    - ExecuteRun
    - ExecuteStop
  campaign.Status:
    enum:
    - stop
    - stopping
    - run
    type: string
    x-enum-comments:
      StatusStopping: preparing stop
    x-enum-varnames:
    - StatusStop
    - StatusStopping
    - StatusRun
  campaign.Type:
    enum:
    - call
    - flow
    type: string
    x-enum-comments:
      TypeCall: make a call to the destination
      TypeFlow: execute a flow with the destination
    x-enum-varnames:
    - TypeCall
    - TypeFlow
  campaign.WebhookMessage:
    properties:
      actions:
        description: action settings
        items:
          $ref: '#/definitions/action.Action'
        type: array
      customer_id:
        type: string
      detail:
        type: string
      end_handle:
        $ref: '#/definitions/campaign.EndHandle'
      id:
        type: string
      name:
        type: string
      next_campaign_id:
        type: string
      outdial_id:
        type: string
      outplan_id:
        description: resource info
        type: string
      queue_id:
        type: string
      service_level:
        type: integer
      status:
        $ref: '#/definitions/campaign.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/campaign.Type'
    type: object
  campaigncall.ReferenceType:
    enum:
    - none
    - call
    - flow
    type: string
    x-enum-varnames:
    - ReferenceTypeNone
    - ReferenceTypeCall
    - ReferenceTypeFlow
  campaigncall.Result:
    enum:
    - ""
    - success
    - fail
    type: string
    x-enum-comments:
      ResultFail: fail
      ResultNone: no result.
      ResultSuccess: success
    x-enum-varnames:
    - ResultNone
    - ResultSuccess
    - ResultFail
  campaigncall.Status:
    enum:
    - dialing
    - progressing
    - done
    type: string
    x-enum-comments:
      StatusDialing: the campaigncall is dialing(not answered yet)
      StatusDone: the campaigncall is hungup
      StatusProgressing: the campaigncall is progressing(the call answered)
    x-enum-varnames:
    - StatusDialing
    - StatusProgressing
    - StatusDone
  campaigncall.WebhookMessage:
    properties:
      activeflow_id:
        description: this is required
        type: string
      campaign_id:
        type: string
      customer_id:
        type: string
      destination:
        $ref: '#/definitions/address.Address'
      destination_index:
        type: integer
      flow_id:
        type: string
      id:
        type: string
      outdial_id:
        type: string
      outdial_target_id:
        type: string
      outplan_id:
        type: string
      queue_id:
        type: string
      reference_id:
        description: reference id
        type: string
      reference_type:
        allOf:
        - $ref: '#/definitions/campaigncall.ReferenceType'
        description: none or call
      result:
        $ref: '#/definitions/campaigncall.Result'
      source:
        $ref: '#/definitions/address.Address'
      status:
        $ref: '#/definitions/campaigncall.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      try_count:
        type: integer
    type: object
  chat.Chat:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        description: owned agent id
        type: string
      participant_ids:
        description: list of participated ids(agent ids)
        items:
          type: string
        type: array
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/chat.Type'
    type: object
  chat.Type:
    enum:
    - normal
    - group
    type: string
    x-enum-comments:
      TypeNormal: 1:1 chat
    x-enum-varnames:
    - TypeNormal
    - TypeGroup
  chat.WebhookMessage:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        description: owned agent id
        type: string
      participant_ids:
        description: list of participated ids(agent ids)
        items:
          type: string
        type: array
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/chat.Type'
    type: object
  chatbot.Chatbot:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      engine_type:
        $ref: '#/definitions/chatbot.EngineType'
      id:
        type: string
      init_prompt:
        type: string
      name:
        type: string
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  chatbot.EngineType:
    enum:
    - chatGPT
    - clova
    type: string
    x-enum-comments:
      EngineTypeChatGPT: openai chatGPT. https://chat.openai.com/chat
      EngineTypeClova: naver clova. https://www.ncloud.com/product/aiService/chatbot
    x-enum-varnames:
    - EngineTypeChatGPT
    - EngineTypeClova
  chatbot.WebhookMessage:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      engine_type:
        $ref: '#/definitions/chatbot.EngineType'
      id:
        type: string
      init_prompt:
        type: string
      name:
        type: string
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  chatbotcall.Chatbotcall:
    properties:
      activeflow_id:
        type: string
      chatbot_engine_type:
        $ref: '#/definitions/chatbot.EngineType'
      chatbot_id:
        type: string
      confbridge_id:
        type: string
      customer_id:
        type: string
      gender:
        $ref: '#/definitions/chatbotcall.Gender'
      id:
        type: string
      language:
        type: string
      messages:
        items:
          $ref: '#/definitions/chatbotcall.Message'
        type: array
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/chatbotcall.ReferenceType'
      status:
        $ref: '#/definitions/chatbotcall.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_end:
        type: string
      tm_update:
        type: string
      transcribe_id:
        type: string
    type: object
  chatbotcall.Gender:
    enum:
    - male
    - female
    - neutral
    type: string
    x-enum-varnames:
    - GenderMale
    - GenderFemale
    - GenderNuetral
  chatbotcall.Message:
    properties:
      content:
        type: string
      role:
        type: string
    type: object
  chatbotcall.ReferenceType:
    enum:
    - call
    type: string
    x-enum-varnames:
    - ReferenceTypeCall
  chatbotcall.Status:
    enum:
    - initiating
    - progressing
    - end
    type: string
    x-enum-varnames:
    - StatusInitiating
    - StatusProgressing
    - StatusEnd
  chatbotcall.WebhookMessage:
    properties:
      activeflow_id:
        type: string
      chatbot_id:
        type: string
      confbridge_id:
        type: string
      customer_id:
        type: string
      gender:
        $ref: '#/definitions/chatbotcall.Gender'
      id:
        type: string
      language:
        type: string
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/chatbotcall.ReferenceType'
      status:
        $ref: '#/definitions/chatbotcall.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_end:
        type: string
      tm_update:
        type: string
      transcribe_id:
        type: string
    type: object
  chatroom.Chatroom:
    properties:
      agent_id:
        type: string
      chat_id:
        type: string
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      onwer_id:
        description: chatroom's owner agnet id.
        type: string
      participant_ids:
        description: list of participated agent ids
        items:
          type: string
        type: array
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/chatroom.Type'
    type: object
  chatroom.Type:
    enum:
    - unknown
    - normal
    - group
    type: string
    x-enum-varnames:
    - TypeUnkonwn
    - TypeNormal
    - TypeGroup
  chatroom.WebhookMessage:
    properties:
      agent_id:
        type: string
      chat_id:
        type: string
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      owner_id:
        description: owned agent id
        type: string
      participant_ids:
        description: list of participated ids(agent ids)
        items:
          type: string
        type: array
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/chatroom.Type'
    type: object
  conference.Conference:
    properties:
      confbridge_id:
        description: confbridge id(call-manager)
        type: string
      conferencecall_ids:
        description: list of conferencecall ids of the conference
        items:
          type: string
        type: array
      customer_id:
        type: string
      data:
        additionalProperties: true
        type: object
      detail:
        type: string
      flow_id:
        description: flow id(flow-manager)
        type: string
      id:
        type: string
      name:
        type: string
      post_actions:
        description: post actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      pre_actions:
        description: pre actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      recording_id:
        type: string
      recording_ids:
        items:
          type: string
        type: array
      status:
        $ref: '#/definitions/conference.Status'
      timeout:
        description: timeout. second
        type: integer
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_end:
        description: represent the timestamp for conference ended.
        type: string
      tm_update:
        type: string
      transcribe_id:
        type: string
      transcribe_ids:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/conference.Type'
    type: object
  conference.Status:
    enum:
    - starting
    - progressing
    - terminating
    - terminated
    type: string
    x-enum-varnames:
    - StatusStarting
    - StatusProgressing
    - StatusTerminating
    - StatusTerminated
  conference.Type:
    enum:
    - ""
    - conference
    - connect
    - queue
    type: string
    x-enum-comments:
      TypeConference: conference for more than 3 calls join
      TypeConnect: connect type kicks out the participant if the 1 call has left in
        the conference.
      TypeQueue: queue for conference room for queue.
    x-enum-varnames:
    - TypeNone
    - TypeConference
    - TypeConnect
    - TypeQueue
  conferencecall.Conferencecall:
    properties:
      conference_id:
        type: string
      customer_id:
        type: string
      id:
        type: string
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/conferencecall.ReferenceType'
      status:
        $ref: '#/definitions/conferencecall.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  conferencecall.ReferenceType:
    enum:
    - call
    type: string
    x-enum-varnames:
    - ReferenceTypeCall
  conferencecall.Status:
    enum:
    - joining
    - joined
    - leaving
    - leaved
    type: string
    x-enum-varnames:
    - StatusJoining
    - StatusJoined
    - StatusLeaving
    - StatusLeaved
  conversation.ReferenceType:
    enum:
    - message
    - line
    type: string
    x-enum-comments:
      ReferenceTypeMessage: sms, mms
    x-enum-varnames:
    - ReferenceTypeMessage
    - ReferenceTypeLine
  conversation.WebhookMessage:
    properties:
      account_id:
        type: string
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      participants:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/conversation.ReferenceType'
      source:
        $ref: '#/definitions/address.Address'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  customer.Customer:
    properties:
      address:
        type: string
      billing_account_id:
        description: default billing account id
        type: string
      detail:
        description: detail
        type: string
      email:
        type: string
      id:
        description: Customer's ID
        type: string
      name:
        description: name
        type: string
      phone_number:
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      webhook_method:
        description: webhook info
        type: string
      webhook_uri:
        description: webhook uri
        type: string
    type: object
  customer.WebhookMessage:
    properties:
      address:
        type: string
      billing_account_id:
        description: default billing account id
        type: string
      detail:
        description: detail
        type: string
      email:
        type: string
      id:
        description: Customer's ID
        type: string
      name:
        description: name
        type: string
      phone_number:
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      webhook_method:
        description: webhook info
        type: string
      webhook_uri:
        description: webhook uri
        type: string
    type: object
  extension.Extension:
    properties:
      aor_id:
        type: string
      auth_id:
        type: string
      customer_id:
        type: string
      detail:
        type: string
      domain_name:
        type: string
      endpoint_id:
        description: asterisk resources
        type: string
      extension:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        description: DO NOT CHANGE. This used by the kamailio's INVITE validation
        type: string
      realm:
        description: DO NOT CHANGE. This used by the kamailio's INVITE validation
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      username:
        description: DO NOT CHANGE. This used by the kamailio's INVITE validation
        type: string
    type: object
  flow.Flow:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      persist:
        type: boolean
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/flow.Type'
    type: object
  flow.Type:
    enum:
    - ""
    - flow
    - conference
    - queue
    - campaign
    - transfer
    type: string
    x-enum-comments:
      TypeCampaign: campaign-manager
      TypeConference: conference-manager
      TypeFlow: normal flow
      TypeQueue: queue-manager
      TypeTransfer: transfer-manager
    x-enum-varnames:
    - TypeNone
    - TypeFlow
    - TypeConference
    - TypeQueue
    - TypeCampaign
    - TypeTransfer
  flow.WebhookMessage:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/flow.Type'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyActiveflowsPOST:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      flow_id:
        type: string
      id:
        description: activeflow id
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDAddressesPUT:
    properties:
      addresses:
        items:
          $ref: '#/definitions/address.Address'
        type: array
    required:
    - addresses
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
      ring_method:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDPermissionPUT:
    properties:
      permission:
        $ref: '#/definitions/agent.Permission'
    required:
    - permission
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDStatusPUT:
    properties:
      status:
        $ref: '#/definitions/agent.Status'
    required:
    - status
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDTagIDsPUT:
    properties:
      tag_ids:
        items:
          type: string
        type: array
    required:
    - tag_ids
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsPOST:
    properties:
      addresses:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      detail:
        type: string
      name:
        type: string
      password:
        type: string
      permission:
        $ref: '#/definitions/agent.Permission'
      ring_method:
        type: string
      tag_ids:
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - password
    - username
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCallsPOST:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      destinations:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      flow_id:
        type: string
      source:
        $ref: '#/definitions/address.Address'
    required:
    - destinations
    - source
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDPUT:
    properties:
      detail:
        type: string
      end_handle:
        $ref: '#/definitions/campaign.EndHandle'
      name:
        type: string
      service_level:
        type: integer
      type:
        $ref: '#/definitions/campaign.Type'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDResourceInfoPUT:
    properties:
      next_campaign_id:
        type: string
      outdial_id:
        type: string
      outplan_id:
        type: string
      queue_id:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDStatusPUT:
    properties:
      status:
        $ref: '#/definitions/campaign.Status'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsPOST:
    properties:
      actions:
        description: this actions will be stored to the flow
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        type: string
      end_handle:
        $ref: '#/definitions/campaign.EndHandle'
      name:
        type: string
      next_campaign_id:
        type: string
      outdial_id:
        type: string
      outplan_id:
        description: resource info
        type: string
      queue_id:
        type: string
      service_level:
        type: integer
      type:
        $ref: '#/definitions/campaign.Type'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatbotsIDPUT:
    properties:
      detail:
        type: string
      engine_type:
        $ref: '#/definitions/chatbot.EngineType'
      init_prompt:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatbotsPOST:
    properties:
      detail:
        type: string
      engine_type:
        $ref: '#/definitions/chatbot.EngineType'
      init_prompt:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatmessagesPOST:
    properties:
      chat_id:
        type: string
      medias:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_chat-manager_git_models_media.Media'
        type: array
      source:
        $ref: '#/definitions/address.Address'
      text:
        type: string
      type:
        $ref: '#/definitions/messagechat.Type'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatroommessagesPOST:
    properties:
      chatroom_id:
        type: string
      text:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatroomsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatroomsPOST:
    properties:
      detail:
        type: string
      name:
        type: string
      participant_ids:
        items:
          type: string
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatsIDOwnerIDPUT:
    properties:
      owner_id:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatsPOST:
    properties:
      detail:
        type: string
      name:
        type: string
      owner_id:
        type: string
      participant_ids:
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/chat.Type'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConferencesIDTranscribeStartPOST:
    properties:
      language:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConferencesPOST:
    properties:
      data:
        additionalProperties: true
        type: object
      detail:
        type: string
      name:
        type: string
      post_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      pre_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      timeout:
        description: timeout. second
        type: integer
      type:
        $ref: '#/definitions/conference.Type'
    required:
    - type
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConversationAccountsPOST:
    properties:
      detail:
        type: string
      name:
        type: string
      secret:
        type: string
      token:
        type: string
      type:
        $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_account.Type'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConversationsIDMessagesPOST:
    properties:
      text:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCustomersPOST:
    properties:
      address:
        type: string
      detail:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
      username:
        type: string
      webhook_method:
        type: string
      webhook_uri:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyExtensionsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyExtensionsPOST:
    properties:
      detail:
        type: string
      extension:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyFlowsIDPUT:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyFlowsPOST:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyGroupcallsPOST:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      answer_method:
        $ref: '#/definitions/groupcall.AnswerMethod'
      destinations:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      flow_id:
        type: string
      ring_method:
        $ref: '#/definitions/groupcall.RingMethod'
      source:
        $ref: '#/definitions/address.Address'
    required:
    - destinations
    - source
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyLoginPOST:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyMessagesPOST:
    properties:
      destinations:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      source:
        $ref: '#/definitions/address.Address'
      text:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyNumbersIDFlowIDPUT:
    properties:
      call_flow_id:
        type: string
      message_flow_id:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyNumbersIDPUT:
    properties:
      call_flow_id:
        type: string
      detail:
        type: string
      message_flow_id:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyNumbersPOST:
    properties:
      call_flow_id:
        type: string
      detail:
        type: string
      message_flow_id:
        type: string
      name:
        type: string
      number:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsIDDataPUT:
    properties:
      data:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsPOST:
    properties:
      campaign_id:
        type: string
      data:
        type: string
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutplansIDDialInfoPUT:
    properties:
      dial_timeout:
        type: integer
      max_try_count_0:
        type: integer
      max_try_count_1:
        type: integer
      max_try_count_2:
        type: integer
      max_try_count_3:
        type: integer
      max_try_count_4:
        type: integer
      source:
        $ref: '#/definitions/address.Address'
      try_interval:
        type: integer
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutplansIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutplansPOST:
    properties:
      detail:
        type: string
      dial_timeout:
        type: integer
      max_try_count_0:
        type: integer
      max_try_count_1:
        type: integer
      max_try_count_2:
        type: integer
      max_try_count_3:
        type: integer
      max_try_count_4:
        type: integer
      name:
        type: string
      source:
        $ref: '#/definitions/address.Address'
      try_interval:
        type: integer
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyProvidersIDPUT:
    properties:
      detail:
        type: string
      hostname:
        type: string
      name:
        type: string
      tech_headers:
        additionalProperties:
          type: string
        type: object
      tech_postfix:
        type: string
      tech_prefix:
        type: string
      type:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyProvidersPOST:
    properties:
      detail:
        type: string
      hostname:
        type: string
      name:
        type: string
      tech_headers:
        additionalProperties:
          type: string
        type: object
      tech_postfix:
        type: string
      tech_prefix:
        type: string
      type:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyQueuesIDActionsPUT:
    properties:
      timeout_service:
        type: integer
      timeout_wait:
        type: integer
      wait_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyQueuesIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
      routing_method:
        $ref: '#/definitions/queue.RoutingMethod'
      service_timeout:
        type: integer
      tag_ids:
        items:
          type: string
        type: array
      wait_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      wait_timeout:
        type: integer
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyQueuesIDTagIDsPUT:
    properties:
      tag_ids:
        items:
          type: string
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyRoutesPOST:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      name:
        type: string
      priority:
        type: integer
      provider_id:
        type: string
      target:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyTagsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyTranscribesPOST:
    properties:
      direction:
        $ref: '#/definitions/transcribe.Direction'
      language:
        type: string
      reference_id:
        type: string
      transcribe_type:
        $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.TranscribeReferenceType'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyTransfersPOST:
    properties:
      transferee_addresses:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      transferer_call_id:
        type: string
      type:
        $ref: '#/definitions/transfer.Type'
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.TranscribeReferenceType:
    enum:
    - call
    - conference
    - recording
    type: string
    x-enum-comments:
      TranscribeReferenceTypeCall: call
      TranscribeReferenceTypeConference: conference
      TranscribeReferenceTypeRecording: recording
    x-enum-varnames:
    - TranscribeReferenceTypeCall
    - TranscribeReferenceTypeConference
    - TranscribeReferenceTypeRecording
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyActiveflowsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/activeflow.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyAgentsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/agent.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyAvailableNumbersGET:
    properties:
      result:
        items:
          $ref: '#/definitions/availablenumber.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyBillingAccountsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCallsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/call.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCampaignsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/campaign.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCampaignsIDCampaigncallsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/campaigncall.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatbotcallsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/chatbotcall.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatbotsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/chatbot.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatmessagesGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/messagechat.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/chat.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyConversationsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/conversation.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyConversationsIDMessagesGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_message.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCustomersGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/customer.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyFlowsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/flow.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyGroupcallsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/groupcall.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyLoginPOST:
    properties:
      token:
        type: string
      username:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyMessagesGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_message-manager_git_models_message.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyNumbersGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/number.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyOutdialsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/outdial.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyOutplansGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/outplan.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyQueuecallsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/queuecall.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyQueuesGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/queue.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyRecordingsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/recording.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyTagsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/tag.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyTranscribesGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/transcribe.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyTrunksGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/trunk.WebhookMessage'
        type: array
    type: object
  gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Account:
    properties:
      balance:
        description: USD
        type: number
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      payment_method:
        $ref: '#/definitions/account.PaymentMethod'
      payment_type:
        $ref: '#/definitions/account.PaymentType'
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Type'
    type: object
  gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Type:
    enum:
    - admin
    - normal
    type: string
    x-enum-comments:
      TypeAdmin: admin type
      TypeNormal: normal type
    x-enum-varnames:
    - TypeAdmin
    - TypeNormal
  gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.WebhookMessage:
    properties:
      balance:
        description: USD
        type: number
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      payment_method:
        $ref: '#/definitions/account.PaymentMethod'
      payment_type:
        $ref: '#/definitions/account.PaymentType'
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_chat-manager_git_models_media.Media:
    type: object
  gitlab_com_voipbin_bin-manager_conversation-manager_git_models_account.Type:
    enum:
    - line
    - sms
    type: string
    x-enum-varnames:
    - TypeLine
    - TypeSMS
  gitlab_com_voipbin_bin-manager_conversation-manager_git_models_account.WebhookMessage:
    properties:
      customer_id:
        description: customer
        type: string
      detail:
        type: string
      id:
        description: customer id
        type: string
      name:
        type: string
      secret:
        description: secret
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      token:
        description: usually api token
        type: string
      type:
        $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_account.Type'
    type: object
  gitlab_com_voipbin_bin-manager_conversation-manager_git_models_media.Media:
    properties:
      customer_id:
        type: string
      filename:
        type: string
      id:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/media.Type'
    type: object
  gitlab_com_voipbin_bin-manager_conversation-manager_git_models_message.Direction:
    enum:
    - ""
    - outgoing
    - incoming
    type: string
    x-enum-varnames:
    - DirectionNond
    - DirectionOutgoing
    - DirectionIncoming
  gitlab_com_voipbin_bin-manager_conversation-manager_git_models_message.WebhookMessage:
    properties:
      conversation_id:
        type: string
      customer_id:
        type: string
      direction:
        $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_message.Direction'
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_media.Media'
        type: array
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/conversation.ReferenceType'
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: source
      status:
        $ref: '#/definitions/message.Status'
      text:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  gitlab_com_voipbin_bin-manager_message-manager_git_models_message.Direction:
    enum:
    - outbound
    - inbound
    type: string
    x-enum-comments:
      DirectionInbound: direction inbound
      DirectionOutbound: direction outbound.
    x-enum-varnames:
    - DirectionOutbound
    - DirectionInbound
  gitlab_com_voipbin_bin-manager_message-manager_git_models_message.Message:
    properties:
      customer_id:
        type: string
      direction:
        $ref: '#/definitions/gitlab_com_voipbin_bin-manager_message-manager_git_models_message.Direction'
      id:
        type: string
      medias:
        items:
          type: string
        type: array
      provider_name:
        allOf:
        - $ref: '#/definitions/message.ProviderName'
        description: provider info
      provider_reference_id:
        type: string
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: from/to info
      targets:
        items:
          $ref: '#/definitions/target.Target'
        type: array
      text:
        description: message info
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/message.Type'
    type: object
  gitlab_com_voipbin_bin-manager_message-manager_git_models_message.WebhookMessage:
    properties:
      customer_id:
        type: string
      direction:
        $ref: '#/definitions/gitlab_com_voipbin_bin-manager_message-manager_git_models_message.Direction'
      id:
        type: string
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: from/to info
      targets:
        items:
          $ref: '#/definitions/target.Target'
        type: array
      text:
        description: message info
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/message.Type'
    type: object
  groupcall.AnswerMethod:
    enum:
    - ""
    - hangup_others
    type: string
    x-enum-comments:
      AnswerMethodHangupOthers: hangup others
      AnswerMethodNone: do nothing
    x-enum-varnames:
    - AnswerMethodNone
    - AnswerMethodHangupOthers
  groupcall.Groupcall:
    properties:
      answer_call_id:
        description: represents answered call id.
        type: string
      answer_groupcall_id:
        description: represents answered groupcall id
        type: string
      answer_method:
        $ref: '#/definitions/groupcall.AnswerMethod'
      call_count:
        description: represent left number of calls for current dial
        type: integer
      call_ids:
        items:
          type: string
        type: array
      customer_id:
        type: string
      destinations:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      dial_index:
        description: represent current dial index. valid only ringmethod is ringall
        type: integer
      flow_id:
        type: string
      groupcall_count:
        description: represent left number of groupcalls for current dial
        type: integer
      groupcall_ids:
        items:
          type: string
        type: array
      id:
        type: string
      master_call_id:
        type: string
      master_groupcall_id:
        type: string
      ring_method:
        $ref: '#/definitions/groupcall.RingMethod'
      source:
        $ref: '#/definitions/address.Address'
      status:
        $ref: '#/definitions/groupcall.Status'
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  groupcall.RingMethod:
    enum:
    - ""
    - ring_all
    - linear
    type: string
    x-enum-comments:
      RingMethodRingAll: dial all
    x-enum-varnames:
    - RingMethodNone
    - RingMethodRingAll
    - RingMethodLinear
  groupcall.Status:
    enum:
    - progressing
    - hangingup
    - hangup
    type: string
    x-enum-varnames:
    - StatusProgressing
    - StatusHangingup
    - StatusHangup
  groupcall.WebhookMessage:
    properties:
      answer_call_id:
        description: represents answered call id.
        type: string
      answer_groupcall_id:
        description: represents answered groupcall id
        type: string
      answer_method:
        $ref: '#/definitions/groupcall.AnswerMethod'
      call_count:
        description: represent left number of calls for current dial
        type: integer
      call_ids:
        items:
          type: string
        type: array
      customer_id:
        type: string
      destinations:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      dial_index:
        description: represent current dial index. valid only ringmethod is ringall
        type: integer
      flow_id:
        type: string
      groupcall_count:
        description: represent left number of groupcalls for current dial
        type: integer
      groupcall_ids:
        items:
          type: string
        type: array
      id:
        type: string
      master_call_id:
        type: string
      master_groupcall_id:
        type: string
      ring_method:
        $ref: '#/definitions/groupcall.RingMethod'
      source:
        $ref: '#/definitions/address.Address'
      status:
        $ref: '#/definitions/groupcall.Status'
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  media.Type:
    enum:
    - image
    - video
    - audio
    - file
    - location
    - sticker
    - template
    - imagemap
    - flex
    type: string
    x-enum-varnames:
    - TypeImage
    - TypeVideo
    - TypeAudio
    - TypeFile
    - TypeLocation
    - TypeSticker
    - TypeTemplate
    - TypeImagemap
    - TypeFlex
  message.ProviderName:
    enum:
    - telnyx
    - twilio
    - messagebird
    type: string
    x-enum-varnames:
    - ProviderNameTelnyx
    - ProviderNameTwilio
    - ProviderNameMessagebird
  message.Status:
    enum:
    - sending
    - sent
    - failed
    - received
    type: string
    x-enum-varnames:
    - StatusSending
    - StatusSent
    - StatusFailed
    - StatusReceived
  message.Type:
    enum:
    - sms
    type: string
    x-enum-varnames:
    - TypeSMS
  messagechat.Messagechat:
    properties:
      chat_id:
        type: string
      customer_id:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_chat-manager_git_models_media.Media'
        type: array
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: message defines
      text:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/messagechat.Type'
    type: object
  messagechat.Type:
    enum:
    - system
    - normal
    type: string
    x-enum-varnames:
    - TypeSystem
    - TypeNormal
  messagechat.WebhookMessage:
    properties:
      chat_id:
        type: string
      customer_id:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_chat-manager_git_models_media.Media'
        type: array
      source:
        $ref: '#/definitions/address.Address'
      text:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/messagechat.Type'
    type: object
  messagechatroom.Messagechatroom:
    properties:
      agent_id:
        type: string
      chatroom_id:
        type: string
      customer_id:
        type: string
      id:
        type: string
      medias:
        items:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_chat-manager_git_models_media.Media'
        type: array
      messagechat_id:
        type: string
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: message defines
      text:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        $ref: '#/definitions/messagechatroom.Type'
    type: object
  messagechatroom.Type:
    enum:
    - ""
    - system
    - normal
    type: string
    x-enum-varnames:
    - TypeUnknown
    - TypeSystem
    - TypeNormal
  number.Number:
    properties:
      call_flow_id:
        type: string
      customer_id:
        type: string
      detail:
        type: string
      emergency_enabled:
        type: boolean
      id:
        type: string
      message_flow_id:
        type: string
      name:
        type: string
      number:
        type: string
      provider_name:
        $ref: '#/definitions/number.ProviderName'
      provider_reference_id:
        type: string
      status:
        $ref: '#/definitions/number.Status'
      t38_enabled:
        type: boolean
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_purchase:
        description: timestamp
        type: string
      tm_renew:
        type: string
      tm_update:
        type: string
    type: object
  number.ProviderName:
    enum:
    - telnyx
    - twilio
    - messagebird
    type: string
    x-enum-varnames:
    - ProviderNameTelnyx
    - ProviderNameTwilio
    - ProviderNameMessagebird
  number.Status:
    enum:
    - ""
    - active
    - deleted
    type: string
    x-enum-varnames:
    - StatusNone
    - StatusActive
    - StatusDeleted
  number.WebhookMessage:
    properties:
      call_flow_id:
        type: string
      customer_id:
        type: string
      detail:
        type: string
      emergency_enabled:
        type: boolean
      id:
        type: string
      message_flow_id:
        type: string
      name:
        type: string
      number:
        type: string
      status:
        $ref: '#/definitions/number.Status'
      t38_enabled:
        type: boolean
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_purchase:
        type: string
      tm_renew:
        type: string
      tm_update:
        type: string
    type: object
  outdial.Outdial:
    properties:
      campaign_id:
        type: string
      customer_id:
        type: string
      data:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  outdial.WebhookMessage:
    properties:
      campaign_id:
        type: string
      customer_id:
        type: string
      data:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  outplan.Outplan:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      dial_timeout:
        description: plan dial settings
        type: integer
      id:
        type: string
      max_try_count_0:
        description: max try count
        type: integer
      max_try_count_1:
        description: max try count for destination_1
        type: integer
      max_try_count_2:
        description: max try count for destination_2
        type: integer
      max_try_count_3:
        description: max try count for destination_3
        type: integer
      max_try_count_4:
        description: max try count for destination_4
        type: integer
      name:
        description: basic info
        type: string
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: source settings
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      try_interval:
        description: milliseconds
        type: integer
    type: object
  outplan.WebhookMessage:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      dial_timeout:
        description: plan dial settings
        type: integer
      id:
        type: string
      max_try_count_0:
        type: integer
      max_try_count_1:
        type: integer
      max_try_count_2:
        type: integer
      max_try_count_3:
        type: integer
      max_try_count_4:
        type: integer
      name:
        description: basic info
        type: string
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: source settings
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      try_interval:
        description: milliseconds
        type: integer
    type: object
  provider.WebhookMessage:
    properties:
      detail:
        type: string
      hostname:
        description: destination
        type: string
      id:
        type: string
      name:
        type: string
      tech_headers:
        additionalProperties:
          type: string
        description: tech headers. valid only for the sip type.
        type: object
      tech_postfix:
        description: tech postfix. valid only for the sip type.
        type: string
      tech_prefix:
        description: sip type techs
        type: string
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        type: string
    type: object
  queue.RoutingMethod:
    enum:
    - ""
    - random
    type: string
    x-enum-varnames:
    - RoutingMethodNone
    - RoutingMethodRandom
  queue.WebhookMessage:
    properties:
      customer_id:
        description: owner id
        type: string
      detail:
        description: queue's detail
        type: string
      id:
        description: queue id
        type: string
      name:
        description: basic info
        type: string
      routing_method:
        allOf:
        - $ref: '#/definitions/queue.RoutingMethod'
        description: operation info
      service_queuecall_ids:
        description: service queue call ids(ms).
        items:
          type: string
        type: array
      service_timeout:
        description: service queue timeout(ms).
        type: integer
      tag_ids:
        description: queue's tag ids
        items:
          type: string
        type: array
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      total_abandoned_count:
        description: total abandoned call count
        type: integer
      total_incoming_count:
        description: total incoming call count
        type: integer
      total_serviced_count:
        description: total serviced call count
        type: integer
      wait_actions:
        description: wait/service info
        items:
          $ref: '#/definitions/action.Action'
        type: array
      wait_queuecall_ids:
        description: queuecall info
        items:
          type: string
        type: array
      wait_timeout:
        description: wait queue timeout.(ms)
        type: integer
    type: object
  queuecall.Queuecall:
    properties:
      confbridge_id:
        description: confbridge id
        type: string
      customer_id:
        type: string
      duration_service:
        description: duration for service(ms)
        type: integer
      duration_waiting:
        description: duration for waiting(ms)
        type: integer
      exit_action_id:
        description: action id for queue exit. When the queuecall has ended, the queuemanager
          will send the request forward to this action id.
        type: string
      forward_action_id:
        description: action id for forward. This is for the conference_join's action
          id.
        type: string
      id:
        type: string
      queue_id:
        type: string
      reference_activeflow_id:
        description: referenced resource's activeflow id
        type: string
      reference_id:
        description: referenced resource's id.
        type: string
      reference_type:
        description: referenced resource's type.
        type: string
      routing_method:
        allOf:
        - $ref: '#/definitions/queue.RoutingMethod'
        description: queue's routing method
      service_agent_id:
        type: string
      source:
        allOf:
        - $ref: '#/definitions/address.Address'
        description: source address for calling to the agent.
      status:
        $ref: '#/definitions/queuecall.Status'
      tag_ids:
        description: queue's tags
        items:
          type: string
        type: array
      timeout_service:
        description: timeout for service.(ms)
        type: integer
      timeout_wait:
        description: timeout for wait.(ms)
        type: integer
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_end:
        description: ended timestamp.
        type: string
      tm_service:
        description: Serviced timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
    type: object
  queuecall.Status:
    enum:
    - initiating
    - waiting
    - connecting
    - kicking
    - service
    - done
    - abandoned
    type: string
    x-enum-comments:
      StatusAbandoned: queue call has been abandoned.
      StatusConnecting: queue call is connecting to the agent.
      StatusDone: queue call done.
      StatusInitiating: queue call is initiating.
      StatusKicking: queue call is being kick from the queue
      StatusService: queue call is being service now.
      StatusWaiting: queue call is waiting in the wait actions.
    x-enum-varnames:
    - StatusInitiating
    - StatusWaiting
    - StatusConnecting
    - StatusKicking
    - StatusService
    - StatusDone
    - StatusAbandoned
  queuecall.WebhookMessage:
    properties:
      customer_id:
        description: owner id
        type: string
      duration_service:
        description: duration for service(ms)
        type: integer
      duration_waiting:
        description: duration for waiting(ms)
        type: integer
      id:
        type: string
      reference_id:
        type: string
      reference_type:
        type: string
      service_agent_id:
        type: string
      status:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_service:
        type: string
      tm_update:
        type: string
    type: object
  recording.Format:
    enum:
    - wav
    type: string
    x-enum-varnames:
    - FormatWAV
  recording.Recording:
    properties:
      asterisk_id:
        type: string
      channel_ids:
        description: snoop channel ids for recording
        items:
          type: string
        type: array
      customer_id:
        type: string
      filenames:
        items:
          type: string
        type: array
      format:
        $ref: '#/definitions/recording.Format'
      id:
        type: string
      recording_name:
        type: string
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/recording.ReferenceType'
      status:
        $ref: '#/definitions/recording.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_end:
        type: string
      tm_start:
        type: string
      tm_update:
        type: string
    type: object
  recording.ReferenceType:
    enum:
    - call
    - confbridge
    type: string
    x-enum-comments:
      ReferenceTypeCall: call type.
      ReferenceTypeConfbridge: confbridge type.
    x-enum-varnames:
    - ReferenceTypeCall
    - ReferenceTypeConfbridge
  recording.Status:
    enum:
    - initiating
    - recording
    - stopping
    - ended
    type: string
    x-enum-varnames:
    - StatusInitiating
    - StatusRecording
    - StatusStopping
    - StatusEnded
  recording.WebhookMessage:
    properties:
      customer_id:
        type: string
      format:
        $ref: '#/definitions/recording.Format'
      id:
        type: string
      reference_id:
        type: string
      reference_type:
        $ref: '#/definitions/recording.ReferenceType'
      status:
        $ref: '#/definitions/recording.Status'
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_end:
        type: string
      tm_start:
        type: string
      tm_update:
        type: string
    type: object
  route.Route:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      priority:
        type: integer
      provider_id:
        type: string
      target:
        description: country code or all
        type: string
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  route.WebhookMessage:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      priority:
        type: integer
      provider_id:
        type: string
      target:
        description: country code or all
        type: string
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  sipauth.AuthType:
    enum:
    - basic
    - ip
    type: string
    x-enum-comments:
      AuthTypeBasic: basic authentication
      AuthTypeIP: ip
    x-enum-varnames:
    - AuthTypeBasic
    - AuthTypeIP
  stack.Stack:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      id:
        type: string
      return_action_id:
        type: string
      return_stack_id:
        type: string
    type: object
  tag.Tag:
    properties:
      customer_id:
        description: owner's id
        type: string
      detail:
        description: tag's detail
        type: string
      id:
        description: tag id
        type: string
      name:
        description: tag's name
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
    type: object
  tag.WebhookMessage:
    properties:
      detail:
        description: tag's detail
        type: string
      id:
        description: tag id
        type: string
      name:
        description: tag's name
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
    type: object
  target.Status:
    enum:
    - received
    - queued
    - gw_timeout
    - sent
    - dlr_timeout
    - failed
    - delivered
    type: string
    x-enum-comments:
      StatusDLRTimeout: No DLR from downstream.
      StatusDelivered: 'outbound: To the best of our knowledge, the message was delivered./
        inbound: Transmitted to you, after receipt.'
      StatusFailed: Failure DLR from gateway or downstream, which is notification
        of message delivery failure.
      StatusGWTimeout: No DLR (delivery receipt) from gateway.
      StatusQueued: Released from scheduler and submitted to gateway. [Queued in scheduler,
        due to outbound rate limiting.]
      StatusReceived: Received by the Telnyx Messaging Services.
      StatusSent: Success DLR received from gateway. Message has been sent downstream.
    x-enum-varnames:
    - StatusReceived
    - StatusQueued
    - StatusGWTimeout
    - StatusSent
    - StatusDLRTimeout
    - StatusFailed
    - StatusDelivered
  target.Target:
    properties:
      destination:
        $ref: '#/definitions/address.Address'
      parts:
        description: number of messages
        type: integer
      status:
        $ref: '#/definitions/target.Status'
      tm_update:
        type: string
    type: object
  transcribe.Direction:
    enum:
    - both
    - in
    - out
    type: string
    x-enum-varnames:
    - DirectionBoth
    - DirectionIn
    - DirectionOut
  transcribe.ReferenceType:
    enum:
    - unknown
    - recording
    - call
    - confbridge
    type: string
    x-enum-varnames:
    - ReferenceTypeUnknown
    - ReferenceTypeRecording
    - ReferenceTypeCall
    - ReferenceTypeConfbridge
  transcribe.Status:
    enum:
    - progressing
    - done
    type: string
    x-enum-varnames:
    - StatusProgressing
    - StatusDone
  transcribe.Transcribe:
    properties:
      customer_id:
        description: customer
        type: string
      direction:
        $ref: '#/definitions/transcribe.Direction'
      host_id:
        description: host id
        type: string
      id:
        description: Transcribe id
        type: string
      language:
        description: BCP47 type's language code. en-US
        type: string
      reference_id:
        description: call/conference/recording's id
        type: string
      reference_type:
        $ref: '#/definitions/transcribe.ReferenceType'
      status:
        $ref: '#/definitions/transcribe.Status'
      streaming_ids:
        items:
          type: string
        type: array
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  transcribe.WebhookMessage:
    properties:
      customer_id:
        description: customer
        type: string
      direction:
        $ref: '#/definitions/transcribe.Direction'
      id:
        description: Transcribe id
        type: string
      language:
        description: BCP47 type's language code. en-US
        type: string
      reference_id:
        description: call/conference/recording's id
        type: string
      reference_type:
        allOf:
        - $ref: '#/definitions/transcribe.ReferenceType'
        description: reference's type
      status:
        $ref: '#/definitions/transcribe.Status'
      tm_create:
        description: timestamp
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  transfer.Transfer:
    properties:
      confbridge_id:
        type: string
      customer_id:
        type: string
      groupcall_id:
        description: created groupcall id
        type: string
      id:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      transferee_addresses:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      transferee_call_id:
        type: string
      transferer_call_id:
        description: transferer/transferee info
        type: string
      type:
        $ref: '#/definitions/transfer.Type'
    type: object
  transfer.Type:
    enum:
    - attended
    - blind
    type: string
    x-enum-varnames:
    - TypeAttended
    - TypeBlind
  trunk.Trunk:
    properties:
      allowed_ips:
        description: DO NOT CHANGE. This used by the kamailio's INVITE validation
        items:
          type: string
        type: array
      auth_types:
        description: sip info
        items:
          $ref: '#/definitions/sipauth.AuthType'
        type: array
      customer_id:
        type: string
      detail:
        type: string
      domain_name:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        description: DO NOT CHANGE. This used by the kamailio's INVITE validation
        type: string
      realm:
        description: DO NOT CHANGE. This used by the kamailio's INVITE validation
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      username:
        description: DO NOT CHANGE. This used by the kamailio's INVITE validation
        type: string
    type: object
  trunk.WebhookMessage:
    properties:
      allowed_ips:
        items:
          type: string
        type: array
      auth_types:
        items:
          $ref: '#/definitions/sipauth.AuthType'
        type: array
      customer_id:
        type: string
      detail:
        type: string
      domain_name:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      username:
        type: string
    type: object
host: api.voipbin.net
info:
  contact:
    email: pchero21@gmail.com
    name: VoIPBIN Project
  description: RESTful API documents for VoIPBIN project.
  termsOfService: http://swagger.io/terms/
  title: VoIPBIN project API
  version: 3.1.0
paths:
  /auth/login:
    post:
      description: Generate the JWT token and return it.
      parameters:
      - description: login info
        in: body
        name: login_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyLoginPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyLoginPOST'
      summary: Generate the JWT token and return it.
  /ping:
    get:
      description: Used to check the server is alive
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "pong"}'
      summary: Returns message pong
  /v1.0/activeflows:
    get:
      description: get activeflows of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyActiveflowsGET'
      summary: Get list of activeflows
    post:
      description: Create and execute the activeflow
      parameters:
      - description: The activeflow detail
        in: body
        name: activeflow
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyActiveflowsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/activeflow.Activeflow'
      summary: Make and execute the activeflow
  /v1.0/activeflows/{id}:
    delete:
      description: Deletes activeflow info of the given activeflow id.
      parameters:
      - description: The ID of the activeflow
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/activeflow.Activeflow'
      summary: Deletes activeflow info.
    get:
      description: Returns detail activeflow info of the given activeflow id.
      parameters:
      - description: The ID of the activeflow
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/activeflow.Activeflow'
      summary: Get detail activeflow info.
  /v1.0/activeflows/{id}/stop:
    post:
      description: Stops activeflow of the given activeflow id.
      parameters:
      - description: The ID of the activeflow
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/activeflow.Activeflow'
      summary: Stops the given activeflow.
  /v1.0/agents:
    get:
      description: get agents of the user
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      - description: Comma seperated tag ids
        in: query
        name: tag_ids
        type: string
      - description: Agent status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyAgentsGET'
      summary: List agents
    post:
      description: create a new agent
      parameters:
      - description: The agent detail
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/agent.Agent'
      summary: Create a new agent.
  /v1.0/agents/{id}:
    delete:
      description: Delete the agent of the given id
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete the agent
    get:
      description: Get the agent of the given id
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get the agent
    put:
      description: Update an agent and returns detail updated agent info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an agent and reuturns updated agent info.
  /v1.0/agents/{id}/addresses:
    put:
      description: Update an agent addresses info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDAddressesPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an agent info.
  /v1.0/agents/{id}/permission:
    put:
      description: Update an agent password info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDPermissionPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an agent's password info.
  /v1.0/agents/{id}/status:
    put:
      description: Update an agent status info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an agent's status info.
  /v1.0/agents/{id}/tag_ids:
    put:
      description: Update an agent tag_ids info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDTagIDsPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an agent's tag_id info.
  /v1.0/available_numbers:
    get:
      description: get available numbers of the country
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The ISO country code
        in: query
        name: country_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyAvailableNumbersGET'
      summary: List available numbers
  /v1.0/billing_accounts:
    get:
      description: get list of the customer's billing accounts
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyBillingAccountsGET'
      summary: Get list of billing accounts
    post:
      description: create a new billing account
      parameters:
      - description: The call detail
        in: body
        name: call
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCallsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Account'
      summary: Create a new billing account
  /v1.0/billing_accounts/{id}:
    delete:
      description: Delete billing account of the given id
      parameters:
      - description: The ID of the billing_account
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Account'
      summary: delete billing account
    get:
      description: Returns detail billing account info of the given call id.
      parameters:
      - description: The ID of the billing account
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Account'
      summary: Get detail billing account info.
    put:
      description: Update billing account of the given id
      parameters:
      - description: The ID of the billing_account
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Account'
      summary: Update billing account
  /v1.0/billing_accounts/{id}/balance_add_force:
    post:
      description: Adds the given balance to the billing account.
      parameters:
      - description: The ID of the billing account
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Account'
      summary: Adds the given balance to the billing account.
  /v1.0/billing_accounts/{id}/payment_info:
    put:
      description: Update billing account's payment info of the given id
      parameters:
      - description: The ID of the billing_account
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_billing-manager_git_models_account.Account'
      summary: Update billing account's payment info
  /v1.0/calls:
    get:
      description: get calls of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCallsGET'
      summary: Get list of calls
    post:
      description: dialing to destination
      parameters:
      - description: The call detail
        in: body
        name: call
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCallsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Make an outbound call
  /v1.0/calls/{id}:
    delete:
      description: Hangup the call of the given id
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Hangup the call
    get:
      description: Returns detail call info of the given call id.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Get detail call info.
  /v1.0/calls/{id}/hangup:
    post:
      description: Returns detail call info of the given call id.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Hangup the call.
  /v1.0/calls/{id}/hold:
    delete:
      description: Unhold the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Unhold the call.
    post:
      description: Hold the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Hold the call.
  /v1.0/calls/{id}/meida_stream:
    get:
      description: Start the call media streaming.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Start the call media streaming.
  /v1.0/calls/{id}/moh:
    delete:
      description: MOH off the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: MOH off the call.
    post:
      description: MOH the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: MOH the call.
  /v1.0/calls/{id}/mute:
    delete:
      description: Unmute the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Unmute the call.
    post:
      description: Mute the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Mute the call.
  /v1.0/calls/{id}/silence:
    delete:
      description: Silence off the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Silence off the call.
    post:
      description: Silence the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Silence the call.
  /v1.0/calls/{id}/talk:
    post:
      description: Talks to the call.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Talk to the call.
  /v1.0/campaigncalls:
    get:
      description: get calls of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCallsGET'
      summary: Get list of calls
  /v1.0/campaigncalls/{id}:
    delete:
      description: Delete a existing campaign.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Finish a existing campaign.
    get:
      description: Returns detail campaigns info of the given campaigncall id.
      parameters:
      - description: The ID of the campaigncall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaigncall.WebhookMessage'
      summary: Returns detail campaigncall info.
  /v1.0/campaigns:
    get:
      description: Gets a list of campaigns
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCampaignsGET'
      summary: Gets a list of campaigns.
    post:
      description: Create a new campaign and returns detail created campaign info.
      parameters:
      - description: campaign info.
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.WebhookMessage'
      summary: Create a new campaign and returns detail created campaign info.
  /v1.0/campaigns/{id}:
    delete:
      description: Delete a existing campaign.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing campaign.
    get:
      description: Returns detail campaigns info of the given campaigns id.
      parameters:
      - description: The ID of the campaigns
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Returns detail campaigns info.
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/actions:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/campaigncalls:
    get:
      description: Gets a list of campaigns
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCampaignsIDCampaigncallsGET'
      summary: Gets a list of campaigns.
  /v1.0/campaigns/{id}/next_campaign_id:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDResourceInfoPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/resource_info:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDResourceInfoPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/service_level:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/status:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCampaignsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/chatbotcalls:
    get:
      description: Gets a list of chatbotcalls
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatbotcallsGET'
      summary: Gets a list of chatbotcalls.
  /v1.0/chatbotcalls/{id}:
    delete:
      description: Delete a existing chatbotcall.
      parameters:
      - description: The chatbotcall's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing chatbotcall.
    get:
      description: Returns detail chatbotcall info of the given chatbotcall id.
      parameters:
      - description: The ID of the chatbotcall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatbotcall.Chatbotcall'
      summary: Returns detail chatbotcall info.
  /v1.0/chatbots:
    get:
      description: Gets a list of chatbots
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatbotsGET'
      summary: Gets a list of chatbots.
    post:
      description: Create a new chatbot and returns detail created chatbot info.
      parameters:
      - description: chatbot info.
        in: body
        name: chatbot
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatbotsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatbot.WebhookMessage'
      summary: Create a new chatbot and returns detail created chatbot info.
  /v1.0/chatbots/{id}:
    delete:
      description: Delete a existing chatbot.
      parameters:
      - description: The chatbot's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing chatbot.
    get:
      description: Returns detail chatbot info of the given chatbot id.
      parameters:
      - description: The ID of the chatbot
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatbot.Chatbot'
      summary: Returns detail chatbot info.
    put:
      description: Update the chatbot and returns updated chatbot info.
      parameters:
      - description: chatbot info.
        in: body
        name: chatbot
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatbotsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatbot.WebhookMessage'
      summary: Update the chatbot and returns updated chatbot info.
  /v1.0/chatmessages:
    get:
      description: Gets a list of chatmessages
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatmessagesGET'
      summary: Gets a list of chatmessages.
    post:
      description: Create a new chatmessage and returns detail created chatmessage
        info.
      parameters:
      - description: chatmessage info.
        in: body
        name: chatmessage
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatmessagesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/messagechat.WebhookMessage'
      summary: Create a new chatmessage and returns detail created chatmessage info.
  /v1.0/chatmessages/{id}:
    delete:
      description: Deletes a chatmessage and returns detail chatmessage info.
      parameters:
      - description: The ID of the chatroom
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/messagechat.Messagechat'
      summary: Deletes a chatmessage and returns detail chatmessage info.
    get:
      description: Returns detail chatmessage info of the given chatmessage id.
      parameters:
      - description: The ID of the chatmessage
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/messagechat.Messagechat'
      summary: Returns detail chatmessage info.
  /v1.0/chatroommessages:
    get:
      description: Gets a list of chatroommessages
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      - description: The id of the chatroom
        in: query
        name: chatroom_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatsGET'
      summary: Gets a list of chatroommessages.
    post:
      description: Create a new chatroommessage and returns detail created chatroommessage
        info.
      parameters:
      - description: chatroommessage info.
        in: body
        name: chatroommessage
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatroommessagesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/messagechat.WebhookMessage'
      summary: Create a new chatroommessage and returns detail created chatroommessage
        info.
  /v1.0/chatroommessages/{id}:
    delete:
      description: Deletes a chatroommessage and returns detail chatroommessage info.
      parameters:
      - description: The ID of the chatroommessage
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/messagechatroom.Messagechatroom'
      summary: Deletes a chatroommessage and returns detail chatroommessage info.
    get:
      description: Returns detail chatroommessage info of the given chatroommessage
        id.
      parameters:
      - description: The ID of the chatroommessage
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/messagechatroom.Messagechatroom'
      summary: Returns detail chatroommessage info.
  /v1.0/chatrooms:
    get:
      description: Gets a list of chatrooms
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      - description: The id of the chatroom owner
        in: query
        name: owner_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatsGET'
      summary: Gets a list of chatrooms.
    post:
      description: Create a new chatroom and returns detail created chatroom info.
      parameters:
      - description: chatroom info.
        in: body
        name: chatroom
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatroomsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatroom.WebhookMessage'
      summary: Create a new chatroom and returns detail created chatroom info.
  /v1.0/chatrooms/{id}:
    delete:
      description: Deletes a chatroom and returns detail chatroom info.
      parameters:
      - description: The ID of the chatroom
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatroom.Chatroom'
      summary: Deletes a chatroom and returns detail chatroom info.
    get:
      description: Returns detail chatroom info of the given chatroom id.
      parameters:
      - description: The ID of the chatroom
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chatroom.Chatroom'
      summary: Returns detail chatroom info.
    put:
      description: Update a chat and returns detail updated info.
      parameters:
      - description: The chatroom's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatroomsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.Chat'
      summary: Update a chat and reuturns updated info.
  /v1.0/chats:
    get:
      description: Gets a list of chats
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyChatsGET'
      summary: Gets a list of chats.
    post:
      description: Create a new chat and returns detail created chat info.
      parameters:
      - description: chat info.
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.WebhookMessage'
      summary: Create a new chat and returns detail created chat info.
  /v1.0/chats/{id}:
    delete:
      description: Delete a existing chat.
      parameters:
      - description: The chat's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing chat.
    get:
      description: Returns detail chat info of the given chat id.
      parameters:
      - description: The ID of the chat
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.Chat'
      summary: Returns detail chat info.
    put:
      description: Update a chat and returns detail updated info.
      parameters:
      - description: The chat's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.Chat'
      summary: Update a chat and reuturns updated info.
  /v1.0/chats/{id}/owner_id:
    put:
      description: Update a chat and returns detail updated info.
      parameters:
      - description: The chat's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatsIDOwnerIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.Chat'
      summary: Update a chat and reuturns updated info.
  /v1.0/chats/{id}/participant_ids:
    post:
      description: Add a new participant id to the cat and returns detail updated
        chat info.
      parameters:
      - description: chat info.
        in: body
        name: chat
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyChatsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/chat.WebhookMessage'
      summary: Add a new participant id to the chat and returns detail updated chat
        info.
  /v1.0/chats/{id}/participant_ids/{participant_id}:
    delete:
      description: Remove participant id.
      parameters:
      - description: The chat's id
        in: query
        name: id
        required: true
        type: string
      - description: The chat's participant id
        in: query
        name: participant_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Remove participant id.
  /v1.0/conferencecalls:
    get:
      description: get conferences of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCallsGET'
      summary: Get list of conferencecalls
  /v1.0/conferencecalls/{id}:
    delete:
      description: Kicks the conferencecall.
      parameters:
      - description: The ID of the conferencecall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Kicks the conferencecall from the conference.
    get:
      description: Returns detail conferencecall info of the given conferencecall
        id.
      parameters:
      - description: The ID of the conferencecall
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conferencecall.Conferencecall'
      summary: Returns detail conferencecall info.
  /v1.0/conferences:
    get:
      description: get conferences of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCallsGET'
      summary: Get list of conferences
    post:
      description: Create a new conference with the given information.
      parameters:
      - description: The conference detail
        in: body
        name: conference
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConferencesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conference.Conference'
      summary: Create a new conferences
  /v1.0/conferences/{id}:
    delete:
      description: Delete the conference. All the participants in the conference will
        be kicked out.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete the conference.
    get:
      description: Returns detail conference info of the given conference id.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conference.Conference'
      summary: Returns detail conference info.
    put:
      description: Update conference info of the given conference id.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conference.Conference'
      summary: Update conference info.
  /v1.0/conferences/{id}/meida_stream:
    get:
      description: Start the conference media streaming.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Start the conference media streaming.
  /v1.0/conferences/{id}/recording_start:
    post:
      description: Start the conference recording.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Starts the conference recording.
  /v1.0/conferences/{id}/recording_stop:
    post:
      description: Stops the conference recording.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Stops the conference recording.
  /v1.0/conferences/{id}/transcribe_start:
    post:
      description: Start the conference transcribe.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      - description: conference info
        in: body
        name: conference
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConferencesIDTranscribeStartPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Starts the conference transcribe.
  /v1.0/conferences/{id}/transcribe_stop:
    post:
      description: Stops the conference transcribe.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Stops the conference transcribe.
  /v1.0/conversation_accounts:
    get:
      description: Gets a list of conversation accounts
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyConversationsGET'
      summary: Gets a list of conversation accounts.
    post:
      description: Create a new conversation account and returns detail created conversation
        account info.
      parameters:
      - description: customer info.
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConversationAccountsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_account.WebhookMessage'
      summary: Create a new conversation account and returns detail created conversation
        account info.
  /v1.0/conversation_accounts/{id}:
    get:
      description: Returns detail conversation account info of the given conversation
        account id.
      parameters:
      - description: The ID of the conversation account
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_account.WebhookMessage'
      summary: Returns detail conversation account info.
    put:
      description: Returns detail conversation account info of the given conversation
        account id.
      parameters:
      - description: The ID of the conversation account
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_account.WebhookMessage'
      summary: Returns detail conversation account info.
  /v1.0/conversations:
    get:
      description: Gets a list of conversations
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyConversationsGET'
      summary: Gets a list of conversations.
  /v1.0/conversations/{id}:
    get:
      description: Update the conversation info of the given conversation id.
      parameters:
      - description: The ID of the conversation
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conversation.WebhookMessage'
      summary: Update the conversation info.
  /v1.0/conversations/{id}/messages:
    get:
      description: Gets a list of conversation messages
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyConversationsIDMessagesGET'
      summary: Gets a list of conversation messages.
    post:
      description: Send a message and returns a sent message info.
      parameters:
      - description: message info.
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyConversationsIDMessagesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_conversation-manager_git_models_message.WebhookMessage'
      summary: Send a message and returns detail sent message info.
  /v1.0/customers:
    get:
      description: Gets a list of customers
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyCustomersGET'
      summary: Gets a list of customers.
    post:
      description: Create a new customer and returns detail created customer info.
      parameters:
      - description: customer info.
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyCustomersPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Create a new customer and returns detail created customer info.
  /v1.0/customers/{id}:
    delete:
      description: Delete a existing customer.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing customer.
    get:
      description: Returns detail customer info of the given customer id.
      parameters:
      - description: The ID of the customer
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Returns detail customer info.
    put:
      description: Update a customer and returns detail updated customer info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Update a customer.
  /v1.0/customers/{id}/billing_account_id:
    put:
      description: Update a customer's billing account id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Update a customer's billing account id.
  /v1.0/extension/{id}:
    get:
      description: Returns detail extension info of the given extension id.
      parameters:
      - description: The ID of the extension
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/extension.Extension'
      summary: Returns detail extension info.
  /v1.0/extensions:
    get:
      description: Gets a list of extensions
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      - description: The domain's id
        in: query
        name: domain_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/extension.Extension'
            type: array
      summary: Gets a list of extensions.
    post:
      description: Create a new extension and returns detail created extension info.
      parameters:
      - description: extension info
        in: body
        name: extension
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyExtensionsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/extension.Extension'
      summary: Create a new domain and returns detail created extension info.
  /v1.0/extensions/{id}:
    delete:
      description: Delete a existing extension.
      parameters:
      - description: The extension's id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing extension.
    put:
      description: Update a extension and returns detail updated extension info.
      parameters:
      - description: extension's id
        in: path
        name: id
        required: true
        type: string
      - description: Update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyExtensionsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/extension.Extension'
      summary: Update a extension and reuturns updated extension info.
  /v1.0/flows:
    get:
      description: Gets a list of flows
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyFlowsGET'
      summary: Gets a list of flows.
    post:
      description: Create a new flow and returns detail created flow info.
      parameters:
      - description: flow info.
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyFlowsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Create a new flow and returns detail created flow info.
  /v1.0/flows/{id}:
    delete:
      description: Delete a existing flow.
      parameters:
      - description: The flow's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing flow.
    get:
      description: Returns detail flow info of the given flow id.
      parameters:
      - description: The ID of the flow
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Returns detail flow info.
    put:
      description: Update a flow and returns detail updated flow info.
      parameters:
      - description: The flow's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyFlowsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Update a flow and reuturns updated flow info.
  /v1.0/groupcalls:
    get:
      description: Gets a list of groupcalls
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyGroupcallsGET'
      summary: Gets a list of groupcalls.
    post:
      description: Create a new groupcall and returns detail created groupcall info.
      parameters:
      - description: groupcall info.
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyGroupcallsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupcall.Groupcall'
      summary: Create a new groupcall and returns detail created groupcall info.
  /v1.0/groupcalls/{id}:
    delete:
      description: Delete the groupcall of the given groupcall id.
      parameters:
      - description: The ID of the groupcall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupcall.Groupcall'
      summary: Delete the groupcall.
    get:
      description: Returns detail groupcall info of the given groupcall id.
      parameters:
      - description: The ID of the groupcall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupcall.Groupcall'
      summary: Returns detail groupcall info.
  /v1.0/groupcalls/{id}/hangup:
    post:
      description: Hangup the groupcall of the given groupcall id.
      parameters:
      - description: The ID of the groupcall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/groupcall.Groupcall'
      summary: Hangup the groupcall.
  /v1.0/messages:
    get:
      description: get messages
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyMessagesGET'
      summary: List order messages
    post:
      description: Send a message and returns a sent message.
      parameters:
      - description: Sending message info.
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyMessagesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_message-manager_git_models_message.Message'
      summary: Send a message and returns a sent message.
  /v1.0/messages/{id}:
    delete:
      description: delete message of the given id and returns deleted item.
      parameters:
      - description: The message's id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_message-manager_git_models_message.Message'
      summary: Delete message
    get:
      description: get message of the given id
      parameters:
      - description: The ID of the message
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_message-manager_git_models_message.Message'
      summary: Get message
  /v1.0/numbers:
    get:
      description: get order numbers of the country
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyNumbersGET'
      summary: List order numbers
    post:
      description: Create a new number and returns detail created number info.
      parameters:
      - description: Creating number info.
        in: body
        name: number
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyNumbersPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Create a new number and returns detail created number info.
  /v1.0/numbers/{id}:
    delete:
      description: delete order number of the given id and returns deleted item.
      parameters:
      - description: The number's id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Delete order number
    get:
      description: get order number of the given id
      parameters:
      - description: The ID of the order number
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Get order number
    put:
      description: Update the number's basic information.
      parameters:
      - description: Update info.
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyNumbersIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Update the number's basic information.
  /v1.0/numbers/{id}/flow_id:
    put:
      description: Update the number's flow_id.
      parameters:
      - description: Update info.
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyNumbersIDFlowIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Update the number's flow_id.
  /v1.0/numbers/renew:
    post:
      description: Renew the numbers.
      parameters:
      - description: Update info.
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyNumbersIDFlowIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/number.Number'
            type: array
      summary: Renew the numbers.
  /v1.0/outdials:
    get:
      description: Gets a list of outdials
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyOutdialsGET'
      summary: Gets a list of outdials.
    post:
      description: Create a new outdial and returns detail created outdial info.
      parameters:
      - description: outdial info.
        in: body
        name: outdial
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.WebhookMessage'
      summary: Create a new outdial and returns detail created outdial info.
  /v1.0/outdials/{id}:
    delete:
      description: Delete a existing outdial.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing outdial.
    get:
      description: Returns detail outdials info of the given outdials id.
      parameters:
      - description: The ID of the outdials
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Returns detail outdials info.
    put:
      description: Update a outdial and returns detail updated outdial info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Update a outdial and reuturns updated outdial info.
  /v1.0/outdials/{id}/campaign_id:
    put:
      description: Update a outdial's campaign_id and returns detail updated outdial
        info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Update a outdial's campaign_id and reuturns updated outdial info.
  /v1.0/outdials/{id}/data:
    put:
      description: Update a outdial's data and returns detail updated outdial info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsIDDataPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Update a outdial's data and reuturns updated outdial info.
  /v1.0/outdials/{id}/targets:
    get:
      description: Get a list of outdialtargets.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get a list of outdialtargets.
    post:
      description: Update a outdial's data and returns detail updated outdial info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutdialsIDDataPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Create a new outdialtarget's data and reuturns updated outdial info.
  /v1.0/outdials/{id}/targets/{target_id}:
    delete:
      description: Delete a existing outdialtarget.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The outdialtarget's id
        in: query
        name: target_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing outdialtarget.
    get:
      description: Get a existing outdialtarget.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The outdialtarget's id
        in: query
        name: target_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get a existing outdialtarget.
  /v1.0/outplans:
    get:
      description: Gets a list of outplans
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyOutplansGET'
      summary: Gets a list of outplans.
    post:
      description: Create a new outplan and returns detail created outplan info.
      parameters:
      - description: outplan info.
        in: body
        name: outplan
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutplansPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outplan.WebhookMessage'
      summary: Create a new outplan and returns detail created outplan info.
  /v1.0/outplans/{id}:
    delete:
      description: Delete a existing outplan.
      parameters:
      - description: The outplan's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing outplan.
    get:
      description: Returns detail outplans info of the given outplans id.
      parameters:
      - description: The ID of the outplans
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outplan.Outplan'
      summary: Returns detail outplans info.
    put:
      description: Update a outplan and returns detail updated outplan info.
      parameters:
      - description: The outplan's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyOutplansIDDialInfoPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outplan.Outplan'
      summary: Update a outplan and reuturns updated outplan info.
  /v1.0/provider/{id}:
    delete:
      description: Delete the provider of the given id
      parameters:
      - description: The ID of the provider
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete the provider
  /v1.0/providers:
    get:
      description: get providers of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/provider.WebhookMessage'
      summary: List providers
    post:
      description: create a new provider
      parameters:
      - description: The provider detail
        in: body
        name: provider
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyProvidersPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/provider.WebhookMessage'
      summary: Create a new provider.
  /v1.0/providers/{id}:
    get:
      description: Get the provider of the given id
      parameters:
      - description: The ID of the provider
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get the provider
    put:
      description: Update an provider and returns detail updated provider info.
      parameters:
      - description: The ID of the provider
        in: path
        name: id
        required: true
        type: string
      - description: Provider's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyProvidersIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an provider and reuturns updated provider info.
  /v1.0/queuecall/{id}:
    get:
      description: Returns detail conferencecall info of the given queuecall id.
      parameters:
      - description: The ID of the queuecall
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/queuecall.Queuecall'
      summary: Returns detail queuecall info.
  /v1.0/queuecalls/{id}:
    delete:
      description: Deletes the queuecall.
      parameters:
      - description: The ID of the queuecall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Deletes the queuecall.
  /v1.0/queuecalls/{id}/kick:
    post:
      description: Kicks the queuecall.
      parameters:
      - description: The ID of the queuecall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Kicks the queuecall from the queue.
  /v1.0/queuecalls/reference_id/{id}/kick:
    post:
      description: Kicks the queuecall of the given reference id.
      parameters:
      - description: The ID of the queuecall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Kicks the queuecall of the given reference id from the queue.
  /v1.0/queues:
    get:
      description: get queues of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyQueuesGET'
      summary: List qeueus
    post:
      description: create a new queue
      parameters:
      - description: The queue detail
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/queue.WebhookMessage'
      summary: Create a new queue.
  /v1.0/queues/{id}:
    delete:
      description: Delete the queue of the given id
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete the queue
    get:
      description: Get the queue of the given id
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get the queue
    put:
      description: Update an queue and returns detail updated queue info.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyQueuesIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an queue and reuturns updated queue info.
  /v1.0/queues/{id}/routing_method:
    put:
      description: Update an queue routing_method info.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyAgentsIDTagIDsPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an queue's tag_id info.
  /v1.0/queues/{id}/status:
    put:
      description: Update the queue's action handle info.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyQueuesIDActionsPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an queue's action handle info.
  /v1.0/queues/{id}/tag_ids:
    put:
      description: Update the queue's tag_ids.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyQueuesIDTagIDsPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an queue's tag_ids info.
  /v1.0/recordingfiles/{id}:
    get:
      description: Download the recording file
      parameters:
      - description: The recordingfile's id.
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: recording file
      summary: Download the recording file
  /v1.0/recordings:
    get:
      description: get recordings of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyRecordingsGET'
      summary: List recordings
  /v1.0/recordings/{id}:
    delete:
      description: Deletes a recording and returns a deleted recording information
        of the given recording id.
      parameters:
      - description: The recording's id.
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/recording.Recording'
      summary: Deletes a recording and returns a deleted recording information.
    get:
      description: Returns a detial recording information of the given recording id.
      parameters:
      - description: The recording's id.
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/recording.Recording'
      summary: Returns a detail recording information.
  /v1.0/routes:
    get:
      description: get routes of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.WebhookMessage'
      summary: List routes
    post:
      description: create a new route
      parameters:
      - description: The route detail
        in: body
        name: route
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyRoutesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/route.WebhookMessage'
      summary: Create a new route.
  /v1.0/routes/{id}:
    delete:
      description: Delete the route of the given id
      parameters:
      - description: The ID of the route
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete the route
    get:
      description: Get the route of the given id
      parameters:
      - description: The ID of the route
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Get the route
    put:
      description: Update an route and returns detail updated route info.
      parameters:
      - description: The ID of the route
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyQueuesIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update an route and reuturns updated route info.
  /v1.0/tags:
    get:
      description: get tags of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyTagsGET'
      summary: List tags
    post:
      description: create a new tag.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.Tag'
      summary: Create a new tag.
  /v1.0/tags/{id}:
    delete:
      description: Delete the tag of the given id
      parameters:
      - description: The ID of the tag
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete the tag
    get:
      description: Get the tag of the given id
      parameters:
      - description: The ID of the tag
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.Tag'
      summary: Get the tag
    put:
      description: Update the tag info.
      parameters:
      - description: The tag's id.
        in: path
        name: id
        required: true
        type: string
      - description: The update info.
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyTagsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Update the tag info.
  /v1.0/transcribe/{id}:
    get:
      description: Returns detail transcribe info of the given transcribe id.
      parameters:
      - description: The ID of the transcribe
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transcribe.Transcribe'
      summary: Get detail transcribe info.
  /v1.0/transcribes:
    get:
      description: get transcribes of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyTranscribesGET'
      summary: Get list of transcribes
    post:
      description: transcribe a recording
      parameters:
      - description: Creating transcribe info.
        in: body
        name: transcribe
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyTranscribesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transcribe.Transcribe'
      summary: Create a transcribe
  /v1.0/transcribes/{id}:
    delete:
      description: Delete the transcribe of the given id
      parameters:
      - description: The ID of the transcribe
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transcribe.Transcribe'
      summary: Delete the transcribe.
  /v1.0/transcribes/{id}/stop:
    post:
      description: transcribe a recording
      parameters:
      - description: Creating transcribe info.
        in: body
        name: transcribe
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyTranscribesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transcribe.Transcribe'
      summary: Create a transcribe
  /v1.0/transcripts:
    get:
      description: get transcripts of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyTranscribesGET'
      summary: Get list of transcripts
  /v1.0/transfers:
    post:
      description: Transfer the call
      parameters:
      - description: Transfer info.
        in: body
        name: transcribe
        required: true
        schema:
          $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_request.BodyTransfersPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transfer.Transfer'
      summary: Start a transfer
  /v1.0/trunks:
    get:
      description: Gets a list of trunks
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gitlab_com_voipbin_bin-manager_api-manager_git_api_models_response.BodyTrunksGET'
      summary: Gets a list of trunks.
    post:
      description: Create a new trunk and returns detail created trunk info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trunk.Trunk'
      summary: Create a new trunk and returns detail created trunk info.
  /v1.0/trunks/{id}:
    delete:
      description: Delete a existing trunk.
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete a existing trunk.
    get:
      description: Returns detail trunk info of the given trunk id.
      parameters:
      - description: The ID of the trunk
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trunk.Trunk'
      summary: Returns detail trunk info.
    put:
      description: Update a trunk and returns detail updated trunk info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/trunk.Trunk'
      summary: Update a trunk and reuturns updated trunk info.
  /v1.0/ws:
    get:
      description: create a new queue
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/queue.WebhookMessage'
      summary: Create a new queue.
swagger: "2.0"
