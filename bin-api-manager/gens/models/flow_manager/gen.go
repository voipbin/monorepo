// Package flow_manager provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package flow_manager

import (
	"time"
)

// Defines values for ActionType.
const (
	ActionTypeAMD                 ActionType = "amd"
	ActionTypeAnswer              ActionType = "answer"
	ActionTypeBeep                ActionType = "beep"
	ActionTypeBranch              ActionType = "branch"
	ActionTypeCall                ActionType = "call"
	ActionTypeChatbotTalk         ActionType = "chatbot_talk"
	ActionTypeConditionCallDigits ActionType = "condition_call_digits"
	ActionTypeConditionCallStatus ActionType = "condition_call_status"
	ActionTypeConditionDatetime   ActionType = "condition_datetime"
	ActionTypeConditionVariable   ActionType = "condition_variable"
	ActionTypeConfbridgeJoin      ActionType = "confbridge_join"
	ActionTypeConferenceJoin      ActionType = "conference_join"
	ActionTypeConnect             ActionType = "connect"
	ActionTypeConversationSend    ActionType = "conversation_send"
	ActionTypeDigitsReceive       ActionType = "digits_receive"
	ActionTypeDigitsSend          ActionType = "digits_send"
	ActionTypeEcho                ActionType = "echo"
	ActionTypeExternalMediaStart  ActionType = "external_media_start"
	ActionTypeExternalMediaStop   ActionType = "external_media_stop"
	ActionTypeFetch               ActionType = "fetch"
	ActionTypeFetchFlow           ActionType = "fetch_flow"
	ActionTypeGoto                ActionType = "goto"
	ActionTypeHangup              ActionType = "hangup"
	ActionTypeMessageSend         ActionType = "message_send"
	ActionTypeMute                ActionType = "mute"
	ActionTypePlay                ActionType = "play"
	ActionTypeQueueJoin           ActionType = "queue_join"
	ActionTypeRecordingStart      ActionType = "recording_start"
	ActionTypeRecordingStop       ActionType = "recording_stop"
	ActionTypeSleep               ActionType = "sleep"
	ActionTypeStop                ActionType = "stop"
	ActionTypeStreamEcho          ActionType = "stream_echo"
	ActionTypeTalk                ActionType = "talk"
	ActionTypeTranscribeRecording ActionType = "transcribe_recording"
	ActionTypeTranscribeStart     ActionType = "transcribe_start"
	ActionTypeTranscribeStop      ActionType = "transcribe_stop"
	ActionTypeVariableSet         ActionType = "variable_set"
	ActionTypeWebhookSend         ActionType = "webhook_send"
)

// Defines values for ActiveflowReferenceType.
const (
	ActiveflowTypeCall    ActiveflowReferenceType = "call"
	ActiveflowTypeMessage ActiveflowReferenceType = "message"
	ActiveflowTypeNone    ActiveflowReferenceType = ""
)

// Defines values for ActiveflowStatus.
const (
	ActiveflowStatusEnded   ActiveflowStatus = "ended"
	ActiveflowStatusNone    ActiveflowStatus = ""
	ActiveflowStatusRunning ActiveflowStatus = "running"
)

// Defines values for FlowType.
const (
	FlowTypeCampaign   FlowType = "campaign"
	FlowTypeConference FlowType = "conference"
	FlowTypeFlow       FlowType = "flow"
	FlowTypeQueue      FlowType = "queue"
	FlowTypeTransfer   FlowType = "transfer"
)

// Action defines model for Action.
type Action struct {
	// Id The unique identifier
	Id string `json:"id"`

	// NextId The identifier of the next item
	NextId *string `json:"next_id,omitempty"`

	// Option Additional options
	Option *map[string]interface{} `json:"option,omitempty"`

	// TmExecute Timestamp or time to execute
	TmExecute *string `json:"tm_execute,omitempty"`

	// Type Type of the action.
	Type ActionType `json:"type"`
}

// ActionType Type of the action.
type ActionType string

// Activeflow defines model for Activeflow.
type Activeflow struct {
	CurrentAction *Action `json:"current_action,omitempty"`

	// CustomerId ID of the customer associated with the flow.
	CustomerId *string `json:"customer_id,omitempty"`

	// ExecutedActions List of actions that have been executed.
	ExecutedActions *[]Action `json:"executed_actions,omitempty"`

	// FlowId ID of the flow definition.
	FlowId *string `json:"flow_id,omitempty"`

	// ForwardActionId ID of the next action to be executed.
	ForwardActionId *string `json:"forward_action_id,omitempty"`

	// Id Unique identifier for the activeflow.
	Id *string `json:"id,omitempty"`

	// ReferenceId ID of the reference object.
	ReferenceId *string `json:"reference_id,omitempty"`

	// ReferenceType Reference type of activeflow.
	ReferenceType *ActiveflowReferenceType `json:"reference_type,omitempty"`

	// Status Status of the activeflow.
	Status *ActiveflowStatus `json:"status,omitempty"`

	// TmCreate Timestamp when the flow was created.
	TmCreate *time.Time `json:"tm_create,omitempty"`

	// TmDelete Timestamp when the flow was deleted.
	TmDelete *time.Time `json:"tm_delete,omitempty"`

	// TmUpdate Timestamp when the flow was last updated.
	TmUpdate *time.Time `json:"tm_update,omitempty"`
}

// ActiveflowReferenceType Reference type of activeflow.
type ActiveflowReferenceType string

// ActiveflowStatus Status of the activeflow.
type ActiveflowStatus string

// Flow defines model for Flow.
type Flow struct {
	// Actions List of actions associated with the flow.
	Actions *[]Action `json:"actions,omitempty"`

	// CustomerId Unique identifier for the customer.
	CustomerId *string `json:"customer_id,omitempty"`

	// Detail Detailed description of the flow.
	Detail *string `json:"detail,omitempty"`

	// Id Unique identifier for the flow.
	Id *string `json:"id,omitempty"`

	// Name Name of the flow.
	Name *string `json:"name,omitempty"`

	// TmCreate Timestamp when the flow was created.
	TmCreate *string `json:"tm_create,omitempty"`

	// TmDelete Timestamp when the flow was deleted.
	TmDelete *string `json:"tm_delete,omitempty"`

	// TmUpdate Timestamp when the flow was last updated.
	TmUpdate *string `json:"tm_update,omitempty"`

	// Type Type of the flow.
	Type *FlowType `json:"type,omitempty"`
}

// FlowType Type of the flow.
type FlowType string
