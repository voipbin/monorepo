// Package call_manager provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package call_manager

import (
	"time"

	externalRef0 "monorepo/bin-api-manager/gens/models/common"
	externalRef1 "monorepo/bin-api-manager/gens/models/flow_manager"
)

// Defines values for CallDirection.
const (
	CallDirectionIncoming CallDirection = "incoming"
	CallDirectionOutgoing CallDirection = "outgoing"
)

// Defines values for CallHangupBy.
const (
	CallHangupByLocal  CallHangupBy = "local"
	CallHangupByNone   CallHangupBy = ""
	CallHangupByRemote CallHangupBy = "remote"
)

// Defines values for CallHangupReason.
const (
	CallHangupReasonAMD      CallHangupReason = "amd"
	CallHangupReasonBusy     CallHangupReason = "busy"
	CallHangupReasonCancel   CallHangupReason = "cancel"
	CallHangupReasonDialout  CallHangupReason = "dialout"
	CallHangupReasonFailed   CallHangupReason = "failed"
	CallHangupReasonNoanswer CallHangupReason = "noanswer"
	CallHangupReasonNone     CallHangupReason = ""
	CallHangupReasonNormal   CallHangupReason = "normal"
	CallHangupReasonTimeout  CallHangupReason = "timeout"
)

// Defines values for CallMuteDirection.
const (
	CallMuteDirectionBoth CallMuteDirection = "both"
	CallMuteDirectionIn   CallMuteDirection = "in"
	CallMuteDirectionNone CallMuteDirection = ""
	CallMuteDirectionOut  CallMuteDirection = "out"
)

// Defines values for CallStatus.
const (
	CallStatusCanceling   CallStatus = "canceling"
	CallStatusDialing     CallStatus = "dialing"
	CallStatusHangup      CallStatus = "hangup"
	CallStatusProgressing CallStatus = "progressing"
	CallStatusRinging     CallStatus = "ringing"
	CallStatusTerminating CallStatus = "terminating"
)

// Defines values for CallType.
const (
	CallTypeConference CallType = "conference"
	CallTypeFlow       CallType = "flow"
	CallTypeNone       CallType = ""
	CallTypeSIPService CallType = "sip-service"
)

// Defines values for GroupcallAnswerMethod.
const (
	GroupcallAnswerMethodHangupOthers GroupcallAnswerMethod = "hangup_others"
	GroupcallAnswerMethodNone         GroupcallAnswerMethod = ""
)

// Defines values for GroupcallRingMethod.
const (
	GroupcallRingMethodLinear  GroupcallRingMethod = "linear"
	GroupcallRingMethodNone    GroupcallRingMethod = ""
	GroupcallRingMethodRingAll GroupcallRingMethod = "ring_all"
)

// Defines values for GroupcallStatus.
const (
	GroupcallStatusHangingup   GroupcallStatus = "hangingup"
	GroupcallStatusHangup      GroupcallStatus = "hangup"
	GroupcallStatusProgressing GroupcallStatus = "progressing"
)

// Defines values for RecordingFormat.
const (
	Wav RecordingFormat = "wav"
)

// Defines values for RecordingReferenceType.
const (
	RecordingReferenceTypeCall       RecordingReferenceType = "call"
	RecordingReferenceTypeConfbridge RecordingReferenceType = "confbridge"
)

// Defines values for RecordingStatus.
const (
	RecordingStatusEnded      RecordingStatus = "ended"
	RecordingStatusInitiating RecordingStatus = "initiating"
	RecordingStatusRecording  RecordingStatus = "recording"
	RecordingStatusStopping   RecordingStatus = "stopping"
)

// Call defines model for Call.
type Call struct {
	Action *externalRef1.Action `json:"action,omitempty"`

	// ActiveflowId Active flow ID
	ActiveflowId *string `json:"activeflow_id,omitempty"`

	// ChainedCallIds Chained call IDs
	ChainedCallIds *[]string `json:"chained_call_ids,omitempty"`

	// CustomerId Resource's customer ID
	CustomerId *string `json:"customer_id,omitempty"`

	// Destination Contains source or destination detail info.
	Destination *externalRef0.Address `json:"destination,omitempty"`

	// Direction Call direction
	Direction *CallDirection `json:"direction,omitempty"`

	// FlowId Flow ID
	FlowId *string `json:"flow_id,omitempty"`

	// GroupcallId Group call ID, indicates if this call is part of a group call
	GroupcallId *string `json:"groupcall_id,omitempty"`

	// HangupBy Indicates who hung up the call
	HangupBy *CallHangupBy `json:"hangup_by,omitempty"`

	// HangupReason Reason for call hangup
	HangupReason *CallHangupReason `json:"hangup_reason,omitempty"`

	// Id Resource identifier
	Id *string `json:"id,omitempty"`

	// MasterCallId Master call ID
	MasterCallId *string `json:"master_call_id,omitempty"`

	// MuteDirection Possible mute directions for the call
	MuteDirection *CallMuteDirection `json:"mute_direction,omitempty"`

	// OwnerId Resource's owner ID
	OwnerId *string `json:"owner_id,omitempty"`

	// OwnerType Resource's owner type
	OwnerType *string `json:"owner_type,omitempty"`

	// RecordingId Current recording ID
	RecordingId *string `json:"recording_id,omitempty"`

	// RecordingIds Recording IDs
	RecordingIds *[]string `json:"recording_ids,omitempty"`

	// Source Contains source or destination detail info.
	Source *externalRef0.Address `json:"source,omitempty"`

	// Status Call status
	Status *CallStatus `json:"status,omitempty"`

	// TmCreate Creation timestamp
	TmCreate *time.Time `json:"tm_create,omitempty"`

	// TmDelete Deletion timestamp
	TmDelete *time.Time `json:"tm_delete,omitempty"`

	// TmHangup Timestamp for call hangup
	TmHangup *time.Time `json:"tm_hangup,omitempty"`

	// TmProgressing Timestamp for call progressing
	TmProgressing *time.Time `json:"tm_progressing,omitempty"`

	// TmRinging Timestamp for call ringing
	TmRinging *time.Time `json:"tm_ringing,omitempty"`

	// TmUpdate Update timestamp
	TmUpdate *time.Time `json:"tm_update,omitempty"`

	// Type Call type
	Type *CallType `json:"type,omitempty"`
}

// CallDirection Call direction
type CallDirection string

// CallHangupBy Indicates who hung up the call
type CallHangupBy string

// CallHangupReason Reason for call hangup
type CallHangupReason string

// CallMuteDirection Possible mute directions for the call
type CallMuteDirection string

// CallStatus Call status
type CallStatus string

// CallType Call type
type CallType string

// Groupcall Call or group call information
type Groupcall struct {
	// AnswerCallId ID of the answered call
	AnswerCallId *string `json:"answer_call_id,omitempty"`

	// AnswerGroupcallId ID of the answered group call
	AnswerGroupcallId *string `json:"answer_groupcall_id,omitempty"`

	// AnswerMethod Method to handle answered calls
	AnswerMethod *GroupcallAnswerMethod `json:"answer_method,omitempty"`

	// CallCount Number of remaining calls in the current dial
	CallCount *int `json:"call_count,omitempty"`

	// CallIds List of associated call IDs
	CallIds *[]string `json:"call_ids,omitempty"`

	// CustomerId Resource's customer ID
	CustomerId *string `json:"customer_id,omitempty"`

	// Destinations List of destination addresses
	Destinations *[]externalRef0.Address `json:"destinations,omitempty"`

	// DialIndex Current dial index, valid only when the ring method is "ring_all"
	DialIndex *int `json:"dial_index"`

	// FlowId ID of the associated flow
	FlowId *string `json:"flow_id,omitempty"`

	// GroupcallCount Number of remaining group calls in the current dial
	GroupcallCount *int `json:"groupcall_count,omitempty"`

	// GroupcallIds List of associated group call IDs
	GroupcallIds *[]string `json:"groupcall_ids,omitempty"`

	// Id Resource identifier
	Id *string `json:"id,omitempty"`

	// MasterCallId ID of the master call, if applicable
	MasterCallId *string `json:"master_call_id"`

	// MasterGroupcallId ID of the master group call, if applicable
	MasterGroupcallId *string `json:"master_groupcall_id"`

	// OwnerId Resource's owner ID
	OwnerId *string `json:"owner_id,omitempty"`

	// OwnerType Resource's owner type
	OwnerType *string `json:"owner_type,omitempty"`

	// RingMethod Method used for dialing
	RingMethod *GroupcallRingMethod `json:"ring_method,omitempty"`

	// Source Contains source or destination detail info.
	Source *externalRef0.Address `json:"source,omitempty"`

	// Status Current status of the call or group call
	Status *GroupcallStatus `json:"status,omitempty"`

	// TmCreate Timestamp when the call was created
	TmCreate *time.Time `json:"tm_create,omitempty"`

	// TmDelete Timestamp when the call was deleted
	TmDelete *time.Time `json:"tm_delete"`

	// TmUpdate Timestamp when the call was last updated
	TmUpdate *time.Time `json:"tm_update,omitempty"`
}

// GroupcallAnswerMethod Method to handle answered calls
type GroupcallAnswerMethod string

// GroupcallRingMethod Method used for dialing
type GroupcallRingMethod string

// GroupcallStatus Current status of the call or group call
type GroupcallStatus string

// Recording defines model for Recording.
type Recording struct {
	// CustomerId Resource's customer ID
	CustomerId *string `json:"customer_id,omitempty"`

	// Format The format of the recording.
	Format *RecordingFormat `json:"format,omitempty"`

	// Id Resource identifier
	Id *string `json:"id,omitempty"`

	// OwnerId Resource's owner ID
	OwnerId *string `json:"owner_id,omitempty"`

	// OwnerType Resource's owner type
	OwnerType *string `json:"owner_type,omitempty"`

	// ReferenceId The UUID of the reference.
	ReferenceId *string `json:"reference_id,omitempty"`

	// ReferenceType Type of reference for the recording.
	ReferenceType *RecordingReferenceType `json:"reference_type,omitempty"`

	// Status The status of the recording.
	Status *RecordingStatus `json:"status,omitempty"`

	// TmCreate The creation timestamp of the recording.
	TmCreate *time.Time `json:"tm_create,omitempty"`

	// TmDelete The timestamp when the recording was deleted.
	TmDelete *time.Time `json:"tm_delete,omitempty"`

	// TmEnd The end timestamp of the recording.
	TmEnd *time.Time `json:"tm_end,omitempty"`

	// TmStart The start timestamp of the recording.
	TmStart *time.Time `json:"tm_start,omitempty"`

	// TmUpdate The last update timestamp of the recording.
	TmUpdate *time.Time `json:"tm_update,omitempty"`
}

// RecordingFormat The format of the recording.
type RecordingFormat string

// RecordingReferenceType Type of reference for the recording.
type RecordingReferenceType string

// RecordingStatus The status of the recording.
type RecordingStatus string
