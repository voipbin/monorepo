apiVersion: apps/v1
kind: Deployment
metadata:
  name: hook-manager
  labels:
    app: hook-manager
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hook-manager
  template:
    metadata:
      labels:
        app: hook-manager
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "2112"
    spec:
      containers:
        - name: hook-manager
          image: hook-manager-image
          command:
            - './hook-manager'
          env:
            - name: DATABASE_DSN
              value: ${DATABASE_DSN}
            - name: PROMETHEUS_ENDPOINT
              value: "/metrics"
            - name: PROMETHEUS_LISTEN_ADDRESS
              value: ":2112"
            - name: RABBITMQ_ADDRESS
              value: ${RABBITMQ_ADDRESS}
            - name: REDIS_ADDRESS
              value: ${REDIS_ADDRESS}
            - name: REDIS_PASSWORD
              value: ${REDIS_PASSWORD}
            - name: REDIS_DATABASE
              value: "1"
            - name: SSL_PRIVKEY_BASE64
              value: ${SSL_PRIVKEY_HOOK_BASE64}
            - name: SSL_CERT_BASE64
              value: ${SSL_CERT_HOOK_BASE64}
          ports:
            - name: metrics
              protocol: "TCP"
              containerPort: 2112
            - name: service-https
              protocol: "TCP"
              containerPort: 443
            - name: service-http
              protocol: "TCP"
              containerPort: 80
          readinessProbe:
            httpGet:
              path: /ping
              port: 443
              scheme: HTTPS
          resources:
            limits:
              cpu: "10m"
              memory: "30M"
