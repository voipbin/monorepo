definitions:
  action.Action:
    properties:
      id:
        type: string
      next_id:
        description: represent next target action id. if it not set, just go to next action in the action array.
        type: string
      option:
        type: string
      tm_execute:
        description: represent when this action has executed. This is used in call-manager.
        type: string
      type:
        type: string
    type: object
  address.Address:
    properties:
      detail:
        description: Detail.
        type: string
      name:
        description: Name.
        type: string
      target:
        description: Target address. If the type is 'tel' type, the terget must follow the E.164 format(https://www.itu.int/rec/T-REC-E.164/en).
        type: string
      target_name:
        description: Target's shown name.
        type: string
      type:
        description: Type of address. must be one of ["sip", "tel"].
        type: string
    type: object
  agent.Agent:
    properties:
      addresses:
        description: agent's endpoint addresses
        items:
          $ref: '#/definitions/address.Address'
        type: array
      customer_id:
        description: owned customer's id
        type: string
      detail:
        description: agent's detail
        type: string
      id:
        description: agent id
        type: string
      name:
        description: agent's name
        type: string
      permission:
        description: agent's permission.
        type: integer
      ring_method:
        description: agent's ring method
        type: string
      status:
        description: agent's status
        type: string
      tag_ids:
        description: agent's tag ids
        items:
          type: string
        type: array
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      username:
        description: agent's username
        type: string
    type: object
  availablenumber.AvailableNumber:
    properties:
      country:
        type: string
      features:
        items:
          type: string
        type: array
      number:
        type: string
      postal_code:
        type: string
      region:
        type: string
    type: object
  call.Call:
    properties:
      action:
        $ref: '#/definitions/action.Action'
        type: object
      chained_call_ids:
        description: chained call ids
        items:
          type: string
        type: array
      confbridge_id:
        description: currently joined confbridge id.
        type: string
      destination:
        $ref: '#/definitions/address.Address'
        type: object
      direction:
        type: string
      flow_id:
        description: flow id
        type: string
      hangup_by:
        type: string
      hangup_reason:
        type: string
      id:
        description: identity
        type: string
      master_call_id:
        description: etc info
        type: string
      recording_id:
        description: recording id(current)
        type: string
      recording_ids:
        description: recording ids
        items:
          type: string
        type: array
      source:
        $ref: '#/definitions/address.Address'
        description: source/destination
        type: object
      status:
        description: info
        type: string
      tm_create:
        description: timestamp
        type: string
      tm_hangup:
        type: string
      tm_progressing:
        type: string
      tm_ringing:
        type: string
      tm_update:
        type: string
      type:
        description: call type
        type: string
      webhook_uri:
        type: string
    type: object
  campaign.Campaign:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      customer_id:
        type: string
      detail:
        type: string
      end_handle:
        type: EndHandle
      execute:
        type: Execute
      flow_id:
        type: string
      id:
        type: string
      name:
        type: string
      next_campaign_id:
        type: string
      outdial_id:
        type: string
      outplan_id:
        type: string
      queue_id:
        type: string
      service_level:
        type: integer
      status:
        type: Status
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        type: Type
    type: object
  campaign.WebhookMessage:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        type: string
      end_handle:
        type: EndHandle
      id:
        type: string
      name:
        type: string
      next_campaign_id:
        type: string
      outdial_id:
        type: string
      outplan_id:
        type: string
      queue_id:
        type: string
      service_level:
        type: integer
      status:
        type: Status
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        type: Type
    type: object
  campaigncall.WebhookMessage:
    properties:
      activeflow_id:
        type: string
      campaign_id:
        type: string
      destination:
        $ref: '#/definitions/address.Address'
        type: object
      destination_index:
        type: integer
      id:
        type: string
      outdial_id:
        type: string
      outdial_target_id:
        type: string
      outplan_id:
        type: string
      queue_id:
        type: string
      reference_id:
        type: string
      reference_type:
        type: ReferenceType
      result:
        type: Result
      source:
        $ref: '#/definitions/address.Address'
        type: object
      status:
        type: Status
      tm_create:
        type: string
      tm_update:
        type: string
      try_count:
        type: integer
    type: object
  conference.Conference:
    properties:
      call_ids:
        description: list of call ids of conference
        items:
          type: string
        type: array
      data:
        additionalProperties: true
        type: object
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      post_actions:
        description: post actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      pre_actions:
        description: pre actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      recording_id:
        type: string
      recording_ids:
        items:
          type: string
        type: array
      status:
        type: string
      timeout:
        description: timeout. second
        type: integer
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        type: string
      webhook_uri:
        type: string
    type: object
  customer.Customer:
    properties:
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      permission_ids:
        items:
          type: string
        type: array
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      username:
        type: string
      webhook_method:
        type: WebhookMethod
      webhook_uri:
        type: string
    type: object
  domain.Domain:
    properties:
      detail:
        type: string
      domain_name:
        type: string
      id:
        type: string
      name:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  extension.Extension:
    properties:
      detail:
        type: string
      domain_id:
        type: string
      extension:
        type: string
      id:
        type: string
      name:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  flow.Flow:
    properties:
      actions:
        description: Actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        description: Detail
        type: string
      id:
        description: Flow's ID
        type: string
      name:
        description: Name
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      webhook_uri:
        type: string
    type: object
  message.Message:
    properties:
      direction:
        type: string
      id:
        type: string
      source:
        $ref: '#/definitions/address.Address'
        description: from/to info
        type: object
      targets:
        type: string
      text:
        description: message info
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      type:
        type: string
    type: object
  number.Number:
    properties:
      detail:
        type: string
      emergency_enabled:
        type: boolean
      flow_id:
        type: string
      id:
        type: string
      name:
        type: string
      number:
        type: string
      status:
        type: string
      t38_enabled:
        type: boolean
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  outdial.Outdial:
    properties:
      campaign_id:
        type: string
      customer_id:
        type: string
      data:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  outdial.WebhookMessage:
    properties:
      campaign_id:
        type: string
      data:
        type: string
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
    type: object
  outplan.Outplan:
    properties:
      customer_id:
        type: string
      detail:
        type: string
      dial_timeout:
        type: integer
      id:
        type: string
      max_try_count_0:
        type: integer
      max_try_count_1:
        type: integer
      max_try_count_2:
        type: integer
      max_try_count_3:
        type: integer
      max_try_count_4:
        type: integer
      name:
        type: string
      source:
        $ref: '#/definitions/address.Address'
        type: object
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      try_interval:
        type: integer
    type: object
  outplan.WebhookMessage:
    properties:
      detail:
        type: string
      dial_timeout:
        type: integer
      id:
        type: string
      max_try_count_0:
        type: integer
      max_try_count_1:
        type: integer
      max_try_count_2:
        type: integer
      max_try_count_3:
        type: integer
      max_try_count_4:
        type: integer
      name:
        type: string
      source:
        $ref: '#/definitions/address.Address'
        type: object
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      try_interval:
        type: integer
    type: object
  queue.WebhookMessage:
    properties:
      detail:
        type: string
      id:
        type: string
      name:
        type: string
      routing_method:
        type: RoutingMethod
      service_queue_call_ids:
        items:
          type: string
        type: array
      service_timeout:
        type: integer
      tag_ids:
        items:
          type: string
        type: array
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_update:
        type: string
      total_abandoned_count:
        type: integer
      total_incoming_count:
        type: integer
      total_service_duration:
        type: integer
      total_serviced_count:
        type: integer
      total_waittime:
        type: integer
      wait_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      wait_queue_call_ids:
        items:
          type: string
        type: array
      wait_timeout:
        type: integer
    type: object
  recording.Recording:
    properties:
      format:
        type: string
      id:
        type: string
      reference_id:
        type: string
      status:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_end:
        type: string
      tm_start:
        type: string
      tm_update:
        type: string
      type:
        type: string
    type: object
  request.BodyAgentsIDAddressesPUT:
    properties:
      addresses:
        items:
          $ref: '#/definitions/address.Address'
        type: array
    required:
    - addresses
    type: object
  request.BodyAgentsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
      ring_method:
        type: string
    type: object
  request.BodyAgentsIDStatusPUT:
    properties:
      status:
        type: string
    required:
    - status
    type: object
  request.BodyAgentsIDTagIDsPUT:
    properties:
      tag_ids:
        items:
          type: string
        type: array
    required:
    - tag_ids
    type: object
  request.BodyAgentsPOST:
    properties:
      addresses:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      detail:
        type: string
      name:
        type: string
      password:
        type: string
      permission:
        type: string
      ring_method:
        type: string
      tag_ids:
        items:
          type: string
        type: array
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.BodyCallsPOST:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      destinations:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      flow_id:
        type: string
      source:
        $ref: '#/definitions/address.Address'
        type: object
    required:
    - destinations
    - source
    type: object
  request.BodyCampaignsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyCampaignsIDResourceInfoPUT:
    properties:
      outdial_id:
        type: string
      outplan_id:
        type: string
      queue_id:
        type: string
    type: object
  request.BodyCampaignsIDStatusPUT:
    properties:
      status:
        type: string
    type: object
  request.BodyCampaignsPOST:
    properties:
      actions:
        description: this actions will be stored to the flow
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        type: string
      end_handle:
        type: string
      name:
        type: string
      next_campaign_id:
        type: string
      outdial_id:
        type: string
      outplan_id:
        description: resource info
        type: string
      queue_id:
        type: string
      service_level:
        type: integer
      type:
        type: string
    type: object
  request.BodyConferencesPOST:
    properties:
      detail:
        type: string
      name:
        type: string
      post_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      pre_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      type:
        type: string
    required:
    - type
    type: object
  request.BodyExtensionsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  request.BodyExtensionsPOST:
    properties:
      detail:
        type: string
      domain_id:
        type: string
      extension:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  request.BodyFlowsIDPUT:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyFlowsPOST:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyLoginPOST:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  request.BodyMessagesPOST:
    properties:
      destinations:
        items:
          $ref: '#/definitions/address.Address'
        type: array
      source:
        $ref: '#/definitions/address.Address'
        type: object
      text:
        type: string
    type: object
  request.BodyNumbersIDFlowIDPUT:
    properties:
      call_flow_id:
        type: string
      message_flow_id:
        type: string
    type: object
  request.BodyNumbersIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyNumbersPOST:
    properties:
      call_flow_id:
        type: string
      detail:
        type: string
      message_flow_id:
        type: string
      name:
        type: string
      number:
        type: string
    type: object
  request.BodyOutdialsIDDataPUT:
    properties:
      data:
        type: string
    type: object
  request.BodyOutdialsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyOutdialsPOST:
    properties:
      campaign_id:
        type: string
      data:
        type: string
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyOutplansIDDialInfoPUT:
    properties:
      dial_timeout:
        type: integer
      max_try_count_0:
        type: integer
      max_try_count_1:
        type: integer
      max_try_count_2:
        type: integer
      max_try_count_3:
        type: integer
      max_try_count_4:
        type: integer
      source:
        $ref: '#/definitions/address.Address'
        type: object
      try_interval:
        type: integer
    type: object
  request.BodyOutplansIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyOutplansPOST:
    properties:
      detail:
        type: string
      dial_timeout:
        type: integer
      max_try_count_0:
        type: integer
      max_try_count_1:
        type: integer
      max_try_count_2:
        type: integer
      max_try_count_3:
        type: integer
      max_try_count_4:
        type: integer
      name:
        type: string
      source:
        $ref: '#/definitions/address.Address'
        type: object
      try_interval:
        type: integer
    type: object
  request.BodyQueuesIDActionsPUT:
    properties:
      timeout_service:
        type: integer
      timeout_wait:
        type: integer
      wait_actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
    type: object
  request.BodyQueuesIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyQueuesIDTagIDsPUT:
    properties:
      tag_ids:
        items:
          type: string
        type: array
    type: object
  request.BodyTagsIDPUT:
    properties:
      detail:
        type: string
      name:
        type: string
    type: object
  request.BodyTranscribesPOST:
    properties:
      language:
        type: string
      recording_id:
        type: string
    type: object
  response.BodyAgentsGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyAvailableNumbersGET:
    properties:
      result:
        items:
          $ref: '#/definitions/availablenumber.AvailableNumber'
        type: array
    type: object
  response.BodyCallsGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyCampaignsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/campaign.WebhookMessage'
        type: array
    type: object
  response.BodyCampaignsIDCampaigncallsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/campaigncall.WebhookMessage'
        type: array
    type: object
  response.BodyCustomersGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyDomainsGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyFlowsGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyLoginPOST:
    properties:
      token:
        type: string
      username:
        type: string
    type: object
  response.BodyMessagesGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyNumbersGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyOutdialsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/outdial.WebhookMessage'
        type: array
    type: object
  response.BodyOutplansGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/outplan.WebhookMessage'
        type: array
    type: object
  response.BodyQueuesGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/queue.WebhookMessage'
        type: array
    type: object
  response.BodyRecordingsGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  response.BodyTagsGET:
    properties:
      next_page_token:
        type: string
      result:
        type: string
    type: object
  tag.Tag:
    properties:
      detail:
        description: tag's detail
        type: string
      id:
        description: tag id
        type: string
      name:
        description: tag's name
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
    type: object
  transcribe.Transcribe:
    properties:
      id:
        description: Transcribe id
        type: string
      language:
        description: BCP47 type's language code. en-US
        type: string
      reference_id:
        description: recording's id
        type: string
      transcripts:
        description: transcripts
        items:
          $ref: '#/definitions/transcribe.Transcript'
        type: array
      type:
        description: type
        type: string
      webhook_method:
        description: webhook method
        type: string
      webhook_uri:
        description: webhook destination uri
        type: string
    type: object
  transcribe.Transcript:
    properties:
      direction:
        description: direction. in/out
        type: string
      message:
        description: message
        type: string
      tm_create:
        description: timestamp
        type: string
    type: object
host: api.voipbin.net
info:
  contact:
    email: pchero21@gmail.com
    name: VoIPBIN Project
  description: RESTful API documents for VoIPBIN project.
  license: {}
  termsOfService: http://swagger.io/terms/
  title: VoIPBIN project API
  version: "1.0"
paths:
  /auth/login:
    post:
      description: Generate the JWT token and return it.
      parameters:
      - description: login info
        in: body
        name: login_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyLoginPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyLoginPOST'
      summary: Generate the JWT token and return it.
  /ping:
    get:
      description: Used to check the server is alive
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "pong"}'
      summary: Returns message pong
  /v1.0/agents:
    get:
      description: get agents of the user
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      - description: Comma seperated tag ids
        in: query
        name: tag_ids
        type: string
      - description: Agent status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyAgentsGET'
      summary: List agents
    post:
      description: create a new agent
      parameters:
      - description: The agent detail
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/request.BodyAgentsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/agent.Agent'
      summary: Create a new agent.
  /v1.0/agents/{id}:
    delete:
      description: Delete the agent of the given id
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete the agent
    get:
      description: Get the agent of the given id
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Get the agent
    put:
      description: Update an agent and returns detail updated agent info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyAgentsIDPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an agent and reuturns updated agent info.
  /v1.0/agents/{id}/addresses:
    put:
      description: Update an agent addresses info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyAgentsIDAddressesPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an agent info.
  /v1.0/agents/{id}/status:
    put:
      description: Update an agent status info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyAgentsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an agent's status info.
  /v1.0/agents/{id}/tag_ids:
    put:
      description: Update an agent tag_ids info.
      parameters:
      - description: The ID of the agent
        in: path
        name: id
        required: true
        type: string
      - description: Agent's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyAgentsIDTagIDsPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an agent's tag_id info.
  /v1.0/available_numbers:
    get:
      description: get available numbers of the country
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The ISO country code
        in: query
        name: country_code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyAvailableNumbersGET'
      summary: List available numbers
  /v1.0/calls:
    get:
      description: get calls of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyCallsGET'
      summary: Get list of calls
    post:
      description: dialing to destination
      parameters:
      - description: The call detail
        in: body
        name: call
        required: true
        schema:
          $ref: '#/definitions/request.BodyCallsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Make an outbound call
  /v1.0/calls/{id}:
    delete:
      description: Hangup the call of the given id
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Hangup the call
    get:
      description: Returns detail call info of the given call id.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Get detail call info.
  /v1.0/campaigncalls/{id}:
    delete:
      description: Delete a existing campaign.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Finish a existing campaign.
    get:
      description: Returns detail campaigns info of the given campaigncall id.
      parameters:
      - description: The ID of the campaigncall
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaigncall.WebhookMessage'
      summary: Returns detail campaigncall info.
  /v1.0/campaigns:
    get:
      description: Gets a list of campaigns
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyCampaignsGET'
      summary: Gets a list of campaigns.
    post:
      description: Create a new campaign and returns detail created campaign info.
      parameters:
      - description: campaign info.
        in: body
        name: campaign
        required: true
        schema:
          $ref: '#/definitions/request.BodyCampaignsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.WebhookMessage'
      summary: Create a new campaign and returns detail created campaign info.
  /v1.0/campaigns/{id}:
    delete:
      description: Delete a existing campaign.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing campaign.
    get:
      description: Returns detail campaigns info of the given campaigns id.
      parameters:
      - description: The ID of the campaigns
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Returns detail campaigns info.
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyCampaignsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/actions:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyCampaignsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/campaigncalls:
    get:
      description: Gets a list of campaigns
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyCampaignsIDCampaigncallsGET'
      summary: Gets a list of campaigns.
  /v1.0/campaigns/{id}/next_campaign_id:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyCampaignsIDResourceInfoPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/resource_info:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyCampaignsIDResourceInfoPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/service_level:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyCampaignsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/campaigns/{id}/status:
    put:
      description: Update a campaign and returns detail updated campaign info.
      parameters:
      - description: The campaign's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyCampaignsIDStatusPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/campaign.Campaign'
      summary: Update a campaign and reuturns updated campaign info.
  /v1.0/conferences:
    get:
      description: get conferences of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyCallsGET'
      summary: Get list of conferences
    post:
      description: Create a new conference with the given information.
      parameters:
      - description: The conference detail
        in: body
        name: conference
        required: true
        schema:
          $ref: '#/definitions/request.BodyConferencesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conference.Conference'
      summary: Create a new conferences
  /v1.0/conferences/{id}:
    delete:
      description: Delete the conference. All the participants in the conference will be kicked out.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete the conference.
    get:
      description: Returns detail conference info of the given conference id.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conference.Conference'
      summary: Returns detail conference info.
  /v1.0/conferences/{id}/calls/{call_id}:
    delete:
      description: Kick the call from the conference.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      - description: The call's id
        in: path
        name: call_id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Kick the call from the conference.
  /v1.0/customers:
    get:
      description: Gets a list of customers
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyCustomersGET'
      summary: Gets a list of customers.
    post:
      description: Create a new customer and returns detail created customer info.
      parameters:
      - description: customer info.
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/request.BodyFlowsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Create a new customer and returns detail created customer info.
  /v1.0/customers/{id}:
    delete:
      description: Delete a existing customer.
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing customer.
    get:
      description: Returns detail customer info of the given customer id.
      parameters:
      - description: The ID of the customer
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Returns detail customer info.
    put:
      description: Update a customer and returns detail updated customer info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Update a customer.
  /v1.0/customers/{id}/password:
    put:
      description: Update a customer's password.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Update a customer's password.
  /v1.0/customers/{id}/permissions_ids:
    put:
      description: Update a customer's permission_ids.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/customer.Customer'
      summary: Update a customer's permission_ids.
  /v1.0/domains:
    get:
      description: Gets a list of domains
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyDomainsGET'
      summary: Gets a list of domains.
    post:
      description: Create a new domain and returns detail created domain info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Domain'
      summary: Create a new domain and returns detail created domain info.
  /v1.0/domains/{id}:
    delete:
      description: Delete a existing domain.
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing domain.
    get:
      description: Returns detail domain info of the given domain id.
      parameters:
      - description: The ID of the domain
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Domain'
      summary: Returns detail domain info.
    put:
      description: Update a domain and returns detail updated domain info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Domain'
      summary: Update a domain and reuturns updated domain info.
  /v1.0/extension/{id}:
    get:
      description: Returns detail extension info of the given extension id.
      parameters:
      - description: The ID of the extension
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/extension.Extension'
      summary: Returns detail extension info.
  /v1.0/extensions:
    get:
      description: Gets a list of extensions
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      - description: The domain's id
        in: query
        name: domain_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/extension.Extension'
            type: array
      summary: Gets a list of extensions.
    post:
      description: Create a new extension and returns detail created extension info.
      parameters:
      - description: extension info
        in: body
        name: extension
        required: true
        schema:
          $ref: '#/definitions/request.BodyExtensionsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/extension.Extension'
      summary: Create a new domain and returns detail created extension info.
  /v1.0/extensions/{id}:
    delete:
      description: Delete a existing extension.
      parameters:
      - description: The extension's id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing extension.
    put:
      description: Update a extension and returns detail updated extension info.
      parameters:
      - description: extension's id
        in: path
        name: id
        required: true
        type: string
      - description: Update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyExtensionsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/extension.Extension'
      summary: Update a extension and reuturns updated extension info.
  /v1.0/flows:
    get:
      description: Gets a list of flows
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyFlowsGET'
      summary: Gets a list of flows.
    post:
      description: Create a new flow and returns detail created flow info.
      parameters:
      - description: flow info.
        in: body
        name: flow
        required: true
        schema:
          $ref: '#/definitions/request.BodyFlowsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Create a new flow and returns detail created flow info.
  /v1.0/flows/{id}:
    delete:
      description: Delete a existing flow.
      parameters:
      - description: The flow's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing flow.
    get:
      description: Returns detail flow info of the given flow id.
      parameters:
      - description: The ID of the flow
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Returns detail flow info.
    put:
      description: Update a flow and returns detail updated flow info.
      parameters:
      - description: The flow's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyFlowsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Update a flow and reuturns updated flow info.
  /v1.0/messages:
    get:
      description: get messages
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyMessagesGET'
      summary: List order messages
    post:
      description: Send a message and returns a sent message.
      parameters:
      - description: Sending message info.
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/request.BodyMessagesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      summary: Send a message and returns a sent message.
  /v1.0/messages/{id}:
    delete:
      description: delete message of the given id and returns deleted item.
      parameters:
      - description: The message's id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      summary: Delete message
    get:
      description: get message of the given id
      parameters:
      - description: The ID of the message
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/message.Message'
      summary: Get message
  /v1.0/numbers:
    get:
      description: get order numbers of the country
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyNumbersGET'
      summary: List order numbers
    post:
      description: Create a new number and returns detail created number info.
      parameters:
      - description: Creating number info.
        in: body
        name: number
        required: true
        schema:
          $ref: '#/definitions/request.BodyNumbersPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Create a new number and returns detail created number info.
  /v1.0/numbers/{id}:
    delete:
      description: delete order number of the given id and returns deleted item.
      parameters:
      - description: The number's id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Delete order number
    get:
      description: get order number of the given id
      parameters:
      - description: The ID of the order number
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Get order number
    put:
      description: Update the number's basic information.
      parameters:
      - description: Update info.
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyNumbersIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Update the number's basic information.
  /v1.0/numbers/{id}/flow_id:
    put:
      description: Update the number's flow_id.
      parameters:
      - description: Update info.
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyNumbersIDFlowIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/number.Number'
      summary: Update the number's flow_id.
  /v1.0/outdials:
    get:
      description: Gets a list of outdials
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyOutdialsGET'
      summary: Gets a list of outdials.
    post:
      description: Create a new outdial and returns detail created outdial info.
      parameters:
      - description: outdial info.
        in: body
        name: outdial
        required: true
        schema:
          $ref: '#/definitions/request.BodyOutdialsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.WebhookMessage'
      summary: Create a new outdial and returns detail created outdial info.
  /v1.0/outdials/{id}:
    delete:
      description: Delete a existing outdial.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing outdial.
    get:
      description: Returns detail outdials info of the given outdials id.
      parameters:
      - description: The ID of the outdials
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Returns detail outdials info.
    put:
      description: Update a outdial and returns detail updated outdial info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyOutdialsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Update a outdial and reuturns updated outdial info.
  /v1.0/outdials/{id}/campaign_id:
    put:
      description: Update a outdial's campaign_id and returns detail updated outdial info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyOutdialsIDPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Update a outdial's campaign_id and reuturns updated outdial info.
  /v1.0/outdials/{id}/data:
    put:
      description: Update a outdial's data and returns detail updated outdial info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyOutdialsIDDataPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Update a outdial's data and reuturns updated outdial info.
  /v1.0/outdials/{id}/targets:
    get:
      description: Get a list of outdialtargets.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Get a list of outdialtargets.
    post:
      description: Update a outdial's data and returns detail updated outdial info.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyOutdialsIDDataPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outdial.Outdial'
      summary: Create a new outdialtarget's data and reuturns updated outdial info.
  /v1.0/outdials/{id}/targets/{target_id}:
    delete:
      description: Delete a existing outdialtarget.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The outdialtarget's id
        in: query
        name: target_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing outdialtarget.
    get:
      description: Get a existing outdialtarget.
      parameters:
      - description: The outdial's id
        in: query
        name: id
        required: true
        type: string
      - description: The outdialtarget's id
        in: query
        name: target_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Get a existing outdialtarget.
  /v1.0/outplans:
    get:
      description: Gets a list of outplans
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyOutplansGET'
      summary: Gets a list of outplans.
    post:
      description: Create a new outplan and returns detail created outplan info.
      parameters:
      - description: outplan info.
        in: body
        name: outplan
        required: true
        schema:
          $ref: '#/definitions/request.BodyOutplansPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outplan.WebhookMessage'
      summary: Create a new outplan and returns detail created outplan info.
  /v1.0/outplans/{id}:
    delete:
      description: Delete a existing outplan.
      parameters:
      - description: The outplan's id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing outplan.
    get:
      description: Returns detail outplans info of the given outplans id.
      parameters:
      - description: The ID of the outplans
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outplan.Outplan'
      summary: Returns detail outplans info.
    put:
      description: Update a outplan and returns detail updated outplan info.
      parameters:
      - description: The outplan's id
        in: query
        name: id
        required: true
        type: string
      - description: The update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyOutplansIDDialInfoPUT'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/outplan.Outplan'
      summary: Update a outplan and reuturns updated outplan info.
  /v1.0/queues:
    get:
      description: get queues of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyQueuesGET'
      summary: List qeueus
    post:
      description: create a new queue
      parameters:
      - description: The queue detail
        in: body
        name: agent
        required: true
        schema:
          $ref: '#/definitions/request.BodyAgentsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/queue.WebhookMessage'
      summary: Create a new queue.
  /v1.0/queues/{id}:
    delete:
      description: Delete the queue of the given id
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete the queue
    get:
      description: Get the queue of the given id
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Get the queue
    put:
      description: Update an queue and returns detail updated queue info.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyQueuesIDPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an queue and reuturns updated queue info.
  /v1.0/queues/{id}/routing_method:
    put:
      description: Update an queue routing_method info.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyAgentsIDTagIDsPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an queue's tag_id info.
  /v1.0/queues/{id}/status:
    put:
      description: Update the queue's action handle info.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyQueuesIDActionsPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an queue's action handle info.
  /v1.0/queues/{id}/tag_ids:
    put:
      description: Update the queue's tag_ids.
      parameters:
      - description: The ID of the queue
        in: path
        name: id
        required: true
        type: string
      - description: Queue's update info
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyQueuesIDTagIDsPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update an queue's tag_ids info.
  /v1.0/recordingfiles/{id}:
    get:
      description: Download the recording file
      parameters:
      - description: The recordingfile's id.
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: recording file
      summary: Download the recording file
  /v1.0/recordings:
    get:
      description: get recordings of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyRecordingsGET'
      summary: List recordings
  /v1.0/recordings/{id}:
    get:
      description: Returns a detial recording information of the given recording id.
      parameters:
      - description: The recording's id.
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/recording.Recording'
      summary: Returns a detail recording information.
  /v1.0/tags:
    get:
      description: get tags of the customer
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyTagsGET'
      summary: List tags
    post:
      description: create a new tag.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.Tag'
      summary: Create a new tag.
  /v1.0/tags/{id}:
    delete:
      description: Delete the tag of the given id
      parameters:
      - description: The ID of the tag
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete the tag
    get:
      description: Get the tag of the given id
      parameters:
      - description: The ID of the tag
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tag.Tag'
      summary: Get the tag
    put:
      description: Update the tag info.
      parameters:
      - description: The tag's id.
        in: path
        name: id
        required: true
        type: string
      - description: The update info.
        in: body
        name: update_info
        required: true
        schema:
          $ref: '#/definitions/request.BodyTagsIDPUT'
      produces:
      - application/json
      responses:
        "200": {}
      summary: Update the tag info.
  /v1.0/transcribes:
    post:
      description: transcribe a recording
      parameters:
      - description: Creating transcribe info.
        in: body
        name: transcribe
        required: true
        schema:
          $ref: '#/definitions/request.BodyTranscribesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/transcribe.Transcribe'
      summary: Create a transcribe
swagger: "2.0"
