definitions:
  action.Action:
    properties:
      id:
        type: string
      option:
        type: string
      type:
        type: string
    type: object
  call.Address:
    properties:
      name:
        description: Name.
        type: string
      target:
        description: Destination. If the type is 'tel' type, the terget must follow the E.164 format(https://www.itu.int/rec/T-REC-E.164/en).
        type: string
      type:
        description: Type of address. must be one of ["sip", "tel"].
        type: string
    type: object
  call.Call:
    properties:
      chained_call_ids:
        description: Chained call ids
        items:
          type: string
        type: array
      conf_id:
        description: Currently joined conference id.
        type: string
      destination:
        $ref: '#/definitions/call.Address'
        description: Destination info
        type: object
      direction:
        description: Call's direction.
        type: string
      flow_id:
        description: Attached flow id
        type: string
      hangup_by:
        description: Describe which endpoint sent the hangup request first.
        type: string
      hangup_reason:
        description: Desribe detail of hangup reason.
        type: string
      id:
        description: Call's ID.
        type: string
      master_call_id:
        description: Master call id
        type: string
      recording_id:
        description: Recording id(current)
        type: string
      recording_ids:
        description: Recording ids
        items:
          type: string
        type: array
      source:
        $ref: '#/definitions/call.Address'
        description: Source info
        type: object
      status:
        description: Call's status.
        type: string
      tm_create:
        description: Timestamp. Created time.
        type: string
      tm_hangup:
        description: Timestamp. Hangup time.
        type: string
      tm_progressing:
        description: Timestamp. Progressing time.
        type: string
      tm_ringing:
        description: Timestamp. Ringing time.
        type: string
      tm_update:
        description: Timestamp. Updated time.
        type: string
      type:
        description: Call's type.
        type: string
      user_id:
        description: Call owner's ID.
        type: integer
    type: object
  conference.Conference:
    properties:
      call_ids:
        description: Currently joined call IDs.
        items:
          type: string
        type: array
      detail:
        description: Detail.
        type: string
      id:
        description: Conference's ID.
        type: string
      name:
        description: Name.
        type: string
      recording_id:
        description: Currently recording ID.
        type: string
      recording_ids:
        description: Recorded recording IDs.
        items:
          type: string
        type: array
      status:
        description: Status.
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
      type:
        description: Conference's type.
        type: string
      user_id:
        description: Conference owner's ID.
        type: integer
    type: object
  flow.Flow:
    properties:
      actions:
        description: Actions
        items:
          $ref: '#/definitions/action.Action'
        type: array
      detail:
        description: Detail
        type: string
      id:
        description: Flow's ID
        type: string
      name:
        description: Name
        type: string
      tm_create:
        description: Created timestamp.
        type: string
      tm_delete:
        description: Deleted timestamp.
        type: string
      tm_update:
        description: Updated timestamp.
        type: string
    type: object
  recording.Recording:
    properties:
      filename:
        type: string
      format:
        type: string
      id:
        type: string
      reference_id:
        type: string
      status:
        type: string
      tm_create:
        type: string
      tm_delete:
        type: string
      tm_end:
        type: string
      tm_start:
        type: string
      tm_update:
        type: string
      type:
        type: string
      user_id:
        type: integer
    type: object
  request.BodyCallsPOST:
    properties:
      actions:
        items:
          $ref: '#/definitions/action.Action'
        type: array
      destination:
        $ref: '#/definitions/call.Address'
        type: object
      event_url:
        type: string
      source:
        $ref: '#/definitions/call.Address'
        type: object
    required:
    - destination
    - source
    type: object
  request.BodyConferencesPOST:
    properties:
      detail:
        type: string
      name:
        type: string
      type:
        type: string
    required:
    - type
    type: object
  response.BodyCallsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/call.Call'
        type: array
    type: object
  response.BodyRecordingsGET:
    properties:
      next_page_token:
        type: string
      result:
        items:
          $ref: '#/definitions/recording.Recording'
        type: array
    type: object
host: api.voipbin.net
info:
  contact:
    email: pchero21@gmail.com
    name: VoIPBIN Project
  description: RESTful API documents for VoIPBIN project.
  license: {}
  termsOfService: http://swagger.io/terms/
  title: VoIPBIN project API
  version: "1.0"
paths:
  /ping:
    get:
      description: Used to check the server is alive
      produces:
      - application/json
      responses:
        "200":
          description: '{"message": "pong"}'
      summary: Returns message pong
  /v1.0/calls:
    get:
      description: get calls of the user
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyCallsGET'
      summary: List calls
    post:
      description: dialing to destination
      parameters:
      - description: The call detail
        in: body
        name: call
        required: true
        schema:
          $ref: '#/definitions/request.BodyCallsPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Make an outbound call
  /v1.0/calls/{id}:
    delete:
      description: Hangup the call of the given id
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Hangup the call
    get:
      description: Returns detail call info of the given call id.
      parameters:
      - description: The ID of the call
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/call.Call'
      summary: Returns detail call info.
  /v1.0/conferences:
    get:
      description: get conferences of the user
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyCallsGET'
      summary: Get list of conferences
    post:
      description: Create a new conference with the given information.
      parameters:
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      - description: The conference detail
        in: body
        name: call
        required: true
        schema:
          $ref: '#/definitions/request.BodyConferencesPOST'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conference.Conference'
      summary: Create a new conferences
  /v1.0/conferences/{id}:
    delete:
      description: Delete the conference. All the participants in the conference will be kicked out.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete the confernce.
    get:
      description: Returns detail conference info of the given conference id.
      parameters:
      - description: The ID of the conference
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/conference.Conference'
      summary: Returns detail conference info.
  /v1.0/flows:
    get:
      description: Gets a list of flows
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/flow.Flow'
            type: array
      summary: Gets a list of flows.
    post:
      description: Create a new flow and returns detail created flow info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Create a new flow and returns detail created flow info.
  /v1.0/flows/{id}:
    delete:
      description: Delete a existing flow.
      produces:
      - application/json
      responses:
        "200": {}
      summary: Delete a existing flow.
    get:
      description: Returns detail flow info of the given flow id.
      parameters:
      - description: The ID of the flow
        in: path
        name: id
        required: true
        type: string
      - description: JWT token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Returns detail flow info.
    put:
      description: Update a flow and returns detail updated flow info.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/flow.Flow'
      summary: Update a flow and reuturns updated flow info.
  /v1.0/recordingfiles/{id}:
    get:
      description: Download the recording file
      produces:
      - application/json
      responses:
        "200": {}
      summary: Download the recording file
  /v1.0/recordings:
    get:
      description: get recordings of the user
      parameters:
      - description: The size of results. Max 100
        in: query
        name: page_size
        type: integer
      - description: The token. tm_create
        in: query
        name: page_token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.BodyRecordingsGET'
      summary: List recordings
  /v1.0/recordings/{id}:
    get:
      description: Returns a detial recording information of the given recording id.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/recording.Recording'
      summary: Returns a detail recording information.
swagger: "2.0"
