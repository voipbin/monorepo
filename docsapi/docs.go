// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docsapi

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "VoIPBIN Project",
            "email": "pchero21@gmail.com"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Generate the JWT token and return it.",
                "produces": [
                    "application/json"
                ],
                "summary": "Generate the JWT token and return it.",
                "parameters": [
                    {
                        "description": "login info",
                        "name": "login_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyLoginPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyLoginPOST"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Used to check the server is alive",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns message pong",
                "responses": {
                    "200": {
                        "description": "{\"message\": \"pong\"}"
                    }
                }
            }
        },
        "/v1.0/agents": {
            "get": {
                "description": "get agents of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "List agents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma seperated tag ids",
                        "name": "tag_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Agent status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyAgentsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new agent",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new agent.",
                "parameters": [
                    {
                        "description": "The agent detail",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/agent.Agent"
                        }
                    }
                }
            }
        },
        "/v1.0/agents/{id}": {
            "get": {
                "description": "Get the agent of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "put": {
                "description": "Update an agent and returns detail updated agent info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent and reuturns updated agent info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete the agent of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/agents/{id}/addresses": {
            "put": {
                "description": "Update an agent addresses info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDAddressesPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/agents/{id}/status": {
            "put": {
                "description": "Update an agent status info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent's status info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/agents/{id}/tag_ids": {
            "put": {
                "description": "Update an agent tag_ids info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent's tag_id info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDTagIDsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/available_numbers": {
            "get": {
                "description": "get available numbers of the country",
                "produces": [
                    "application/json"
                ],
                "summary": "List available numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The ISO country code",
                        "name": "country_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyAvailableNumbersGET"
                        }
                    }
                }
            }
        },
        "/v1.0/calls": {
            "get": {
                "description": "get calls of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of calls",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCallsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "dialing to destination",
                "produces": [
                    "application/json"
                ],
                "summary": "Make an outbound call",
                "parameters": [
                    {
                        "description": "The call detail",
                        "name": "call",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCallsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            }
        },
        "/v1.0/calls/{id}": {
            "get": {
                "description": "Returns detail call info of the given call id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get detail call info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            },
            "delete": {
                "description": "Hangup the call of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Hangup the call",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigncalls/{id}": {
            "get": {
                "description": "Returns detail campaigns info of the given campaigncall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail campaigncall info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the campaigncall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaigncall.WebhookMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing campaign.",
                "produces": [
                    "application/json"
                ],
                "summary": "Finish a existing campaign.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/campaigns": {
            "get": {
                "description": "Gets a list of campaigns",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of campaigns.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCampaignsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new campaign and returns detail created campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new campaign and returns detail created campaign info.",
                "parameters": [
                    {
                        "description": "campaign info.",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}": {
            "get": {
                "description": "Returns detail campaigns info of the given campaigns id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail campaigns info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the campaigns",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing campaign.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing campaign.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/campaigns/{id}/actions": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/campaigncalls": {
            "get": {
                "description": "Gets a list of campaigns",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of campaigns.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCampaignsIDCampaigncallsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/next_campaign_id": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDResourceInfoPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/resource_info": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDResourceInfoPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/service_level": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/status": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/conferences": {
            "get": {
                "description": "get conferences of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of conferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCallsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new conference with the given information.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new conferences",
                "parameters": [
                    {
                        "description": "The conference detail",
                        "name": "conference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyConferencesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conference.Conference"
                        }
                    }
                }
            }
        },
        "/v1.0/conferences/{id}": {
            "get": {
                "description": "Returns detail conference info of the given conference id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail conference info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conference.Conference"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the conference. All the participants in the conference will be kicked out.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the conference.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/conferences/{id}/calls/{call_id}": {
            "delete": {
                "description": "Kick the call from the conference.",
                "produces": [
                    "application/json"
                ],
                "summary": "Kick the call from the conference.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The call's id",
                        "name": "call_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/customers": {
            "get": {
                "description": "Gets a list of customers",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of customers.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCustomersGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new customer and returns detail created customer info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new customer and returns detail created customer info.",
                "parameters": [
                    {
                        "description": "customer info.",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyFlowsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            }
        },
        "/v1.0/customers/{id}": {
            "get": {
                "description": "Returns detail customer info of the given customer id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail customer info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the customer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a customer and returns detail updated customer info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing customer.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing customer.",
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/customers/{id}/password": {
            "put": {
                "description": "Update a customer's password.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer's password.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            }
        },
        "/v1.0/customers/{id}/permissions_ids": {
            "put": {
                "description": "Update a customer's permission_ids.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer's permission_ids.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            }
        },
        "/v1.0/domains": {
            "get": {
                "description": "Gets a list of domains",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of domains.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyDomainsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new domain and returns detail created domain info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new domain and returns detail created domain info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            }
        },
        "/v1.0/domains/{id}": {
            "get": {
                "description": "Returns detail domain info of the given domain id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail domain info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the domain",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a domain and returns detail updated domain info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a domain and reuturns updated domain info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing domain.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing domain.",
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/extension/{id}": {
            "get": {
                "description": "Returns detail extension info of the given extension id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail extension info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the extension",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            }
        },
        "/v1.0/extensions": {
            "get": {
                "description": "Gets a list of extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of extensions.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The domain's id",
                        "name": "domain_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/extension.Extension"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new extension and returns detail created extension info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new domain and returns detail created extension info.",
                "parameters": [
                    {
                        "description": "extension info",
                        "name": "extension",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyExtensionsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            }
        },
        "/v1.0/extensions/{id}": {
            "put": {
                "description": "Update a extension and returns detail updated extension info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a extension and reuturns updated extension info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "extension's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyExtensionsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing extension.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing extension.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The extension's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/flows": {
            "get": {
                "description": "Gets a list of flows",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of flows.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyFlowsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new flow and returns detail created flow info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new flow and returns detail created flow info.",
                "parameters": [
                    {
                        "description": "flow info.",
                        "name": "flow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyFlowsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            }
        },
        "/v1.0/flows/{id}": {
            "get": {
                "description": "Returns detail flow info of the given flow id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail flow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the flow",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a flow and returns detail updated flow info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a flow and reuturns updated flow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The flow's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyFlowsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing flow.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing flow.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The flow's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/messages": {
            "get": {
                "description": "get messages",
                "produces": [
                    "application/json"
                ],
                "summary": "List order messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyMessagesGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Send a message and returns a sent message.",
                "produces": [
                    "application/json"
                ],
                "summary": "Send a message and returns a sent message.",
                "parameters": [
                    {
                        "description": "Sending message info.",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyMessagesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/message.Message"
                        }
                    }
                }
            }
        },
        "/v1.0/messages/{id}": {
            "get": {
                "description": "get message of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/message.Message"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete message of the given id and returns deleted item.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The message's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/message.Message"
                        }
                    }
                }
            }
        },
        "/v1.0/numbers": {
            "get": {
                "description": "get order numbers of the country",
                "produces": [
                    "application/json"
                ],
                "summary": "List order numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyNumbersGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new number and returns detail created number info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new number and returns detail created number info.",
                "parameters": [
                    {
                        "description": "Creating number info.",
                        "name": "number",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/numbers/{id}": {
            "get": {
                "description": "get order number of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get order number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the order number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the number's basic information.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the number's basic information.",
                "parameters": [
                    {
                        "description": "Update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete order number of the given id and returns deleted item.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete order number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The number's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/numbers/{id}/flow_id": {
            "put": {
                "description": "Update the number's flow_id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the number's flow_id.",
                "parameters": [
                    {
                        "description": "Update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersIDFlowIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials": {
            "get": {
                "description": "Gets a list of outdials",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of outdials.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyOutdialsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new outdial and returns detail created outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new outdial and returns detail created outdial info.",
                "parameters": [
                    {
                        "description": "outdial info.",
                        "name": "outdial",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}": {
            "get": {
                "description": "Returns detail outdials info of the given outdials id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail outdials info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the outdials",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a outdial and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outdial and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing outdial.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing outdial.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/outdials/{id}/campaign_id": {
            "put": {
                "description": "Update a outdial's campaign_id and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outdial's campaign_id and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}/data": {
            "put": {
                "description": "Update a outdial's data and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outdial's data and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDDataPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}/targets": {
            "get": {
                "description": "Get a list of outdialtargets.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a list of outdialtargets.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "post": {
                "description": "Update a outdial's data and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new outdialtarget's data and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDDataPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}/targets/{target_id}": {
            "get": {
                "description": "Get a existing outdialtarget.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a existing outdialtarget.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The outdialtarget's id",
                        "name": "target_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete a existing outdialtarget.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing outdialtarget.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The outdialtarget's id",
                        "name": "target_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/outplans": {
            "get": {
                "description": "Gets a list of outplans",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of outplans.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyOutplansGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new outplan and returns detail created outplan info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new outplan and returns detail created outplan info.",
                "parameters": [
                    {
                        "description": "outplan info.",
                        "name": "outplan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutplansPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outplan.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/outplans/{id}": {
            "get": {
                "description": "Returns detail outplans info of the given outplans id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail outplans info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the outplans",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outplan.Outplan"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a outplan and returns detail updated outplan info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outplan and reuturns updated outplan info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outplan's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutplansIDDialInfoPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outplan.Outplan"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing outplan.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing outplan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outplan's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/queues": {
            "get": {
                "description": "get queues of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List qeueus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyQueuesGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new queue",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new queue.",
                "parameters": [
                    {
                        "description": "The queue detail",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/queues/{id}": {
            "get": {
                "description": "Get the queue of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "put": {
                "description": "Update an queue and returns detail updated queue info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue and reuturns updated queue info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyQueuesIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete the queue of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/queues/{id}/routing_method": {
            "put": {
                "description": "Update an queue routing_method info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue's tag_id info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDTagIDsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/queues/{id}/status": {
            "put": {
                "description": "Update the queue's action handle info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue's action handle info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyQueuesIDActionsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/queues/{id}/tag_ids": {
            "put": {
                "description": "Update the queue's tag_ids.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue's tag_ids info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyQueuesIDTagIDsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/recordingfiles/{id}": {
            "get": {
                "description": "Download the recording file",
                "produces": [
                    "application/json"
                ],
                "summary": "Download the recording file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The recordingfile's id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recording file"
                    }
                }
            }
        },
        "/v1.0/recordings": {
            "get": {
                "description": "get recordings of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List recordings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyRecordingsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/recordings/{id}": {
            "get": {
                "description": "Returns a detial recording information of the given recording id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns a detail recording information.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The recording's id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/recording.Recording"
                        }
                    }
                }
            }
        },
        "/v1.0/tags": {
            "get": {
                "description": "get tags of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyTagsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new tag.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new tag.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.Tag"
                        }
                    }
                }
            }
        },
        "/v1.0/tags/{id}": {
            "get": {
                "description": "Get the tag of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.Tag"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the tag info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the tag info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The tag's id.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyTagsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete the tag of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/transcribes": {
            "post": {
                "description": "transcribe a recording",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a transcribe",
                "parameters": [
                    {
                        "description": "Creating transcribe info.",
                        "name": "transcribe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyTranscribesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transcribe.Transcribe"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "action.Action": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "next_id": {
                    "description": "represent next target action id. if it not set, just go to next action in the action array.",
                    "type": "string"
                },
                "option": {
                    "type": "string"
                },
                "tm_execute": {
                    "description": "represent when this action has executed. This is used in call-manager.",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "address.Address": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "Detail.",
                    "type": "string"
                },
                "name": {
                    "description": "Name.",
                    "type": "string"
                },
                "target": {
                    "description": "Target address. If the type is 'tel' type, the terget must follow the E.164 format(https://www.itu.int/rec/T-REC-E.164/en).",
                    "type": "string"
                },
                "target_name": {
                    "description": "Target's shown name.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of address. must be one of [\"sip\", \"tel\"].",
                    "type": "string"
                }
            }
        },
        "agent.Agent": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "agent's endpoint addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "customer_id": {
                    "description": "owned customer's id",
                    "type": "string"
                },
                "detail": {
                    "description": "agent's detail",
                    "type": "string"
                },
                "id": {
                    "description": "agent id",
                    "type": "string"
                },
                "name": {
                    "description": "agent's name",
                    "type": "string"
                },
                "permission": {
                    "description": "agent's permission.",
                    "type": "integer"
                },
                "ring_method": {
                    "description": "agent's ring method",
                    "type": "string"
                },
                "status": {
                    "description": "agent's status",
                    "type": "string"
                },
                "tag_ids": {
                    "description": "agent's tag ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "username": {
                    "description": "agent's username",
                    "type": "string"
                }
            }
        },
        "availablenumber.AvailableNumber": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "number": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "call.Call": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "object",
                    "$ref": "#/definitions/action.Action"
                },
                "chained_call_ids": {
                    "description": "chained call ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "confbridge_id": {
                    "description": "currently joined confbridge id.",
                    "type": "string"
                },
                "destination": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "direction": {
                    "type": "string"
                },
                "flow_id": {
                    "description": "flow id",
                    "type": "string"
                },
                "hangup_by": {
                    "type": "string"
                },
                "hangup_reason": {
                    "type": "string"
                },
                "id": {
                    "description": "identity",
                    "type": "string"
                },
                "master_call_id": {
                    "description": "etc info",
                    "type": "string"
                },
                "recording_id": {
                    "description": "recording id(current)",
                    "type": "string"
                },
                "recording_ids": {
                    "description": "recording ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "description": "source/destination",
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "description": "info",
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_hangup": {
                    "type": "string"
                },
                "tm_progressing": {
                    "type": "string"
                },
                "tm_ringing": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "description": "call type",
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "campaign.Campaign": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "end_handle": {
                    "type": "EndHandle"
                },
                "execute": {
                    "type": "Execute"
                },
                "flow_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_campaign_id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "service_level": {
                    "type": "integer"
                },
                "status": {
                    "type": "Status"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "Type"
                }
            }
        },
        "campaign.WebhookMessage": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "end_handle": {
                    "type": "EndHandle"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_campaign_id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "service_level": {
                    "type": "integer"
                },
                "status": {
                    "type": "Status"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "Type"
                }
            }
        },
        "campaigncall.WebhookMessage": {
            "type": "object",
            "properties": {
                "activeflow_id": {
                    "type": "string"
                },
                "campaign_id": {
                    "type": "string"
                },
                "destination": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "destination_index": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outdial_target_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "ReferenceType"
                },
                "result": {
                    "type": "Result"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "type": "Status"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "try_count": {
                    "type": "integer"
                }
            }
        },
        "conference.Conference": {
            "type": "object",
            "properties": {
                "call_ids": {
                    "description": "list of call ids of conference",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "post_actions": {
                    "description": "post actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "pre_actions": {
                    "description": "pre actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "recording_id": {
                    "type": "string"
                },
                "recording_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timeout": {
                    "description": "timeout. second",
                    "type": "integer"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "customer.Customer": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "permission_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "webhook_method": {
                    "type": "WebhookMethod"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "domain.Domain": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "extension.Extension": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "flow.Flow": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "Actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "description": "Detail",
                    "type": "string"
                },
                "id": {
                    "description": "Flow's ID",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "message.Message": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "source": {
                    "description": "from/to info",
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "targets": {
                    "type": "string"
                },
                "text": {
                    "description": "message info",
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "number.Number": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "emergency_enabled": {
                    "type": "boolean"
                },
                "flow_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "t38_enabled": {
                    "type": "boolean"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "outdial.Outdial": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "outdial.WebhookMessage": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "outplan.Outplan": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "dial_timeout": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "max_try_count_0": {
                    "type": "integer"
                },
                "max_try_count_1": {
                    "type": "integer"
                },
                "max_try_count_2": {
                    "type": "integer"
                },
                "max_try_count_3": {
                    "type": "integer"
                },
                "max_try_count_4": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "try_interval": {
                    "type": "integer"
                }
            }
        },
        "outplan.WebhookMessage": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "dial_timeout": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "max_try_count_0": {
                    "type": "integer"
                },
                "max_try_count_1": {
                    "type": "integer"
                },
                "max_try_count_2": {
                    "type": "integer"
                },
                "max_try_count_3": {
                    "type": "integer"
                },
                "max_try_count_4": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "try_interval": {
                    "type": "integer"
                }
            }
        },
        "queue.WebhookMessage": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "routing_method": {
                    "type": "RoutingMethod"
                },
                "service_queue_call_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service_timeout": {
                    "type": "integer"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "total_abandoned_count": {
                    "type": "integer"
                },
                "total_incoming_count": {
                    "type": "integer"
                },
                "total_service_duration": {
                    "type": "integer"
                },
                "total_serviced_count": {
                    "type": "integer"
                },
                "total_waittime": {
                    "type": "integer"
                },
                "wait_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "wait_queue_call_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wait_timeout": {
                    "type": "integer"
                }
            }
        },
        "recording.Recording": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_end": {
                    "type": "string"
                },
                "tm_start": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDAddressesPUT": {
            "type": "object",
            "required": [
                "addresses"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                }
            }
        },
        "request.BodyAgentsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ring_method": {
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDStatusPUT": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDTagIDsPUT": {
            "type": "object",
            "required": [
                "tag_ids"
            ],
            "properties": {
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.BodyAgentsPOST": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "string"
                },
                "ring_method": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.BodyCallsPOST": {
            "type": "object",
            "required": [
                "destinations",
                "source"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "flow_id": {
                    "type": "string"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                }
            }
        },
        "request.BodyCampaignsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyCampaignsIDResourceInfoPUT": {
            "type": "object",
            "properties": {
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                }
            }
        },
        "request.BodyCampaignsIDStatusPUT": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "request.BodyCampaignsPOST": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "this actions will be stored to the flow",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "end_handle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_campaign_id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "description": "resource info",
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "service_level": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyConferencesPOST": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "post_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "pre_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyExtensionsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BodyExtensionsPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BodyFlowsIDPUT": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyFlowsPOST": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyLoginPOST": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.BodyMessagesPOST": {
            "type": "object",
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersIDFlowIDPUT": {
            "type": "object",
            "properties": {
                "call_flow_id": {
                    "type": "string"
                },
                "message_flow_id": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersPOST": {
            "type": "object",
            "properties": {
                "call_flow_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "message_flow_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutdialsIDDataPUT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutdialsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutdialsPOST": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutplansIDDialInfoPUT": {
            "type": "object",
            "properties": {
                "dial_timeout": {
                    "type": "integer"
                },
                "max_try_count_0": {
                    "type": "integer"
                },
                "max_try_count_1": {
                    "type": "integer"
                },
                "max_try_count_2": {
                    "type": "integer"
                },
                "max_try_count_3": {
                    "type": "integer"
                },
                "max_try_count_4": {
                    "type": "integer"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "try_interval": {
                    "type": "integer"
                }
            }
        },
        "request.BodyOutplansIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutplansPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "dial_timeout": {
                    "type": "integer"
                },
                "max_try_count_0": {
                    "type": "integer"
                },
                "max_try_count_1": {
                    "type": "integer"
                },
                "max_try_count_2": {
                    "type": "integer"
                },
                "max_try_count_3": {
                    "type": "integer"
                },
                "max_try_count_4": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "try_interval": {
                    "type": "integer"
                }
            }
        },
        "request.BodyQueuesIDActionsPUT": {
            "type": "object",
            "properties": {
                "timeout_service": {
                    "type": "integer"
                },
                "timeout_wait": {
                    "type": "integer"
                },
                "wait_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                }
            }
        },
        "request.BodyQueuesIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyQueuesIDTagIDsPUT": {
            "type": "object",
            "properties": {
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.BodyTagsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyTranscribesPOST": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "recording_id": {
                    "type": "string"
                }
            }
        },
        "response.BodyAgentsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyAvailableNumbersGET": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/availablenumber.AvailableNumber"
                    }
                }
            }
        },
        "response.BodyCallsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyCampaignsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/campaign.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyCampaignsIDCampaigncallsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/campaigncall.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyCustomersGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyDomainsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyFlowsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyLoginPOST": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.BodyMessagesGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyNumbersGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyOutdialsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/outdial.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyOutplansGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/outplan.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyQueuesGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/queue.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyRecordingsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "response.BodyTagsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                }
            }
        },
        "tag.Tag": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "tag's detail",
                    "type": "string"
                },
                "id": {
                    "description": "tag id",
                    "type": "string"
                },
                "name": {
                    "description": "tag's name",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                }
            }
        },
        "transcribe.Transcribe": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Transcribe id",
                    "type": "string"
                },
                "language": {
                    "description": "BCP47 type's language code. en-US",
                    "type": "string"
                },
                "reference_id": {
                    "description": "recording's id",
                    "type": "string"
                },
                "transcripts": {
                    "description": "transcripts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transcribe.Transcript"
                    }
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "webhook_method": {
                    "description": "webhook method",
                    "type": "string"
                },
                "webhook_uri": {
                    "description": "webhook destination uri",
                    "type": "string"
                }
            }
        },
        "transcribe.Transcript": {
            "type": "object",
            "properties": {
                "direction": {
                    "description": "direction. in/out",
                    "type": "string"
                },
                "message": {
                    "description": "message",
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "api.voipbin.net",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "VoIPBIN project API",
	Description: "RESTful API documents for VoIPBIN project.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
