{
    "swagger": "2.0",
    "info": {
        "description": "RESTful API documents for VoIPBIN project.",
        "title": "VoIPBIN project API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "VoIPBIN Project",
            "email": "pchero21@gmail.com"
        },
        "license": {},
        "version": "1.0"
    },
    "host": "api.voipbin.net",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Generate the JWT token and return it.",
                "produces": [
                    "application/json"
                ],
                "summary": "Generate the JWT token and return it.",
                "parameters": [
                    {
                        "description": "login info",
                        "name": "login_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyLoginPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyLoginPOST"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Used to check the server is alive",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns message pong",
                "responses": {
                    "200": {
                        "description": "{\"message\": \"pong\"}"
                    }
                }
            }
        },
        "/v1.0/agents": {
            "get": {
                "description": "get agents of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "List agents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma seperated tag ids",
                        "name": "tag_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Agent status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyAgentsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new agent",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new agent.",
                "parameters": [
                    {
                        "description": "The agent detail",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/agent.Agent"
                        }
                    }
                }
            }
        },
        "/v1.0/agents/{id}": {
            "get": {
                "description": "Get the agent of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "put": {
                "description": "Update an agent and returns detail updated agent info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent and reuturns updated agent info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete the agent of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/agents/{id}/addresses": {
            "put": {
                "description": "Update an agent addresses info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDAddressesPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/agents/{id}/status": {
            "put": {
                "description": "Update an agent status info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent's status info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/agents/{id}/tag_ids": {
            "put": {
                "description": "Update an agent tag_ids info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent's tag_id info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDTagIDsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/available_numbers": {
            "get": {
                "description": "get available numbers of the country",
                "produces": [
                    "application/json"
                ],
                "summary": "List available numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The ISO country code",
                        "name": "country_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyAvailableNumbersGET"
                        }
                    }
                }
            }
        },
        "/v1.0/calls": {
            "get": {
                "description": "get calls of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of calls",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCallsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "dialing to destination",
                "produces": [
                    "application/json"
                ],
                "summary": "Make an outbound call",
                "parameters": [
                    {
                        "description": "The call detail",
                        "name": "call",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCallsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            }
        },
        "/v1.0/calls/{id}": {
            "get": {
                "description": "Returns detail call info of the given call id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get detail call info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            },
            "delete": {
                "description": "Hangup the call of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Hangup the call",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            }
        },
        "/v1.0/conferences": {
            "get": {
                "description": "get conferences of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of conferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCallsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new conference with the given information.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new conferences",
                "parameters": [
                    {
                        "description": "The conference detail",
                        "name": "conference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyConferencesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conference.Conference"
                        }
                    }
                }
            }
        },
        "/v1.0/conferences/{id}": {
            "get": {
                "description": "Returns detail conference info of the given conference id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail conference info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conference.Conference"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the conference. All the participants in the conference will be kicked out.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the conference.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/conferences/{id}/calls/{call_id}": {
            "delete": {
                "description": "Kick the call from the conference.",
                "produces": [
                    "application/json"
                ],
                "summary": "Kick the call from the conference.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The call's id",
                        "name": "call_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/domains": {
            "get": {
                "description": "Gets a list of domains",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of domains.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyDomainsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new domain and returns detail created domain info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new domain and returns detail created domain info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            }
        },
        "/v1.0/domains/{id}": {
            "get": {
                "description": "Returns detail flow info of the given domain id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail domain info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the domain",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a domain and returns detail updated domain info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a domain and reuturns updated domain info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing domain.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing domain.",
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/extension/{id}": {
            "get": {
                "description": "Returns detail extension info of the given extension id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail extension info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the extension",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            }
        },
        "/v1.0/extensions": {
            "get": {
                "description": "Gets a list of extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of extensions.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The domain's id",
                        "name": "domain_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/extension.Extension"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new extension and returns detail created extension info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new domain and returns detail created extension info.",
                "parameters": [
                    {
                        "description": "extension info",
                        "name": "extension",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyExtensionsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            }
        },
        "/v1.0/extensions/{id}": {
            "put": {
                "description": "Update a extension and returns detail updated extension info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a extension and reuturns updated extension info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "extension's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyExtensionsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing extension.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing extension.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The extension's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/flows": {
            "get": {
                "description": "Gets a list of flows",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of flows.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyFlowsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new flow and returns detail created flow info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new flow and returns detail created flow info.",
                "parameters": [
                    {
                        "description": "flow info.",
                        "name": "flow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyFlowsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            }
        },
        "/v1.0/flows/{id}": {
            "get": {
                "description": "Returns detail flow info of the given flow id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail flow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the flow",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a flow and returns detail updated flow info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a flow and reuturns updated flow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The flow's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyFlowsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing flow.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing flow.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The flow's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/numbers": {
            "get": {
                "description": "get order numbers of the country",
                "produces": [
                    "application/json"
                ],
                "summary": "List order numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyNumbersGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new number and returns detail created number info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new number and returns detail created number info.",
                "parameters": [
                    {
                        "description": "Creating number info.",
                        "name": "number",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/numbers/{id}": {
            "get": {
                "description": "get order number of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get order number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the order number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the number's basic information.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the number's basic information.",
                "parameters": [
                    {
                        "description": "Update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete order number of the given id and returns deleted item.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete order number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The number's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/recordingfiles/{id}": {
            "get": {
                "description": "Download the recording file",
                "produces": [
                    "application/json"
                ],
                "summary": "Download the recording file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The recordingfile's id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recording file"
                    }
                }
            }
        },
        "/v1.0/recordings": {
            "get": {
                "description": "get recordings of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "List recordings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyRecordingsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/recordings/{id}": {
            "get": {
                "description": "Returns a detial recording information of the given recording id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns a detail recording information.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The recording's id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/recording.Recording"
                        }
                    }
                }
            }
        },
        "/v1.0/tags": {
            "get": {
                "description": "get tags of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "List tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyTagsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new tag.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new tag.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.Tag"
                        }
                    }
                }
            }
        },
        "/v1.0/tags/{id}": {
            "get": {
                "description": "Get the tag of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.Tag"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the tag info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the tag info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The tag's id.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyTagsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete the tag of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/transcribes": {
            "post": {
                "description": "transcribe a recording",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a transcribe",
                "parameters": [
                    {
                        "description": "Creating transcribe info.",
                        "name": "transcribe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyTranscribesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transcribe.Transcribe"
                        }
                    }
                }
            }
        },
        "/v1.0/users": {
            "get": {
                "description": "get tags of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "List tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyUsersGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new user.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new user.",
                "parameters": [
                    {
                        "description": "Creating user info.",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyUsersPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.User"
                        }
                    }
                }
            }
        },
        "/v1.0/users/{id}": {
            "get": {
                "description": "Get the user of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user's id.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "put": {
                "description": "Get the user of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Put the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the user",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyUsersIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            },
            "delete": {
                "description": "Delete the user of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user's id.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/users/{id}/password": {
            "put": {
                "description": "Get the user of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Put the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user's id.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyUsersIDPasswordPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        },
        "/v1.0/users/{id}/permission": {
            "put": {
                "description": "Get the user of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Put the user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The user's id.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyUsersIDPermissionPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {}
                }
            }
        }
    },
    "definitions": {
        "action.Action": {
            "type": "object",
            "properties": {
                "option": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "address.Address": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "Detail.",
                    "type": "string"
                },
                "name": {
                    "description": "Name.",
                    "type": "string"
                },
                "target": {
                    "description": "Target address. If the type is 'tel' type, the terget must follow the E.164 format(https://www.itu.int/rec/T-REC-E.164/en).",
                    "type": "string"
                },
                "target_name": {
                    "description": "Target's shown name.",
                    "type": "string"
                },
                "type": {
                    "description": "Type of address. must be one of [\"sip\", \"tel\"].",
                    "type": "string"
                }
            }
        },
        "agent.Agent": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "agent's endpoint addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "detail": {
                    "description": "agent's detail",
                    "type": "string"
                },
                "id": {
                    "description": "agent id",
                    "type": "string"
                },
                "name": {
                    "description": "agent's name",
                    "type": "string"
                },
                "permission": {
                    "description": "agent's permission.",
                    "type": "integer"
                },
                "ring_method": {
                    "description": "agent's ring method",
                    "type": "string"
                },
                "status": {
                    "description": "agent's status",
                    "type": "string"
                },
                "tag_ids": {
                    "description": "agent's tag ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "user_id": {
                    "description": "owned user's id",
                    "type": "integer"
                },
                "username": {
                    "description": "agent's username",
                    "type": "string"
                }
            }
        },
        "availablenumber.AvailableNumber": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "number": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "call.Call": {
            "type": "object",
            "properties": {
                "chained_call_ids": {
                    "description": "Chained call ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "conf_id": {
                    "description": "Currently joined conference id.",
                    "type": "string"
                },
                "destination": {
                    "description": "Destination info",
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "direction": {
                    "description": "Call's direction.",
                    "type": "string"
                },
                "flow_id": {
                    "description": "Attached flow id",
                    "type": "string"
                },
                "hangup_by": {
                    "description": "Describe which endpoint sent the hangup request first.",
                    "type": "string"
                },
                "hangup_reason": {
                    "description": "Desribe detail of hangup reason.",
                    "type": "string"
                },
                "id": {
                    "description": "Call's ID.",
                    "type": "string"
                },
                "master_call_id": {
                    "description": "Master call id",
                    "type": "string"
                },
                "recording_id": {
                    "description": "Recording id(current)",
                    "type": "string"
                },
                "recording_ids": {
                    "description": "Recording ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "description": "Source info",
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "description": "Call's status.",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Timestamp. Created time.",
                    "type": "string"
                },
                "tm_hangup": {
                    "description": "Timestamp. Hangup time.",
                    "type": "string"
                },
                "tm_progressing": {
                    "description": "Timestamp. Progressing time.",
                    "type": "string"
                },
                "tm_ringing": {
                    "description": "Timestamp. Ringing time.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Timestamp. Updated time.",
                    "type": "string"
                },
                "type": {
                    "description": "Call's type.",
                    "type": "string"
                },
                "user_id": {
                    "description": "Call owner's ID.",
                    "type": "integer"
                },
                "webhook_uri": {
                    "description": "Webhook destination uri",
                    "type": "string"
                }
            }
        },
        "conference.Conference": {
            "type": "object",
            "properties": {
                "call_ids": {
                    "description": "Currently joined call IDs.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "detail": {
                    "description": "Detail.",
                    "type": "string"
                },
                "id": {
                    "description": "Conference's ID.",
                    "type": "string"
                },
                "name": {
                    "description": "Name.",
                    "type": "string"
                },
                "postActions": {
                    "description": "actions after leaving from the conference.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "preActions": {
                    "description": "actions before joining to the conference.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "recording_id": {
                    "description": "Currently recording ID.",
                    "type": "string"
                },
                "recording_ids": {
                    "description": "Recorded recording IDs.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "description": "Status.",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "type": {
                    "description": "Conference's type.",
                    "type": "string"
                },
                "user_id": {
                    "description": "Conference owner's ID.",
                    "type": "integer"
                },
                "webhook_uri": {
                    "description": "webhook uri",
                    "type": "string"
                }
            }
        },
        "domain.Domain": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "Detail",
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "extension.Extension": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "flow.Flow": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "Actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "description": "Detail",
                    "type": "string"
                },
                "id": {
                    "description": "Flow's ID",
                    "type": "string"
                },
                "name": {
                    "description": "Name",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "number.Number": {
            "type": "object",
            "properties": {
                "emergency_enabled": {
                    "type": "boolean"
                },
                "flow_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "t38_enabled": {
                    "type": "boolean"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_purchase": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "recording.Recording": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_end": {
                    "type": "string"
                },
                "tm_start": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "request.BodyAgentsIDAddressesPUT": {
            "type": "object",
            "required": [
                "addresses"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                }
            }
        },
        "request.BodyAgentsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ring_method": {
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDStatusPUT": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDTagIDsPUT": {
            "type": "object",
            "required": [
                "tag_ids"
            ],
            "properties": {
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.BodyAgentsPOST": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "integer"
                },
                "ring_method": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.BodyCallsPOST": {
            "type": "object",
            "required": [
                "destination",
                "source"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "destination": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "source": {
                    "type": "object",
                    "$ref": "#/definitions/address.Address"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "request.BodyConferencesPOST": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "post_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "pre_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "type": {
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "request.BodyExtensionsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BodyExtensionsPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BodyFlowsIDPUT": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "request.BodyFlowsPOST": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "request.BodyLoginPOST": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersIDPUT": {
            "type": "object",
            "properties": {
                "flow_id": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersPOST": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "string"
                }
            }
        },
        "request.BodyTagsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyTranscribesPOST": {
            "type": "object",
            "properties": {
                "language": {
                    "type": "string"
                },
                "recording_id": {
                    "type": "string"
                }
            }
        },
        "request.BodyUsersIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyUsersIDPasswordPUT": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BodyUsersIDPermissionPUT": {
            "type": "object",
            "properties": {
                "permission": {
                    "type": "integer"
                }
            }
        },
        "request.BodyUsersPOST": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.BodyAgentsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agent.Agent"
                    }
                }
            }
        },
        "response.BodyAvailableNumbersGET": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/availablenumber.AvailableNumber"
                    }
                }
            }
        },
        "response.BodyCallsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/call.Call"
                    }
                }
            }
        },
        "response.BodyDomainsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Domain"
                    }
                }
            }
        },
        "response.BodyFlowsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flow.Flow"
                    }
                }
            }
        },
        "response.BodyLoginPOST": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.BodyNumbersGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/number.Number"
                    }
                }
            }
        },
        "response.BodyRecordingsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recording.Recording"
                    }
                }
            }
        },
        "response.BodyTagsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tag.Tag"
                    }
                }
            }
        },
        "response.BodyUsersGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.User"
                    }
                }
            }
        },
        "tag.Tag": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "tag's detail",
                    "type": "string"
                },
                "id": {
                    "description": "tag id",
                    "type": "string"
                },
                "name": {
                    "description": "tag's name",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "user_id": {
                    "description": "owned user's id",
                    "type": "integer"
                }
            }
        },
        "transcribe.Transcribe": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Transcribe id",
                    "type": "string"
                },
                "language": {
                    "description": "BCP47 type's language code. en-US",
                    "type": "string"
                },
                "reference_id": {
                    "description": "recording's id",
                    "type": "string"
                },
                "transcripts": {
                    "description": "transcripts",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transcribe.Transcript"
                    }
                },
                "type": {
                    "description": "type",
                    "type": "string"
                },
                "webhook_method": {
                    "description": "webhook method",
                    "type": "string"
                },
                "webhook_uri": {
                    "description": "webhook destination uri",
                    "type": "string"
                }
            }
        },
        "transcribe.Transcript": {
            "type": "object",
            "properties": {
                "direction": {
                    "description": "direction. in/out",
                    "type": "string"
                },
                "message": {
                    "description": "message",
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "permission": {
                    "description": "User's permission.",
                    "type": "integer"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "username": {
                    "description": "User's username",
                    "type": "string"
                }
            }
        }
    }
}