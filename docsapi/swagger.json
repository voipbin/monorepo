{
    "swagger": "2.0",
    "info": {
        "description": "RESTful API documents for VoIPBIN project.",
        "title": "VoIPBIN project API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "VoIPBIN Project",
            "email": "pchero21@gmail.com"
        },
        "version": "1.0"
    },
    "host": "api.voipbin.net",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Generate the JWT token and return it.",
                "produces": [
                    "application/json"
                ],
                "summary": "Generate the JWT token and return it.",
                "parameters": [
                    {
                        "description": "login info",
                        "name": "login_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyLoginPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyLoginPOST"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Used to check the server is alive",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns message pong",
                "responses": {
                    "200": {
                        "description": "{\"message\": \"pong\"}"
                    }
                }
            }
        },
        "/v1.0/activeflows": {
            "get": {
                "description": "get activeflows of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of activeflows",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyActiveflowsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/activeflows/{id}": {
            "get": {
                "description": "Returns detail activeflow info of the given activeflow id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get detail activeflow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the activeflow",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/activeflow.Activeflow"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes activeflow info of the given activeflow id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes activeflow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the activeflow",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/activeflow.Activeflow"
                        }
                    }
                }
            }
        },
        "/v1.0/activeflows/{id}/stop": {
            "post": {
                "description": "Stops activeflow of the given activeflow id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Stops the given activeflow.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the activeflow",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/activeflow.Activeflow"
                        }
                    }
                }
            }
        },
        "/v1.0/agents": {
            "get": {
                "description": "get agents of the user",
                "produces": [
                    "application/json"
                ],
                "summary": "List agents",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Comma seperated tag ids",
                        "name": "tag_ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Agent status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyAgentsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new agent",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new agent.",
                "parameters": [
                    {
                        "description": "The agent detail",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/agent.Agent"
                        }
                    }
                }
            }
        },
        "/v1.0/agents/{id}": {
            "get": {
                "description": "Get the agent of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update an agent and returns detail updated agent info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent and reuturns updated agent info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete the agent of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the agent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/agents/{id}/addresses": {
            "put": {
                "description": "Update an agent addresses info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDAddressesPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/agents/{id}/status": {
            "put": {
                "description": "Update an agent status info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent's status info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/agents/{id}/tag_ids": {
            "put": {
                "description": "Update an agent tag_ids info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an agent's tag_id info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the agent",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Agent's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDTagIDsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/available_numbers": {
            "get": {
                "description": "get available numbers of the country",
                "produces": [
                    "application/json"
                ],
                "summary": "List available numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The ISO country code",
                        "name": "country_code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyAvailableNumbersGET"
                        }
                    }
                }
            }
        },
        "/v1.0/calls": {
            "get": {
                "description": "get calls of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of calls",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCallsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "dialing to destination",
                "produces": [
                    "application/json"
                ],
                "summary": "Make an outbound call",
                "parameters": [
                    {
                        "description": "The call detail",
                        "name": "call",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCallsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            }
        },
        "/v1.0/calls/{id}": {
            "get": {
                "description": "Returns detail call info of the given call id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get detail call info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            },
            "delete": {
                "description": "Hangup the call of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Hangup the call",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            }
        },
        "/v1.0/calls/{id}/hangup": {
            "post": {
                "description": "Returns detail call info of the given call id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Hangup the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/call.Call"
                        }
                    }
                }
            }
        },
        "/v1.0/calls/{id}/hold": {
            "post": {
                "description": "Hold the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "Hold the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Unhold the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "Unhold the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/calls/{id}/moh": {
            "post": {
                "description": "MOH the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "MOH the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "MOH off the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "MOH off the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/calls/{id}/mute": {
            "post": {
                "description": "Mute the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "Mute the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Unmute the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "Unmute the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/calls/{id}/silence": {
            "post": {
                "description": "Silence the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "Silence the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Silence off the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "Silence off the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/calls/{id}/talk": {
            "post": {
                "description": "Talks to the call.",
                "produces": [
                    "application/json"
                ],
                "summary": "Talk to the call.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the call",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/campaigncalls/{id}": {
            "get": {
                "description": "Returns detail campaigns info of the given campaigncall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail campaigncall info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the campaigncall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaigncall.WebhookMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing campaign.",
                "produces": [
                    "application/json"
                ],
                "summary": "Finish a existing campaign.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/campaigns": {
            "get": {
                "description": "Gets a list of campaigns",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of campaigns.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCampaignsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new campaign and returns detail created campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new campaign and returns detail created campaign info.",
                "parameters": [
                    {
                        "description": "campaign info.",
                        "name": "campaign",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}": {
            "get": {
                "description": "Returns detail campaigns info of the given campaigns id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail campaigns info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the campaigns",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing campaign.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing campaign.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/actions": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/campaigncalls": {
            "get": {
                "description": "Gets a list of campaigns",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of campaigns.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCampaignsIDCampaigncallsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/next_campaign_id": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDResourceInfoPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/resource_info": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDResourceInfoPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/service_level": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/campaigns/{id}/status": {
            "put": {
                "description": "Update a campaign and returns detail updated campaign info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a campaign and reuturns updated campaign info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The campaign's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCampaignsIDStatusPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/campaign.Campaign"
                        }
                    }
                }
            }
        },
        "/v1.0/chatbotcalls": {
            "get": {
                "description": "Gets a list of chatbotcalls",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of chatbotcalls.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyChatbotcallsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/chatbotcalls/{id}": {
            "get": {
                "description": "Returns detail chatbotcall info of the given chatbotcall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail chatbotcall info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatbotcall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chatbotcall.Chatbotcall"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing chatbotcall.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing chatbotcall.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The chatbotcall's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/chatbots": {
            "get": {
                "description": "Gets a list of chatbots",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of chatbots.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyChatbotsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new chatbot and returns detail created chatbot info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new chatbot and returns detail created chatbot info.",
                "parameters": [
                    {
                        "description": "chatbot info.",
                        "name": "chatbot",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyChatbotsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chatbot.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/chatbots/{id}": {
            "get": {
                "description": "Returns detail chatbot info of the given chatbot id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail chatbot info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatbot",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chatbot.Chatbot"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing chatbot.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing chatbot.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The chatbot's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/chatmessages": {
            "get": {
                "description": "Gets a list of chatmessages",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of chatmessages.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyChatmessagesGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new chatmessage and returns detail created chatmessage info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new chatmessage and returns detail created chatmessage info.",
                "parameters": [
                    {
                        "description": "chatmessage info.",
                        "name": "chatmessage",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyChatmessagesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messagechat.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/chatmessages/{id}": {
            "get": {
                "description": "Returns detail chatmessage info of the given chatmessage id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail chatmessage info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatmessage",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messagechat.Messagechat"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a chatmessage and returns detail chatmessage info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a chatmessage and returns detail chatmessage info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatroom",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messagechat.Messagechat"
                        }
                    }
                }
            }
        },
        "/v1.0/chatroommessages": {
            "get": {
                "description": "Gets a list of chatroommessages",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of chatroommessages.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The id of the chatroom",
                        "name": "chatroom_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyChatsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/chatroommessages/{id}": {
            "get": {
                "description": "Returns detail chatroommessage info of the given chatroommessage id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail chatroommessage info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatroommessage",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messagechatroom.Messagechatroom"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a chatroommessage and returns detail chatroommessage info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a chatroommessage and returns detail chatroommessage info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatroommessage",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/messagechatroom.Messagechatroom"
                        }
                    }
                }
            }
        },
        "/v1.0/chatrooms": {
            "get": {
                "description": "Gets a list of chatrooms",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of chatrooms.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The id of the chatroom owner",
                        "name": "owner_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyChatsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/chatrooms/{id}": {
            "get": {
                "description": "Returns detail chatroom info of the given chatroom id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail chatroom info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatroom",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chatroom.Chatroom"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a chatroom and returns detail chatroom info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a chatroom and returns detail chatroom info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chatroom",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chatroom.Chatroom"
                        }
                    }
                }
            }
        },
        "/v1.0/chats": {
            "get": {
                "description": "Gets a list of chats",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of chats.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyChatsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new chat and returns detail created chat info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new chat and returns detail created chat info.",
                "parameters": [
                    {
                        "description": "chat info.",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyChatsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/chats/{id}": {
            "get": {
                "description": "Returns detail chat info of the given chat id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail chat info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the chat",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.Chat"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a chat and returns detail updated info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a chat and reuturns updated info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The chat's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyChatsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.Chat"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing chat.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing chat.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The chat's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/chats/{id}/owner_id": {
            "put": {
                "description": "Update a chat and returns detail updated info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a chat and reuturns updated info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The chat's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyChatsIDOwnerIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.Chat"
                        }
                    }
                }
            }
        },
        "/v1.0/chats/{id}/participant_ids": {
            "post": {
                "description": "Add a new participant id to the cat and returns detail updated chat info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Add a new participant id to the chat and returns detail updated chat info.",
                "parameters": [
                    {
                        "description": "chat info.",
                        "name": "chat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyChatsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/chat.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/chats/{id}/participant_ids/{participant_id}": {
            "delete": {
                "description": "Remove participant id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Remove participant id.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The chat's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The chat's participant id",
                        "name": "participant_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/conferencecalls/{id}": {
            "get": {
                "description": "Returns detail conferencecall info of the given conferencecall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail conferencecall info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conferencecall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conferencecall.Conferencecall"
                        }
                    }
                }
            },
            "delete": {
                "description": "Kicks the conferencecall.",
                "produces": [
                    "application/json"
                ],
                "summary": "Kicks the conferencecall from the conference.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conferencecall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/conferences": {
            "get": {
                "description": "get conferences of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of conferences",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCallsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new conference with the given information.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new conferences",
                "parameters": [
                    {
                        "description": "The conference detail",
                        "name": "conference",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyConferencesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conference.Conference"
                        }
                    }
                }
            }
        },
        "/v1.0/conferences/{id}": {
            "get": {
                "description": "Returns detail conference info of the given conference id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail conference info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conference.Conference"
                        }
                    }
                }
            },
            "put": {
                "description": "Update conference info of the given conference id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update conference info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conference.Conference"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the conference. All the participants in the conference will be kicked out.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the conference.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/conferences/{id}/recording_start": {
            "post": {
                "description": "Start the conference recording.",
                "produces": [
                    "application/json"
                ],
                "summary": "Starts the conference recording.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/conferences/{id}/recording_stop": {
            "post": {
                "description": "Stops the conference recording.",
                "produces": [
                    "application/json"
                ],
                "summary": "Stops the conference recording.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/conferences/{id}/transcribe_start": {
            "post": {
                "description": "Start the conference transcribe.",
                "produces": [
                    "application/json"
                ],
                "summary": "Starts the conference transcribe.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/conferences/{id}/transcribe_stop": {
            "post": {
                "description": "Stops the conference transcribe.",
                "produces": [
                    "application/json"
                ],
                "summary": "Stops the conference transcribe.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conference",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/conversations": {
            "get": {
                "description": "Gets a list of conversations",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of conversations.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyConversationsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/conversations/setup": {
            "post": {
                "description": "Send a message and returns a sent message info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Send a message and returns detail sent message info.",
                "parameters": [
                    {
                        "description": "message info.",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ParamConversationsSetupPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_conversation-manager.git_models_message.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/conversations/{id}": {
            "get": {
                "description": "Returns detail conversation info of the given conversation id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail conversation info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the conversation",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/conversation.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/conversations/{id}/messages": {
            "get": {
                "description": "Gets a list of conversation messages",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of conversation messages.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyConversationsIDMessagesGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Send a message and returns a sent message info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Send a message and returns detail sent message info.",
                "parameters": [
                    {
                        "description": "message info.",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ParamConversationsIDMessagesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_conversation-manager.git_models_message.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/customers": {
            "get": {
                "description": "Gets a list of customers",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of customers.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyCustomersGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new customer and returns detail created customer info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new customer and returns detail created customer info.",
                "parameters": [
                    {
                        "description": "customer info.",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyCustomersPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            }
        },
        "/v1.0/customers/{id}": {
            "get": {
                "description": "Returns detail customer info of the given customer id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail customer info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the customer",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a customer and returns detail updated customer info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing customer.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing customer.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/customers/{id}/line_info": {
            "put": {
                "description": "Update a customer's line info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer's line info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            }
        },
        "/v1.0/customers/{id}/password": {
            "put": {
                "description": "Update a customer's password.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer's password.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            }
        },
        "/v1.0/customers/{id}/permissions_ids": {
            "put": {
                "description": "Update a customer's permission_ids.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a customer's permission_ids.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/customer.Customer"
                        }
                    }
                }
            }
        },
        "/v1.0/domains": {
            "get": {
                "description": "Gets a list of domains",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of domains.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyDomainsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new domain and returns detail created domain info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new domain and returns detail created domain info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            }
        },
        "/v1.0/domains/{id}": {
            "get": {
                "description": "Returns detail domain info of the given domain id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail domain info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the domain",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a domain and returns detail updated domain info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a domain and reuturns updated domain info.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing domain.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing domain.",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/extension/{id}": {
            "get": {
                "description": "Returns detail extension info of the given extension id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail extension info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the extension",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            }
        },
        "/v1.0/extensions": {
            "get": {
                "description": "Gets a list of extensions",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of extensions.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The domain's id",
                        "name": "domain_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/extension.Extension"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new extension and returns detail created extension info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new domain and returns detail created extension info.",
                "parameters": [
                    {
                        "description": "extension info",
                        "name": "extension",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyExtensionsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            }
        },
        "/v1.0/extensions/{id}": {
            "put": {
                "description": "Update a extension and returns detail updated extension info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a extension and reuturns updated extension info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "extension's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyExtensionsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/extension.Extension"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing extension.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing extension.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The extension's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/flows": {
            "get": {
                "description": "Gets a list of flows",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of flows.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyFlowsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new flow and returns detail created flow info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new flow and returns detail created flow info.",
                "parameters": [
                    {
                        "description": "flow info.",
                        "name": "flow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyFlowsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            }
        },
        "/v1.0/flows/{id}": {
            "get": {
                "description": "Returns detail flow info of the given flow id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail flow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the flow",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a flow and returns detail updated flow info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a flow and reuturns updated flow info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The flow's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyFlowsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/flow.Flow"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing flow.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing flow.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The flow's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/groupcalls": {
            "get": {
                "description": "Gets a list of groupcalls",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of groupcalls.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyGroupcallsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new groupcall and returns detail created groupcall info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new groupcall and returns detail created groupcall info.",
                "parameters": [
                    {
                        "description": "groupcall info.",
                        "name": "flow",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyGroupcallsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupcall.Groupcall"
                        }
                    }
                }
            }
        },
        "/v1.0/groupcalls/{id}": {
            "get": {
                "description": "Returns detail groupcall info of the given groupcall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail groupcall info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the groupcall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupcall.Groupcall"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete the groupcall of the given groupcall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the groupcall.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the groupcall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupcall.Groupcall"
                        }
                    }
                }
            }
        },
        "/v1.0/groupcalls/{id}/hangup": {
            "post": {
                "description": "Hangup the groupcall of the given groupcall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Hangup the groupcall.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the groupcall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/groupcall.Groupcall"
                        }
                    }
                }
            }
        },
        "/v1.0/messages": {
            "get": {
                "description": "get messages",
                "produces": [
                    "application/json"
                ],
                "summary": "List order messages",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyMessagesGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Send a message and returns a sent message.",
                "produces": [
                    "application/json"
                ],
                "summary": "Send a message and returns a sent message.",
                "parameters": [
                    {
                        "description": "Sending message info.",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyMessagesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/message.Message"
                        }
                    }
                }
            }
        },
        "/v1.0/messages/{id}": {
            "get": {
                "description": "get message of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/message.Message"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete message of the given id and returns deleted item.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The message's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/message.Message"
                        }
                    }
                }
            }
        },
        "/v1.0/numbers": {
            "get": {
                "description": "get order numbers of the country",
                "produces": [
                    "application/json"
                ],
                "summary": "List order numbers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyNumbersGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new number and returns detail created number info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new number and returns detail created number info.",
                "parameters": [
                    {
                        "description": "Creating number info.",
                        "name": "number",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/numbers/{id}": {
            "get": {
                "description": "get order number of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get order number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the order number",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the number's basic information.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the number's basic information.",
                "parameters": [
                    {
                        "description": "Update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete order number of the given id and returns deleted item.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete order number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The number's id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/numbers/{id}/flow_id": {
            "put": {
                "description": "Update the number's flow_id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the number's flow_id.",
                "parameters": [
                    {
                        "description": "Update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyNumbersIDFlowIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/number.Number"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials": {
            "get": {
                "description": "Gets a list of outdials",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of outdials.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyOutdialsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new outdial and returns detail created outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new outdial and returns detail created outdial info.",
                "parameters": [
                    {
                        "description": "outdial info.",
                        "name": "outdial",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}": {
            "get": {
                "description": "Returns detail outdials info of the given outdials id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail outdials info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the outdials",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a outdial and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outdial and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing outdial.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing outdial.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/outdials/{id}/campaign_id": {
            "put": {
                "description": "Update a outdial's campaign_id and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outdial's campaign_id and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}/data": {
            "put": {
                "description": "Update a outdial's data and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outdial's data and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDDataPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}/targets": {
            "get": {
                "description": "Get a list of outdialtargets.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a list of outdialtargets.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Update a outdial's data and returns detail updated outdial info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new outdialtarget's data and reuturns updated outdial info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutdialsIDDataPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outdial.Outdial"
                        }
                    }
                }
            }
        },
        "/v1.0/outdials/{id}/targets/{target_id}": {
            "get": {
                "description": "Get a existing outdialtarget.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get a existing outdialtarget.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The outdialtarget's id",
                        "name": "target_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete a existing outdialtarget.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing outdialtarget.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outdial's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The outdialtarget's id",
                        "name": "target_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/outplans": {
            "get": {
                "description": "Gets a list of outplans",
                "produces": [
                    "application/json"
                ],
                "summary": "Gets a list of outplans.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyOutplansGET"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new outplan and returns detail created outplan info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new outplan and returns detail created outplan info.",
                "parameters": [
                    {
                        "description": "outplan info.",
                        "name": "outplan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutplansPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outplan.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/outplans/{id}": {
            "get": {
                "description": "Returns detail outplans info of the given outplans id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail outplans info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the outplans",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outplan.Outplan"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a outplan and returns detail updated outplan info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update a outplan and reuturns updated outplan info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outplan's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "description": "The update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyOutplansIDDialInfoPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/outplan.Outplan"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a existing outplan.",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete a existing outplan.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The outplan's id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/provider/{id}": {
            "delete": {
                "description": "Delete the provider of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the provider",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/providers": {
            "get": {
                "description": "get providers of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List providers",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/provider.WebhookMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new provider",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new provider.",
                "parameters": [
                    {
                        "description": "The provider detail",
                        "name": "provider",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyProvidersPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/provider.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/providers/{id}": {
            "get": {
                "description": "Get the provider of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the provider",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the provider",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update an provider and returns detail updated provider info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an provider and reuturns updated provider info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the provider",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Provider's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyProvidersIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/queuecall/{id}": {
            "get": {
                "description": "Returns detail conferencecall info of the given queuecall id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns detail queuecall info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queuecall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "JWT token",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queuecall.Queuecall"
                        }
                    }
                }
            }
        },
        "/v1.0/queuecalls/reference_id/{id}/kick": {
            "post": {
                "description": "Kicks the queuecall of the given reference id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Kicks the queuecall of the given reference id from the queue.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queuecall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/queuecalls/{id}": {
            "delete": {
                "description": "Deletes the queuecall.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes the queuecall.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queuecall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/queuecalls/{id}/kick": {
            "post": {
                "description": "Kicks the queuecall.",
                "produces": [
                    "application/json"
                ],
                "summary": "Kicks the queuecall from the queue.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queuecall",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/queues": {
            "get": {
                "description": "get queues of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List qeueus",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyQueuesGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new queue",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new queue.",
                "parameters": [
                    {
                        "description": "The queue detail",
                        "name": "agent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/queues/{id}": {
            "get": {
                "description": "Get the queue of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update an queue and returns detail updated queue info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue and reuturns updated queue info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyQueuesIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete the queue of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the queue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/queues/{id}/routing_method": {
            "put": {
                "description": "Update an queue routing_method info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue's tag_id info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyAgentsIDTagIDsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/queues/{id}/status": {
            "put": {
                "description": "Update the queue's action handle info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue's action handle info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyQueuesIDActionsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/queues/{id}/tag_ids": {
            "put": {
                "description": "Update the queue's tag_ids.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an queue's tag_ids info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the queue",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyQueuesIDTagIDsPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/recordingfiles/{id}": {
            "get": {
                "description": "Download the recording file",
                "produces": [
                    "application/json"
                ],
                "summary": "Download the recording file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The recordingfile's id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "recording file"
                    }
                }
            }
        },
        "/v1.0/recordings": {
            "get": {
                "description": "get recordings of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List recordings",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyRecordingsGET"
                        }
                    }
                }
            }
        },
        "/v1.0/recordings/{id}": {
            "get": {
                "description": "Returns a detial recording information of the given recording id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Returns a detail recording information.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The recording's id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/recording.Recording"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a recording and returns a deleted recording information of the given recording id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Deletes a recording and returns a deleted recording information.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The recording's id.",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/recording.Recording"
                        }
                    }
                }
            }
        },
        "/v1.0/routes": {
            "get": {
                "description": "get routes of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List routes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.WebhookMessage"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new route",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new route.",
                "parameters": [
                    {
                        "description": "The route detail",
                        "name": "route",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyRoutesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/route.WebhookMessage"
                        }
                    }
                }
            }
        },
        "/v1.0/routes/{id}": {
            "get": {
                "description": "Get the route of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the route",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "Update an route and returns detail updated route info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update an route and reuturns updated route info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the route",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Queue's update info",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyQueuesIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete the route of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the route",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/tags": {
            "get": {
                "description": "get tags of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "List tags",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyTagsGET"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new tag.",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new tag.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.Tag"
                        }
                    }
                }
            }
        },
        "/v1.0/tags/{id}": {
            "get": {
                "description": "Get the tag of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tag.Tag"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the tag info.",
                "produces": [
                    "application/json"
                ],
                "summary": "Update the tag info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The tag's id.",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The update info.",
                        "name": "update_info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyTagsIDPUT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "Delete the tag of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the tag",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/v1.0/transcribe/{id}": {
            "get": {
                "description": "Returns detail transcribe info of the given transcribe id.",
                "produces": [
                    "application/json"
                ],
                "summary": "Get detail transcribe info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the transcribe",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transcribe.Transcribe"
                        }
                    }
                }
            }
        },
        "/v1.0/transcribes": {
            "get": {
                "description": "get transcribes of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of transcribes",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyTranscribesGET"
                        }
                    }
                }
            },
            "post": {
                "description": "transcribe a recording",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a transcribe",
                "parameters": [
                    {
                        "description": "Creating transcribe info.",
                        "name": "transcribe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyTranscribesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transcribe.Transcribe"
                        }
                    }
                }
            }
        },
        "/v1.0/transcribes/{id}": {
            "delete": {
                "description": "Delete the transcribe of the given id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete the transcribe.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The ID of the transcribe",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transcribe.Transcribe"
                        }
                    }
                }
            }
        },
        "/v1.0/transcribes/{id}/stop": {
            "post": {
                "description": "transcribe a recording",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a transcribe",
                "parameters": [
                    {
                        "description": "Creating transcribe info.",
                        "name": "transcribe",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.BodyTranscribesPOST"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/transcribe.Transcribe"
                        }
                    }
                }
            }
        },
        "/v1.0/transcripts": {
            "get": {
                "description": "get transcripts of the customer",
                "produces": [
                    "application/json"
                ],
                "summary": "Get list of transcripts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "The size of results. Max 100",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "The token. tm_create",
                        "name": "page_token",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.BodyTranscribesGET"
                        }
                    }
                }
            }
        },
        "/v1.0/ws": {
            "get": {
                "description": "create a new queue",
                "produces": [
                    "application/json"
                ],
                "summary": "Create a new queue.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/queue.WebhookMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "action.Action": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "next_id": {
                    "description": "represent next target action id. if it not set, just go to next action in the action array.",
                    "type": "string"
                },
                "option": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "tm_execute": {
                    "description": "represent when this action has executed. This is used in call-manager.",
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "activeflow.Activeflow": {
            "type": "object",
            "properties": {
                "current_action": {
                    "$ref": "#/definitions/action.Action"
                },
                "current_stack_id": {
                    "description": "current info",
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "execute_count": {
                    "description": "execute",
                    "type": "integer"
                },
                "executed_actions": {
                    "description": "list of executed actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "flow_id": {
                    "type": "string"
                },
                "forward_action_id": {
                    "type": "string"
                },
                "forward_stack_id": {
                    "description": "forward info",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "stack_map": {
                    "description": "stack",
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/stack.Stack"
                    }
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "activeflow.WebhookMessage": {
            "type": "object",
            "properties": {
                "current_action": {
                    "$ref": "#/definitions/action.Action"
                },
                "customer_id": {
                    "type": "string"
                },
                "flow_id": {
                    "type": "string"
                },
                "forward_action_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "address.Address": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "detail description.",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "target": {
                    "description": "address endpoint",
                    "type": "string"
                },
                "target_name": {
                    "description": "address's name.",
                    "type": "string"
                },
                "type": {
                    "description": "type of address",
                    "type": "string"
                }
            }
        },
        "agent.Agent": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "agent's endpoint addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "customer_id": {
                    "description": "customer's id",
                    "type": "string"
                },
                "detail": {
                    "description": "agent's detail",
                    "type": "string"
                },
                "id": {
                    "description": "agent id",
                    "type": "string"
                },
                "name": {
                    "description": "agent's name",
                    "type": "string"
                },
                "password_hash": {
                    "description": "hashed Password",
                    "type": "string"
                },
                "permission": {
                    "description": "agent's permission.",
                    "type": "integer"
                },
                "ring_method": {
                    "description": "agent's ring method",
                    "type": "string"
                },
                "status": {
                    "description": "agent's status",
                    "type": "string"
                },
                "tag_ids": {
                    "description": "agent's tag ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "username": {
                    "description": "agent's username",
                    "type": "string"
                }
            }
        },
        "agent.WebhookMessage": {
            "type": "object",
            "properties": {
                "addresses": {
                    "description": "agent's endpoint addresses",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "customer_id": {
                    "description": "customer's id",
                    "type": "string"
                },
                "detail": {
                    "description": "agent's detail",
                    "type": "string"
                },
                "id": {
                    "description": "agent id",
                    "type": "string"
                },
                "name": {
                    "description": "agent's name",
                    "type": "string"
                },
                "permission": {
                    "description": "agent's permission.",
                    "type": "integer"
                },
                "ring_method": {
                    "description": "agent's ring method",
                    "type": "string"
                },
                "status": {
                    "description": "agent's status",
                    "type": "string"
                },
                "tag_ids": {
                    "description": "agent's tag ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "username": {
                    "description": "agent's username",
                    "type": "string"
                }
            }
        },
        "availablenumber.WebhookMessage": {
            "type": "object",
            "properties": {
                "country": {
                    "type": "string"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "number": {
                    "type": "string"
                },
                "postal_code": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "call.Call": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "call's current action.",
                    "$ref": "#/definitions/action.Action"
                },
                "action_next_hold": {
                    "description": "call's next action hold. if true, don't allow to go next action",
                    "type": "boolean"
                },
                "active_flow_id": {
                    "description": "active flow id",
                    "type": "string"
                },
                "bridge_id": {
                    "description": "call bridge id",
                    "type": "string"
                },
                "chained_call_ids": {
                    "description": "chained call ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "channel_id": {
                    "type": "string"
                },
                "confbridge_id": {
                    "description": "currently joined confbridge id.",
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "destination": {
                    "$ref": "#/definitions/address.Address"
                },
                "dialroute_id": {
                    "description": "dialroute(valid only tel type outgoing call)",
                    "type": "string"
                },
                "dialroutes": {
                    "description": "list of dialroutes for dialing.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/route.Route"
                    }
                },
                "direction": {
                    "description": "direction of call. incoming/outgoing",
                    "type": "string"
                },
                "external_media_id": {
                    "description": "external media id(current)",
                    "type": "string"
                },
                "flow_id": {
                    "description": "flow id",
                    "type": "string"
                },
                "groupcall_id": {
                    "description": "groupcall id",
                    "type": "string"
                },
                "hangup_by": {
                    "type": "string"
                },
                "hangup_reason": {
                    "type": "string"
                },
                "id": {
                    "description": "identity",
                    "type": "string"
                },
                "master_call_id": {
                    "description": "etc info",
                    "type": "string"
                },
                "mute_direction": {
                    "description": "mute direction",
                    "type": "string"
                },
                "recording_id": {
                    "description": "recording id(current)",
                    "type": "string"
                },
                "recording_ids": {
                    "description": "recording ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "description": "source/destination",
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "description": "info",
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_hangup": {
                    "type": "string"
                },
                "tm_progressing": {
                    "type": "string"
                },
                "tm_ringing": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "description": "call type",
                    "type": "string"
                }
            }
        },
        "call.WebhookMessage": {
            "type": "object",
            "properties": {
                "action": {
                    "$ref": "#/definitions/action.Action"
                },
                "chained_call_ids": {
                    "description": "chained call ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/definitions/address.Address"
                },
                "direction": {
                    "description": "direction of call. incoming/outgoing",
                    "type": "string"
                },
                "flow_id": {
                    "description": "flow id",
                    "type": "string"
                },
                "hangup_by": {
                    "type": "string"
                },
                "hangup_reason": {
                    "type": "string"
                },
                "id": {
                    "description": "identity",
                    "type": "string"
                },
                "master_call_id": {
                    "description": "etc info",
                    "type": "string"
                },
                "mute_direction": {
                    "description": "mute direction",
                    "type": "string"
                },
                "recording_id": {
                    "description": "recording id(current)",
                    "type": "string"
                },
                "recording_ids": {
                    "description": "recording ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "description": "source/destination",
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "description": "info",
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_hangup": {
                    "type": "string"
                },
                "tm_progressing": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_ringing": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "description": "call type",
                    "type": "string"
                }
            }
        },
        "campaign.Campaign": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "this actions will be stored to the flow",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "end_handle": {
                    "type": "string"
                },
                "execute": {
                    "description": "if the execute is running, this sets to true",
                    "type": "string"
                },
                "flow_id": {
                    "description": "action settings",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_campaign_id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "description": "resource info",
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "service_level": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "campaign.WebhookMessage": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "action settings",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "end_handle": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_campaign_id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "description": "resource info",
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "service_level": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "campaigncall.WebhookMessage": {
            "type": "object",
            "properties": {
                "activeflow_id": {
                    "description": "this is required",
                    "type": "string"
                },
                "campaign_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "destination": {
                    "$ref": "#/definitions/address.Address"
                },
                "destination_index": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outdial_target_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "reference_id": {
                    "description": "reference id",
                    "type": "string"
                },
                "reference_type": {
                    "description": "none or call",
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "try_count": {
                    "type": "integer"
                }
            }
        },
        "chat.Chat": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "description": "owned agent id",
                    "type": "string"
                },
                "participant_ids": {
                    "description": "list of participated ids(agent ids)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "chat.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "description": "owned agent id",
                    "type": "string"
                },
                "participant_ids": {
                    "description": "list of participated ids(agent ids)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "chatbot.Chatbot": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "engine_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "chatbot.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "engine_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "chatbotcall.Chatbotcall": {
            "type": "object",
            "properties": {
                "chatbot_id": {
                    "type": "string"
                },
                "confbridge_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_end": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "transcribe_id": {
                    "type": "string"
                }
            }
        },
        "chatbotcall.WebhookMessage": {
            "type": "object",
            "properties": {
                "chatbot_id": {
                    "type": "string"
                },
                "confbridge_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_end": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "transcribe_id": {
                    "type": "string"
                }
            }
        },
        "chatroom.Chatroom": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "onwer_id": {
                    "description": "chatroom's owner agnet id.",
                    "type": "string"
                },
                "participant_ids": {
                    "description": "list of participated agent ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "conference.Conference": {
            "type": "object",
            "properties": {
                "confbridge_id": {
                    "description": "confbridge id(call-manager)",
                    "type": "string"
                },
                "conferencecall_ids": {
                    "description": "list of conferencecall ids of the conference",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "detail": {
                    "type": "string"
                },
                "flow_id": {
                    "description": "flow id(flow-manager)",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "post_actions": {
                    "description": "post actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "pre_actions": {
                    "description": "pre actions",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "recording_id": {
                    "type": "string"
                },
                "recording_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "status": {
                    "type": "string"
                },
                "timeout": {
                    "description": "timeout. second",
                    "type": "integer"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_end": {
                    "description": "represent the timestamp for conference ended.",
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "transcribe_id": {
                    "type": "string"
                },
                "transcribe_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "conferencecall.Conferencecall": {
            "type": "object",
            "properties": {
                "conference_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "conversation.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "customer.Customer": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "detail",
                    "type": "string"
                },
                "id": {
                    "description": "Customer's ID",
                    "type": "string"
                },
                "line_secret": {
                    "description": "line info",
                    "type": "string"
                },
                "line_token": {
                    "description": "line's token",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "permission_ids": {
                    "description": "customer's permission ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "username": {
                    "description": "Customer's username",
                    "type": "string"
                },
                "webhook_method": {
                    "description": "webhook info",
                    "type": "string"
                },
                "webhook_uri": {
                    "description": "webhook uri",
                    "type": "string"
                }
            }
        },
        "customer.WebhookMessage": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "detail",
                    "type": "string"
                },
                "id": {
                    "description": "Customer's ID",
                    "type": "string"
                },
                "line_secret": {
                    "description": "line info",
                    "type": "string"
                },
                "line_token": {
                    "description": "line's token",
                    "type": "string"
                },
                "name": {
                    "description": "name",
                    "type": "string"
                },
                "permission_ids": {
                    "description": "customer's permission ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "username": {
                    "description": "Customer's username",
                    "type": "string"
                },
                "webhook_method": {
                    "description": "webhook info",
                    "type": "string"
                },
                "webhook_uri": {
                    "description": "webhook uri",
                    "type": "string"
                }
            }
        },
        "domain.Domain": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "domain.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "domain_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "extension.Extension": {
            "type": "object",
            "properties": {
                "aor_id": {
                    "type": "string"
                },
                "auth_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "endpoint_id": {
                    "description": "asterisk resources",
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "flow.Flow": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "persist": {
                    "type": "boolean"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "flow.WebhookMessage": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_voipbin_bin-manager_chat-manager.git_models_media.Media": {
            "type": "object"
        },
        "gitlab.com_voipbin_bin-manager_conversation-manager.git_models_media.Media": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_voipbin_bin-manager_conversation-manager.git_models_message.WebhookMessage": {
            "type": "object",
            "properties": {
                "conversation_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_conversation-manager.git_models_media.Media"
                    }
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "source": {
                    "description": "source",
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "gitlab.com_voipbin_bin-manager_message-manager.git_models_message.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "source": {
                    "description": "from/to info",
                    "$ref": "#/definitions/address.Address"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/target.Target"
                    }
                },
                "text": {
                    "description": "message info",
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "groupcall.Groupcall": {
            "type": "object",
            "properties": {
                "answer_call_id": {
                    "description": "valid only when the answered_method  is hangup others",
                    "type": "string"
                },
                "answer_method": {
                    "type": "string"
                },
                "call_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ring_method": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "groupcall.WebhookMessage": {
            "type": "object",
            "properties": {
                "answer_call_id": {
                    "description": "valid only when the answered_method  is hangup others",
                    "type": "string"
                },
                "answer_method": {
                    "type": "string"
                },
                "call_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "id": {
                    "type": "string"
                },
                "ring_method": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "message.Message": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "provider_name": {
                    "description": "provider info",
                    "type": "string"
                },
                "provider_reference_id": {
                    "type": "string"
                },
                "source": {
                    "description": "from/to info",
                    "$ref": "#/definitions/address.Address"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/target.Target"
                    }
                },
                "text": {
                    "description": "message info",
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "messagechat.Messagechat": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_chat-manager.git_models_media.Media"
                    }
                },
                "source": {
                    "description": "message defines",
                    "$ref": "#/definitions/address.Address"
                },
                "text": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "messagechat.WebhookMessage": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_chat-manager.git_models_media.Media"
                    }
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "text": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "messagechatroom.Messagechatroom": {
            "type": "object",
            "properties": {
                "chatroom_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_chat-manager.git_models_media.Media"
                    }
                },
                "messagechat_id": {
                    "type": "string"
                },
                "source": {
                    "description": "message defines",
                    "$ref": "#/definitions/address.Address"
                },
                "text": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "number.Number": {
            "type": "object",
            "properties": {
                "call_flow_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "emergency_enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "message_flow_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "provider_name": {
                    "type": "string"
                },
                "provider_reference_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "t38_enabled": {
                    "type": "boolean"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_purchase": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "number.WebhookMessage": {
            "type": "object",
            "properties": {
                "call_flow_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "emergency_enabled": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string"
                },
                "message_flow_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "t38_enabled": {
                    "type": "boolean"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "outdial.Outdial": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "outdial.WebhookMessage": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "outplan.Outplan": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "dial_timeout": {
                    "description": "plan dial settings",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "max_try_count_0": {
                    "description": "max try count",
                    "type": "integer"
                },
                "max_try_count_1": {
                    "description": "max try count for destination_1",
                    "type": "integer"
                },
                "max_try_count_2": {
                    "description": "max try count for destination_2",
                    "type": "integer"
                },
                "max_try_count_3": {
                    "description": "max try count for destination_3",
                    "type": "integer"
                },
                "max_try_count_4": {
                    "description": "max try count for destination_4",
                    "type": "integer"
                },
                "name": {
                    "description": "basic info",
                    "type": "string"
                },
                "source": {
                    "description": "source settings",
                    "$ref": "#/definitions/address.Address"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "try_interval": {
                    "description": "milliseconds",
                    "type": "integer"
                }
            }
        },
        "outplan.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "dial_timeout": {
                    "description": "plan dial settings",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "max_try_count_0": {
                    "type": "integer"
                },
                "max_try_count_1": {
                    "type": "integer"
                },
                "max_try_count_2": {
                    "type": "integer"
                },
                "max_try_count_3": {
                    "type": "integer"
                },
                "max_try_count_4": {
                    "type": "integer"
                },
                "name": {
                    "description": "basic info",
                    "type": "string"
                },
                "source": {
                    "description": "source settings",
                    "$ref": "#/definitions/address.Address"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "try_interval": {
                    "description": "milliseconds",
                    "type": "integer"
                }
            }
        },
        "provider.WebhookMessage": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "hostname": {
                    "description": "destination",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tech_headers": {
                    "description": "tech headers. valid only for the sip type.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tech_postfix": {
                    "description": "tech postfix. valid only for the sip type.",
                    "type": "string"
                },
                "tech_prefix": {
                    "description": "sip type techs",
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "queue.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "description": "owner id",
                    "type": "string"
                },
                "detail": {
                    "description": "queue's detail",
                    "type": "string"
                },
                "id": {
                    "description": "queue id",
                    "type": "string"
                },
                "name": {
                    "description": "basic info",
                    "type": "string"
                },
                "routing_method": {
                    "description": "operation info",
                    "type": "string"
                },
                "service_queuecall_ids": {
                    "description": "service queue call ids(ms).",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "service_timeout": {
                    "description": "service queue timeout(ms).",
                    "type": "integer"
                },
                "tag_ids": {
                    "description": "queue's tag ids",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                },
                "total_abandoned_count": {
                    "description": "total abandoned call count",
                    "type": "integer"
                },
                "total_incoming_count": {
                    "description": "total incoming call count",
                    "type": "integer"
                },
                "total_serviced_count": {
                    "description": "total serviced call count",
                    "type": "integer"
                },
                "wait_actions": {
                    "description": "wait/service info",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "wait_queuecall_ids": {
                    "description": "queuecall info",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "wait_timeout": {
                    "description": "wait queue timeout.(ms)",
                    "type": "integer"
                }
            }
        },
        "queuecall.Queuecall": {
            "type": "object",
            "properties": {
                "confbridge_id": {
                    "description": "confbridge id",
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "duration_service": {
                    "description": "duration for service(ms)",
                    "type": "integer"
                },
                "duration_waiting": {
                    "description": "duration for waiting(ms)",
                    "type": "integer"
                },
                "exit_action_id": {
                    "description": "action id for queue exit. When the queuecall has ended, the queuemanager will send the request forward to this action id.",
                    "type": "string"
                },
                "forward_action_id": {
                    "description": "action id for forward. This is for the conference_join's action id.",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "reference_activeflow_id": {
                    "description": "referenced resource's activeflow id",
                    "type": "string"
                },
                "reference_id": {
                    "description": "referenced resource's id.",
                    "type": "string"
                },
                "reference_type": {
                    "description": "referenced resource's type.",
                    "type": "string"
                },
                "routing_method": {
                    "description": "queue's routing method",
                    "type": "string"
                },
                "service_agent_id": {
                    "type": "string"
                },
                "source": {
                    "description": "source address for calling to the agent.",
                    "$ref": "#/definitions/address.Address"
                },
                "status": {
                    "type": "string"
                },
                "tag_ids": {
                    "description": "queue's tags",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "timeout_service": {
                    "description": "timeout for service.(ms)",
                    "type": "integer"
                },
                "timeout_wait": {
                    "description": "timeout for wait.(ms)",
                    "type": "integer"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_end": {
                    "description": "ended timestamp.",
                    "type": "string"
                },
                "tm_service": {
                    "description": "Serviced timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                }
            }
        },
        "recording.Recording": {
            "type": "object",
            "properties": {
                "asterisk_id": {
                    "type": "string"
                },
                "channel_ids": {
                    "description": "snoop channel ids for recording",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "customer_id": {
                    "type": "string"
                },
                "filenames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "recording_name": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_end": {
                    "type": "string"
                },
                "tm_start": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "recording.WebhookMessage": {
            "type": "object",
            "properties": {
                "format": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_end": {
                    "type": "string"
                },
                "tm_start": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDAddressesPUT": {
            "type": "object",
            "required": [
                "addresses"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                }
            }
        },
        "request.BodyAgentsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ring_method": {
                    "description": "agent's ring method",
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDStatusPUT": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "status": {
                    "description": "agent's status",
                    "type": "string"
                }
            }
        },
        "request.BodyAgentsIDTagIDsPUT": {
            "type": "object",
            "required": [
                "tag_ids"
            ],
            "properties": {
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.BodyAgentsPOST": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "addresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission": {
                    "type": "integer"
                },
                "ring_method": {
                    "type": "string"
                },
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.BodyCallsPOST": {
            "type": "object",
            "required": [
                "destinations",
                "source"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "flow_id": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                }
            }
        },
        "request.BodyCampaignsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyCampaignsIDResourceInfoPUT": {
            "type": "object",
            "properties": {
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                }
            }
        },
        "request.BodyCampaignsIDStatusPUT": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "request.BodyCampaignsPOST": {
            "type": "object",
            "properties": {
                "actions": {
                    "description": "this actions will be stored to the flow",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "end_handle": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "next_campaign_id": {
                    "type": "string"
                },
                "outdial_id": {
                    "type": "string"
                },
                "outplan_id": {
                    "description": "resource info",
                    "type": "string"
                },
                "queue_id": {
                    "type": "string"
                },
                "service_level": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyChatbotsPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "engine_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyChatmessagesPOST": {
            "type": "object",
            "properties": {
                "chat_id": {
                    "type": "string"
                },
                "medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_chat-manager.git_models_media.Media"
                    }
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyChatsIDOwnerIDPUT": {
            "type": "object",
            "properties": {
                "owner_id": {
                    "type": "string"
                }
            }
        },
        "request.BodyChatsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyChatsPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "participant_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyConferencesPOST": {
            "type": "object",
            "required": [
                "type"
            ],
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "post_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "pre_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyCustomersPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "line_secret": {
                    "type": "string"
                },
                "line_token": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "permission_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "type": "string"
                },
                "webhook_method": {
                    "type": "string"
                },
                "webhook_uri": {
                    "type": "string"
                }
            }
        },
        "request.BodyExtensionsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BodyExtensionsPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "domain_id": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.BodyFlowsIDPUT": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyFlowsPOST": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyGroupcallsPOST": {
            "type": "object",
            "required": [
                "destinations",
                "source"
            ],
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "answer_method": {
                    "type": "string"
                },
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "flow_id": {
                    "type": "string"
                },
                "ring_method": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                }
            }
        },
        "request.BodyLoginPOST": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "request.BodyMessagesPOST": {
            "type": "object",
            "properties": {
                "destinations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/address.Address"
                    }
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersIDFlowIDPUT": {
            "type": "object",
            "properties": {
                "call_flow_id": {
                    "type": "string"
                },
                "message_flow_id": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyNumbersPOST": {
            "type": "object",
            "properties": {
                "call_flow_id": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "message_flow_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutdialsIDDataPUT": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutdialsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutdialsPOST": {
            "type": "object",
            "properties": {
                "campaign_id": {
                    "type": "string"
                },
                "data": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutplansIDDialInfoPUT": {
            "type": "object",
            "properties": {
                "dial_timeout": {
                    "type": "integer"
                },
                "max_try_count_0": {
                    "type": "integer"
                },
                "max_try_count_1": {
                    "type": "integer"
                },
                "max_try_count_2": {
                    "type": "integer"
                },
                "max_try_count_3": {
                    "type": "integer"
                },
                "max_try_count_4": {
                    "type": "integer"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "try_interval": {
                    "type": "integer"
                }
            }
        },
        "request.BodyOutplansIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyOutplansPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "dial_timeout": {
                    "type": "integer"
                },
                "max_try_count_0": {
                    "type": "integer"
                },
                "max_try_count_1": {
                    "type": "integer"
                },
                "max_try_count_2": {
                    "type": "integer"
                },
                "max_try_count_3": {
                    "type": "integer"
                },
                "max_try_count_4": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "$ref": "#/definitions/address.Address"
                },
                "try_interval": {
                    "type": "integer"
                }
            }
        },
        "request.BodyProvidersIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tech_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tech_postfix": {
                    "type": "string"
                },
                "tech_prefix": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyProvidersPOST": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "tech_headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "tech_postfix": {
                    "type": "string"
                },
                "tech_prefix": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.BodyQueuesIDActionsPUT": {
            "type": "object",
            "properties": {
                "timeout_service": {
                    "type": "integer"
                },
                "timeout_wait": {
                    "type": "integer"
                },
                "wait_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                }
            }
        },
        "request.BodyQueuesIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyQueuesIDTagIDsPUT": {
            "type": "object",
            "properties": {
                "tag_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "request.BodyRoutesPOST": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "provider_id": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "request.BodyTagsIDPUT": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "request.BodyTranscribesPOST": {
            "type": "object",
            "properties": {
                "direction": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "reference_id": {
                    "type": "string"
                },
                "transcribe_type": {
                    "type": "string"
                }
            }
        },
        "request.ParamConversationsIDMessagesPOST": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "request.ParamConversationsSetupPOST": {
            "type": "object",
            "properties": {
                "reference_type": {
                    "type": "string"
                }
            }
        },
        "response.BodyActiveflowsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/activeflow.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyAgentsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/agent.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyAvailableNumbersGET": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/availablenumber.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyCallsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/call.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyCampaignsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/campaign.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyCampaignsIDCampaigncallsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/campaigncall.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyChatbotcallsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chatbotcall.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyChatbotsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chatbot.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyChatmessagesGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/messagechat.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyChatsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/chat.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyConversationsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/conversation.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyConversationsIDMessagesGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_conversation-manager.git_models_message.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyCustomersGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customer.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyDomainsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyFlowsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/flow.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyGroupcallsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/groupcall.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyLoginPOST": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "response.BodyMessagesGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/gitlab.com_voipbin_bin-manager_message-manager.git_models_message.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyNumbersGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/number.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyOutdialsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/outdial.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyOutplansGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/outplan.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyQueuesGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/queue.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyRecordingsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/recording.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyTagsGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/tag.WebhookMessage"
                    }
                }
            }
        },
        "response.BodyTranscribesGET": {
            "type": "object",
            "properties": {
                "next_page_token": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transcribe.WebhookMessage"
                    }
                }
            }
        },
        "route.Route": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "provider_id": {
                    "type": "string"
                },
                "target": {
                    "description": "country code or all",
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "route.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "provider_id": {
                    "type": "string"
                },
                "target": {
                    "description": "country code or all",
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "stack.Stack": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/action.Action"
                    }
                },
                "id": {
                    "type": "string"
                },
                "return_action_id": {
                    "type": "string"
                },
                "return_stack_id": {
                    "type": "string"
                }
            }
        },
        "tag.Tag": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "description": "owner's id",
                    "type": "string"
                },
                "detail": {
                    "description": "tag's detail",
                    "type": "string"
                },
                "id": {
                    "description": "tag id",
                    "type": "string"
                },
                "name": {
                    "description": "tag's name",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                }
            }
        },
        "tag.WebhookMessage": {
            "type": "object",
            "properties": {
                "detail": {
                    "description": "tag's detail",
                    "type": "string"
                },
                "id": {
                    "description": "tag id",
                    "type": "string"
                },
                "name": {
                    "description": "tag's name",
                    "type": "string"
                },
                "tm_create": {
                    "description": "Created timestamp.",
                    "type": "string"
                },
                "tm_delete": {
                    "description": "Deleted timestamp.",
                    "type": "string"
                },
                "tm_update": {
                    "description": "Updated timestamp.",
                    "type": "string"
                }
            }
        },
        "target.Target": {
            "type": "object",
            "properties": {
                "destination": {
                    "$ref": "#/definitions/address.Address"
                },
                "parts": {
                    "description": "number of messages",
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "transcribe.Transcribe": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "description": "customer",
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "host_id": {
                    "description": "host id",
                    "type": "string"
                },
                "id": {
                    "description": "Transcribe id",
                    "type": "string"
                },
                "language": {
                    "description": "BCP47 type's language code. en-US",
                    "type": "string"
                },
                "reference_id": {
                    "description": "call/conference/recording's id",
                    "type": "string"
                },
                "reference_type": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "streaming_ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        },
        "transcribe.WebhookMessage": {
            "type": "object",
            "properties": {
                "customer_id": {
                    "description": "customer",
                    "type": "string"
                },
                "host_id": {
                    "description": "host id",
                    "type": "string"
                },
                "id": {
                    "description": "Transcribe id",
                    "type": "string"
                },
                "language": {
                    "description": "BCP47 type's language code. en-US",
                    "type": "string"
                },
                "reference_id": {
                    "description": "call/conference/recording's id",
                    "type": "string"
                },
                "reference_type": {
                    "description": "reference's type",
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tm_create": {
                    "description": "timestamp",
                    "type": "string"
                },
                "tm_delete": {
                    "type": "string"
                },
                "tm_update": {
                    "type": "string"
                }
            }
        }
    }
}