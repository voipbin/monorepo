// Code generated by MockGen. DO NOT EDIT.
// Source: main.go
//
// Generated by this command:
//
//	mockgen -package requestexternal -destination ./mock_main.go -source main.go -build_flags=-mod=mod
//

// Package requestexternal is a generated GoMock package.
package requestexternal

import (
	context "context"
	messagebird "monorepo/bin-message-manager/models/messagebird"
	telnyx "monorepo/bin-message-manager/models/telnyx"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRequestExternal is a mock of RequestExternal interface.
type MockRequestExternal struct {
	ctrl     *gomock.Controller
	recorder *MockRequestExternalMockRecorder
	isgomock struct{}
}

// MockRequestExternalMockRecorder is the mock recorder for MockRequestExternal.
type MockRequestExternalMockRecorder struct {
	mock *MockRequestExternal
}

// NewMockRequestExternal creates a new mock instance.
func NewMockRequestExternal(ctrl *gomock.Controller) *MockRequestExternal {
	mock := &MockRequestExternal{ctrl: ctrl}
	mock.recorder = &MockRequestExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestExternal) EXPECT() *MockRequestExternalMockRecorder {
	return m.recorder
}

// MessagebirdSendMessage mocks base method.
func (m *MockRequestExternal) MessagebirdSendMessage(ctx context.Context, sender string, destinations []string, text string) (*messagebird.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MessagebirdSendMessage", ctx, sender, destinations, text)
	ret0, _ := ret[0].(*messagebird.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MessagebirdSendMessage indicates an expected call of MessagebirdSendMessage.
func (mr *MockRequestExternalMockRecorder) MessagebirdSendMessage(ctx, sender, destinations, text any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MessagebirdSendMessage", reflect.TypeOf((*MockRequestExternal)(nil).MessagebirdSendMessage), ctx, sender, destinations, text)
}

// TelnyxSendMessage mocks base method.
func (m *MockRequestExternal) TelnyxSendMessage(ctx context.Context, source, destination, text string) (*telnyx.MessageResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TelnyxSendMessage", ctx, source, destination, text)
	ret0, _ := ret[0].(*telnyx.MessageResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TelnyxSendMessage indicates an expected call of TelnyxSendMessage.
func (mr *MockRequestExternalMockRecorder) TelnyxSendMessage(ctx, source, destination, text any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TelnyxSendMessage", reflect.TypeOf((*MockRequestExternal)(nil).TelnyxSendMessage), ctx, source, destination, text)
}
