// Code generated by MockGen. DO NOT EDIT.
// Source: main.go

// Package requestexternal is a generated GoMock package.
package requestexternal

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	messagebird "gitlab.com/voipbin/bin-manager/message-manager.git/models/messagebird"
)

// MockRequestExternal is a mock of RequestExternal interface.
type MockRequestExternal struct {
	ctrl     *gomock.Controller
	recorder *MockRequestExternalMockRecorder
}

// MockRequestExternalMockRecorder is the mock recorder for MockRequestExternal.
type MockRequestExternalMockRecorder struct {
	mock *MockRequestExternal
}

// NewMockRequestExternal creates a new mock instance.
func NewMockRequestExternal(ctrl *gomock.Controller) *MockRequestExternal {
	mock := &MockRequestExternal{ctrl: ctrl}
	mock.recorder = &MockRequestExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRequestExternal) EXPECT() *MockRequestExternalMockRecorder {
	return m.recorder
}

// MessagebirdSendMessage mocks base method.
func (m *MockRequestExternal) MessagebirdSendMessage(sender string, destinations []string, text string) (*messagebird.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "MessagebirdSendMessage", sender, destinations, text)
	ret0, _ := ret[0].(*messagebird.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// MessagebirdSendMessage indicates an expected call of MessagebirdSendMessage.
func (mr *MockRequestExternalMockRecorder) MessagebirdSendMessage(sender, destinations, text interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "MessagebirdSendMessage", reflect.TypeOf((*MockRequestExternal)(nil).MessagebirdSendMessage), sender, destinations, text)
}
