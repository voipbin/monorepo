// Code generated by MockGen. DO NOT EDIT.
// Source: recoveryhandler.go
//
// Generated by this command:
//
//	mockgen -package callhandler -destination ./mock_recoveryhandler.go -source recoveryhandler.go -build_flags=-mod=mod
//

// Package callhandler is a generated GoMock package.
package callhandler

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockRecoveryHandler is a mock of RecoveryHandler interface.
type MockRecoveryHandler struct {
	ctrl     *gomock.Controller
	recorder *MockRecoveryHandlerMockRecorder
	isgomock struct{}
}

// MockRecoveryHandlerMockRecorder is the mock recorder for MockRecoveryHandler.
type MockRecoveryHandlerMockRecorder struct {
	mock *MockRecoveryHandler
}

// NewMockRecoveryHandler creates a new mock instance.
func NewMockRecoveryHandler(ctrl *gomock.Controller) *MockRecoveryHandler {
	mock := &MockRecoveryHandler{ctrl: ctrl}
	mock.recorder = &MockRecoveryHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRecoveryHandler) EXPECT() *MockRecoveryHandlerMockRecorder {
	return m.recorder
}

// GetRecoveryDetail mocks base method.
func (m *MockRecoveryHandler) GetRecoveryDetail(ctx context.Context, callID string) (*recoveryDetail, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRecoveryDetail", ctx, callID)
	ret0, _ := ret[0].(*recoveryDetail)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRecoveryDetail indicates an expected call of GetRecoveryDetail.
func (mr *MockRecoveryHandlerMockRecorder) GetRecoveryDetail(ctx, callID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRecoveryDetail", reflect.TypeOf((*MockRecoveryHandler)(nil).GetRecoveryDetail), ctx, callID)
}
